	.text
	.amdgcn_target "amdgcn-amd-amdhsa--gfx1103"
	.p2align	2                               ; -- Begin function _Z6rotatejj
	.type	_Z6rotatejj,@function
_Z6rotatejj:                            ; @_Z6rotatejj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s1, s33
	s_mov_b32 s33, s32
	s_mov_b32 s0, 0
	v_sub_nc_u32_e64 v1, s0, v1
	v_alignbit_b32 v0, v0, v0, v1
	s_mov_b32 s33, s1
	s_setpc_b64 s[30:31]
.Lfunc_end0:
	.size	_Z6rotatejj, .Lfunc_end0-_Z6rotatejj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 34
; NumVgprs: 2
; ScratchSize: 0
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z9bitselectiii
	.type	_Z9bitselectiii,@function
_Z9bitselectiii:                        ; @_Z9bitselectiii
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s0, s33
	s_mov_b32 s33, s32
	v_bfi_b32 v0, v2, v1, v0
	s_mov_b32 s33, s0
	s_setpc_b64 s[30:31]
.Lfunc_end1:
	.size	_Z9bitselectiii, .Lfunc_end1-_Z9bitselectiii
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 28
; NumSgprs: 34
; NumVgprs: 3
; ScratchSize: 0
; MemoryBound: 0
	.text
	.hidden	sha256                          ; -- Begin function sha256
	.globl	sha256
	.p2align	2
	.type	sha256,@function
sha256:                                 ; @sha256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v21, s33 offset:1652 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:1656 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x680
	v_writelane_b32 v21, s30, 0
	v_writelane_b32 v21, s31, 1
	scratch_store_b32 off, v31, s33 offset:180 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr22 : SGPR spill to VGPR lane
	v_writelane_b32 v22, s6, 0
	v_writelane_b32 v22, s7, 1
	scratch_store_b32 off, v17, s33 offset:1632 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:1636 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:1640 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:1624 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:1644 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:1648 ; 4-byte Folded Spill
	v_mov_b32_e32 v12, v10
	scratch_load_b32 v10, off, s33 offset:1648 ; 4-byte Folded Reload
	scratch_store_b32 off, v12, s33 offset:1628 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v9
	scratch_load_b32 v9, off, s33 offset:1644 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v8
	v_mov_b32_e32 v15, v7
	scratch_load_b32 v7, off, s33 offset:1640 ; 4-byte Folded Reload
	v_mov_b32_e32 v8, v6
	scratch_load_b32 v6, off, s33 offset:1636 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v5
	scratch_load_b32 v5, off, s33 offset:1632 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v4
	scratch_load_b32 v4, off, s33 offset:1628 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v3
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v17, v0
	scratch_load_b32 v0, off, s33 offset:1624 ; 4-byte Folded Reload
	v_writelane_b32 v22, s15, 2
	v_writelane_b32 v22, s14, 3
	v_writelane_b32 v22, s13, 4
	v_writelane_b32 v22, s12, 5
	v_writelane_b32 v22, s10, 6
	v_writelane_b32 v22, s11, 7
	v_writelane_b32 v22, s8, 8
	v_writelane_b32 v22, s9, 9
	v_writelane_b32 v22, s4, 10
	v_writelane_b32 v22, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v20
	v_mov_b32_e32 v14, v19
	v_mov_b32_e32 v15, v18
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v17, s33
	scratch_store_b32 off, v16, s33 offset:4
	scratch_store_b128 off, v[12:15], s33 offset:16
	scratch_store_b128 off, v[8:11], s33 offset:32
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:96
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6rotatejj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6rotatejj@rel32@hi+12
	v_writelane_b32 v22, s0, 12
	v_writelane_b32 v22, s1, 13
	v_mov_b32_e32 v1, 26
	scratch_store_b32 off, v1, s33 offset:216 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1620 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, 21
	scratch_store_b32 off, v1, s33 offset:208 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1620 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1616 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, 7
	scratch_store_b32 off, v1, s33 offset:204 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1616 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z9bitselectiii@rel32@lo+4
	s_addc_u32 s1, s1, _Z9bitselectiii@rel32@hi+12
	v_writelane_b32 v22, s0, 14
	v_writelane_b32 v22, s1, 15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v4, off, s33 offset:112
	s_getpc_b64 s[2:3]
	s_add_u32 s2, s2, K@rel32@lo+4
	s_addc_u32 s3, s3, K@rel32@hi+12
	s_load_b32 s2, s[2:3], 0x0
	scratch_load_b128 v[0:3], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v4, v4, s2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v5, off, s33 offset:108
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, 30
	scratch_store_b32 off, v1, s33 offset:192 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1612 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, 19
	scratch_store_b32 off, v1, s33 offset:188 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1612 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1608 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_mov_b32 s2, 10
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1608 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:20
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1604 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1604 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1600 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1600 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:116
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+8
	s_addc_u32 s17, s17, K@rel32@hi+16
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1596 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1596 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1592 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1592 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1588 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1588 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1584 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1584 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:120
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+12
	s_addc_u32 s17, s17, K@rel32@hi+20
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1580 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1580 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1576 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1576 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:124
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1572 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1572 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1568 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1568 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:124
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+16
	s_addc_u32 s17, s17, K@rel32@hi+24
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1564 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1564 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1560 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1560 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1556 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1556 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1552 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1552 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:128
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+20
	s_addc_u32 s17, s17, K@rel32@hi+28
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1548 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1548 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1544 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1544 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1540 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1540 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1536 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1536 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:132
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+24
	s_addc_u32 s17, s17, K@rel32@hi+32
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1532 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1532 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1528 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1528 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:40
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1524 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1524 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1520 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1520 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:136
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+28
	s_addc_u32 s17, s17, K@rel32@hi+36
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1516 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1516 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1512 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1512 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:140
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1508 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1508 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1504 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1504 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:140
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+32
	s_addc_u32 s17, s17, K@rel32@hi+40
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1500 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1500 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1496 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1496 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:144
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1492 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1492 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1488 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1488 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:144
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+36
	s_addc_u32 s17, s17, K@rel32@hi+44
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1484 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1484 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1480 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1480 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:148
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1476 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1476 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1472 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1472 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:148
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+40
	s_addc_u32 s17, s17, K@rel32@hi+48
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1468 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1468 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1464 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1464 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:152
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1460 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1460 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1456 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1456 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:152
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+44
	s_addc_u32 s17, s17, K@rel32@hi+52
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1452 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1452 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1448 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1448 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:156
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1444 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1444 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1440 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1440 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:156
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+48
	s_addc_u32 s17, s17, K@rel32@hi+56
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1436 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1436 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1432 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1432 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:160
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1428 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1428 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1424 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1424 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:160
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+52
	s_addc_u32 s17, s17, K@rel32@hi+60
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1420 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1420 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1416 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1416 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:164
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1412 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1412 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1408 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1408 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:164
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+56
	s_addc_u32 s17, s17, K@rel32@hi+64
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1404 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1404 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1400 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1400 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:168
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1396 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1396 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1392 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1392 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:168
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+60
	s_addc_u32 s17, s17, K@rel32@hi+68
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1388 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1388 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1384 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1384 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:172
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1380 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1380 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1376 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1376 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:172
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+308
	s_addc_u32 s17, s17, K@rel32@hi+316
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1372 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1372 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1368 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1368 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:168
	v_mov_b32_e32 v1, 15
	scratch_store_b32 off, v1, s33 offset:236 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1364 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:168
	v_mov_b32_e32 v1, 13
	scratch_store_b32 off, v1, s33 offset:232 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1364 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v1, s2, v1
	scratch_load_b32 v2, off, s33 offset:148
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:1360 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	v_mov_b32_e32 v1, 25
	scratch_store_b32 off, v1, s33 offset:228 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:116
	v_mov_b32_e32 v1, 14
	scratch_store_b32 off, v1, s33 offset:220 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1360 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	s_mov_b32 s3, 3
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1356 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1356 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1352 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1352 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:112
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+64
	s_addc_u32 s17, s17, K@rel32@hi+72
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1348 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1348 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1344 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1344 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1340 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1340 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1336 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1336 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1332 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1332 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1328 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1328 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:116
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+68
	s_addc_u32 s17, s17, K@rel32@hi+76
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1324 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1324 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1320 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1320 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1316 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1316 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:156
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:1312 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1312 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1308 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1308 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1304 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1304 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:120
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+72
	s_addc_u32 s17, s17, K@rel32@hi+80
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1300 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1300 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1296 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1296 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1292 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1292 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1288 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:1288 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:112
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1284 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1284 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1280 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1280 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:124
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+76
	s_addc_u32 s17, s17, K@rel32@hi+84
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1276 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1276 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1272 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1272 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1268 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1268 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:164
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1264 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1264 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1260 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1260 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1256 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1256 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:128
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+80
	s_addc_u32 s17, s17, K@rel32@hi+88
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1252 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1252 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1248 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1248 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1244 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1244 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1240 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1240 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1236 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1236 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1232 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1232 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:132
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+84
	s_addc_u32 s17, s17, K@rel32@hi+92
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1228 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1228 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1224 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1224 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1220 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1220 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:1216 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1216 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1212 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1212 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1208 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1208 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:136
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+88
	s_addc_u32 s17, s17, K@rel32@hi+96
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1204 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1204 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1200 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1200 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1196 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1196 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1192 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:1192 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1188 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1188 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1184 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1184 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:140
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+92
	s_addc_u32 s17, s17, K@rel32@hi+100
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1180 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1180 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1176 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1176 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1172 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1172 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1168 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1168 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:144
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1164 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1164 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1160 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1160 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:144
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+96
	s_addc_u32 s17, s17, K@rel32@hi+104
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1156 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1156 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1152 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1152 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1148 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1148 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1144 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1144 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:148
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1140 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1140 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1136 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1136 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:148
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+100
	s_addc_u32 s17, s17, K@rel32@hi+108
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1132 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1132 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1128 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1128 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1124 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1124 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:1120 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1120 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:152
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1116 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1116 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1112 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1112 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:152
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+104
	s_addc_u32 s17, s17, K@rel32@hi+112
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1108 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1108 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1104 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1104 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1100 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1100 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:148
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1096 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:1096 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1092 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1092 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1088 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1088 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:156
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+108
	s_addc_u32 s17, s17, K@rel32@hi+116
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1084 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1084 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1080 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1080 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1076 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1076 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1072 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1072 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:160
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1068 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1068 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1064 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1064 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:160
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+112
	s_addc_u32 s17, s17, K@rel32@hi+120
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1060 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1060 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1056 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1056 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1052 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1052 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:156
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1048 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1048 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:164
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1044 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1044 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1040 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1040 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:164
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+116
	s_addc_u32 s17, s17, K@rel32@hi+124
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1036 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1036 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1032 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1032 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1028 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1028 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:1024 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:1024 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:168
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1020 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1020 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1016 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1016 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:168
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+120
	s_addc_u32 s17, s17, K@rel32@hi+128
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1012 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1012 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1008 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1008 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:1004 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1004 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:164
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:1000 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:1000 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:996 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:996 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:992 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:992 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:172
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+124
	s_addc_u32 s17, s17, K@rel32@hi+132
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:988 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:988 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:984 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:984 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:980 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:980 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:148
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:976 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:976 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:972 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:972 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:968 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:968 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:112
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+128
	s_addc_u32 s17, s17, K@rel32@hi+136
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:964 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:964 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:960 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:960 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:956 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:956 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:952 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:952 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:948 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:948 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:944 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:944 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:116
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+132
	s_addc_u32 s17, s17, K@rel32@hi+140
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:940 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:940 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:936 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:936 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:932 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:932 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:156
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:928 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:924 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:924 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:920 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:120
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+136
	s_addc_u32 s17, s17, K@rel32@hi+144
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:916 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:916 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:912 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:908 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:908 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:904 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:904 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:112
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:900 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:900 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:896 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:896 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:124
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+140
	s_addc_u32 s17, s17, K@rel32@hi+148
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:892 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:892 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:888 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:888 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:884 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:884 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:164
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:880 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:876 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:876 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:872 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:128
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+144
	s_addc_u32 s17, s17, K@rel32@hi+152
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:868 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:868 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:864 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:860 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:860 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:856 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:852 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:852 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:848 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:848 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:132
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+148
	s_addc_u32 s17, s17, K@rel32@hi+156
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:844 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:844 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:840 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:840 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:836 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:836 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:832 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:832 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:828 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:828 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:824 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:824 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:136
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+152
	s_addc_u32 s17, s17, K@rel32@hi+160
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:820 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:820 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:816 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:816 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:812 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:812 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:808 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:808 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:804 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:804 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:800 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:800 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:140
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+156
	s_addc_u32 s17, s17, K@rel32@hi+164
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:796 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:796 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:792 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:792 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:788 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:788 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:784 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:784 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:144
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:780 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:780 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:776 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:776 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:144
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+160
	s_addc_u32 s17, s17, K@rel32@hi+168
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:772 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:772 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:768 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:764 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:764 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:760 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:148
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:756 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:756 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:752 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:752 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:148
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+164
	s_addc_u32 s17, s17, K@rel32@hi+172
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:748 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:748 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:744 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:744 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:740 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:740 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:736 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:736 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:152
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:732 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:732 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:728 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:152
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+168
	s_addc_u32 s17, s17, K@rel32@hi+176
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:724 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:724 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:720 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:716 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:716 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:148
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:712 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:708 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:708 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:704 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:704 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:156
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+172
	s_addc_u32 s17, s17, K@rel32@hi+180
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:700 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:700 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:696 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:696 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:692 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:692 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:688 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:688 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:160
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:684 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:684 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:680 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:680 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:160
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+176
	s_addc_u32 s17, s17, K@rel32@hi+184
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:676 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:676 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:672 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:672 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:668 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:668 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:156
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:664 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:664 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:164
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:660 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:660 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:656 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:656 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:164
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+180
	s_addc_u32 s17, s17, K@rel32@hi+188
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:652 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:652 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:648 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:648 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:644 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:644 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:640 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:640 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:168
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:636 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:636 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:632 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:632 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:168
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+184
	s_addc_u32 s17, s17, K@rel32@hi+192
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:628 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:628 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:624 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:624 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:620 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:620 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:164
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:616 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:616 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:612 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:612 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:608 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:608 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:172
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+188
	s_addc_u32 s17, s17, K@rel32@hi+196
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:604 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:604 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:600 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:600 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:596 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:596 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:148
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:592 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:592 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:588 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:588 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:584 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:584 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:112
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+192
	s_addc_u32 s17, s17, K@rel32@hi+200
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:580 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:580 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:576 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:576 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:572 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:572 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:568 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:564 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:564 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:560 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:116
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+196
	s_addc_u32 s17, s17, K@rel32@hi+204
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:556 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:556 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:552 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:548 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:548 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:156
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:544 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:544 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:540 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:540 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:536 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:536 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:120
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+200
	s_addc_u32 s17, s17, K@rel32@hi+208
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:532 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:532 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:528 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:524 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:524 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:520 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:112
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:516 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:516 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:512 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:124
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+204
	s_addc_u32 s17, s17, K@rel32@hi+212
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:508 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:508 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:504 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:500 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:500 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:164
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:496 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:496 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:492 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:492 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:488 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:128
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+208
	s_addc_u32 s17, s17, K@rel32@hi+216
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:484 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:484 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:480 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:476 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:476 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:472 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:468 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:468 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:464 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:132
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+212
	s_addc_u32 s17, s17, K@rel32@hi+220
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:460 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:460 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:456 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:452 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:452 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:448 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:448 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:444 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:444 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:440 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:440 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:136
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+216
	s_addc_u32 s17, s17, K@rel32@hi+224
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:436 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:436 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:432 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:428 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:428 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:424 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:420 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:420 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:416 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:416 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:140
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+220
	s_addc_u32 s17, s17, K@rel32@hi+228
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:412 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:412 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:408 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:408 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:404 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:404 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:400 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:400 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:144
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:396 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:396 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:392 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:392 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:144
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+224
	s_addc_u32 s17, s17, K@rel32@hi+232
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:388 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:388 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:384 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:384 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:380 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:380 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:376 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:376 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:148
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:372 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:372 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:368 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:368 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:148
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+228
	s_addc_u32 s17, s17, K@rel32@hi+236
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:364 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:364 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:360 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:360 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:356 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:144
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:356 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:352 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:352 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:152
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:348 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:348 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:344 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:344 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:152
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+232
	s_addc_u32 s17, s17, K@rel32@hi+240
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:340 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:340 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:336 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:336 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:332 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:148
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:332 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:148
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:328 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:328 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:324 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:324 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:320 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:156
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+236
	s_addc_u32 s17, s17, K@rel32@hi+244
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:316 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:316 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:312 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:312 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:308 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:152
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:308 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:304 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:304 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:160
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:300 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:300 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:296 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:296 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:160
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+240
	s_addc_u32 s17, s17, K@rel32@hi+248
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:292 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:292 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:288 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:284 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:156
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:284 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:156
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:280 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:168
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:280 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:164
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:276 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:276 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:272 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:272 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:164
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+244
	s_addc_u32 s17, s17, K@rel32@hi+252
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v4, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:268 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:268 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:264 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:264 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:260 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:160
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:260 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s2, v6
	scratch_load_b32 v7, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:256 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:172
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s3, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:168
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:252 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:252 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:248 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:248 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:168
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+248
	s_addc_u32 s17, s17, K@rel32@hi+256
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s16, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:84
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:244 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:244 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:240 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:240 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:96
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:224 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:164
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:224 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:164
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s2, v2
	scratch_load_b32 v3, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:212 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:212 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s3, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:200 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:200 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:196 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:196 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:172
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+252
	s_addc_u32 s17, s17, K@rel32@hi+260
	s_load_b32 s3, s[16:17], 0x0
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v0, v0, s3, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	scratch_store_b32 off, v0, s33 offset:184 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:184 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:176 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 14
	v_readlane_b32 s1, v22, 15
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:80
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_add_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_add_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:96
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_add_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_add_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v21, 0
	v_readlane_b32 s31, v21, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v21, off, s33 offset:1652 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:1656 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffff980
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end2:
	.size	sha256, .Lfunc_end2-sha256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 130212
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 1664
; MemoryBound: 0
	.text
	.hidden	SHA256_fresh                    ; -- Begin function SHA256_fresh
	.globl	SHA256_fresh
	.p2align	2
	.type	SHA256_fresh,@function
SHA256_fresh:                           ; @SHA256_fresh
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s25, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v21, s33 offset:1192 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:1196 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x4c0
	v_writelane_b32 v21, s30, 0
	v_writelane_b32 v21, s31, 1
	scratch_store_b32 off, v31, s33 offset:176 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr22 : SGPR spill to VGPR lane
	v_writelane_b32 v22, s6, 0
	v_writelane_b32 v22, s7, 1
	scratch_store_b32 off, v17, s33 offset:1172 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:1176 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:1180 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:1164 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:1184 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:1188 ; 4-byte Folded Spill
	v_mov_b32_e32 v12, v10
	scratch_load_b32 v10, off, s33 offset:1188 ; 4-byte Folded Reload
	scratch_store_b32 off, v12, s33 offset:1168 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v9
	scratch_load_b32 v9, off, s33 offset:1184 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v8
	v_mov_b32_e32 v15, v7
	scratch_load_b32 v7, off, s33 offset:1180 ; 4-byte Folded Reload
	v_mov_b32_e32 v8, v6
	scratch_load_b32 v6, off, s33 offset:1176 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v5
	scratch_load_b32 v5, off, s33 offset:1172 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v4
	scratch_load_b32 v4, off, s33 offset:1168 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v3
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v17, v0
	scratch_load_b32 v0, off, s33 offset:1164 ; 4-byte Folded Reload
	v_writelane_b32 v22, s15, 2
	v_writelane_b32 v22, s14, 3
	v_writelane_b32 v22, s13, 4
	v_writelane_b32 v22, s12, 5
	v_writelane_b32 v22, s10, 6
	v_writelane_b32 v22, s11, 7
	v_writelane_b32 v22, s8, 8
	v_writelane_b32 v22, s9, 9
	v_writelane_b32 v22, s4, 10
	v_writelane_b32 v22, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v20
	v_mov_b32_e32 v14, v19
	v_mov_b32_e32 v15, v18
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v17, s33
	scratch_store_b32 off, v16, s33 offset:4
	scratch_store_b128 off, v[12:15], s33 offset:16
	scratch_store_b128 off, v[8:11], s33 offset:32
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:80
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, K@rel32@lo+256
	s_addc_u32 s1, s1, K@rel32@hi+264
	s_load_b32 s0, s[0:1], 0x0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_nc_u32_e64 v0, s0, v0
	scratch_load_b32 v1, off, s33
	s_mov_b32 s20, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s20
	scratch_store_b32 v1, v0, off
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, K@rel32@lo+260
	s_addc_u32 s1, s1, K@rel32@hi+268
	s_load_b32 s0, s[0:1], 0x0
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_nc_u32_e64 v0, s0, v0
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s20
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v0, off, s33 offset:20
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:84
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, K@rel32@lo+264
	s_addc_u32 s1, s1, K@rel32@hi+272
	s_load_b32 s0, s[0:1], 0x0
	s_waitcnt lgkmcnt(0)
	v_writelane_b32 v22, s0, 12
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6rotatejj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6rotatejj@rel32@hi+12
	v_writelane_b32 v22, s0, 13
	v_writelane_b32 v22, s1, 14
	v_mov_b32_e32 v1, 26
	scratch_store_b32 off, v1, s33 offset:208 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1160 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, 21
	scratch_store_b32 off, v1, s33 offset:200 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1160 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1156 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, 7
	scratch_store_b32 off, v1, s33 offset:196 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 12
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1156 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, s0
	scratch_store_b32 off, v0, s33 offset:1152 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, K@rel32@lo+272
	s_addc_u32 s1, s1, K@rel32@hi+280
	v_writelane_b32 v22, s0, 15
	v_writelane_b32 v22, s1, 16
	s_load_b32 s17, s[0:1], 0x0
	s_getpc_b64 s[2:3]
	s_add_u32 s2, s2, K@rel32@lo+268
	s_addc_u32 s3, s3, K@rel32@hi+276
	s_load_b32 s16, s[2:3], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v2, v0, off
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z9bitselectiii@rel32@lo+4
	s_addc_u32 s1, s1, _Z9bitselectiii@rel32@hi+12
	v_writelane_b32 v22, s0, 17
	v_writelane_b32 v22, s1, 18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s17
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1152 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, v2
	scratch_load_b32 v1, off, s33
	s_mov_b32 s19, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s19
	scratch_store_b32 v1, v0, off
	s_getpc_b64 s[16:17]
	s_add_u32 s16, s16, K@rel32@lo+276
	s_addc_u32 s17, s17, K@rel32@hi+284
	s_load_b32 s16, s[16:17], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_nc_u32_e64 v0, s16, v0
	scratch_store_b32 off, v0, s33 offset:1136 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, 30
	scratch_store_b32 off, v1, s33 offset:188 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1144 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, 19
	scratch_store_b32 off, v1, s33 offset:184 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1148 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_mov_b32 s16, 10
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1148 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1144 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor3_b32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:1140 ; 4-byte Folded Spill
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+284
	s_addc_u32 s23, s23, K@rel32@hi+292
	s_load_b32 s18, s[22:23], 0x0
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+280
	s_addc_u32 s23, s23, K@rel32@hi+288
	s_load_b32 s17, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v2, v0, off
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s18
	v_mov_b32_e32 v1, s17
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:1140 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:1136 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v2, v3
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s19
	scratch_store_b32 v2, v0, off
	scratch_load_b32 v0, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:88
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+288
	s_addc_u32 s23, s23, K@rel32@hi+296
	s_load_b32 s17, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1132 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1132 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1128 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1128 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, s17
	scratch_store_b32 off, v0, s33 offset:1124 ; 4-byte Folded Spill
	s_load_b32 s17, s[2:3], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s17
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1124 ; 4-byte Folded Reload
	scratch_load_b32 v3, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v2, v3
	scratch_load_b32 v2, off, s33
	s_mov_b32 s17, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s17
	scratch_store_b32 v2, v0, off
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+292
	s_addc_u32 s23, s23, K@rel32@hi+300
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_nc_u32_e64 v0, s18, v0
	scratch_store_b32 off, v0, s33 offset:1108 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1116 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1120 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1120 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1116 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor3_b32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:1112 ; 4-byte Folded Spill
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+296
	s_addc_u32 s23, s23, K@rel32@hi+304
	v_writelane_b32 v22, s22, 19
	v_writelane_b32 v22, s23, 20
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v0, v4
	s_waitcnt lgkmcnt(0)
	v_xor_b32_e64 v2, v0, s18
	v_mov_b32_e32 v0, s18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:1112 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:1108 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v2, v3
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s17
	scratch_store_b32 v2, v0, off
	scratch_load_b32 v0, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:92
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+300
	s_addc_u32 s23, s23, K@rel32@hi+308
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1104 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1104 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:1100 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1100 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, s18
	scratch_store_b32 off, v0, s33 offset:1096 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1096 ; 4-byte Folded Reload
	scratch_load_b32 v3, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v2, v3
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	scratch_store_b32 v2, v0, off
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+304
	s_addc_u32 s23, s23, K@rel32@hi+312
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_nc_u32_e64 v0, s18, v0
	scratch_store_b32 off, v0, s33 offset:1080 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1088 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1092 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1092 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1088 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor3_b32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:1084 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:1084 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:1080 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v2, v3
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 v2, v0, off
	scratch_load_b32 v0, off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1076 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1076 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:96
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+20
	s_addc_u32 s23, s23, K@rel32@hi+28
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1072 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1072 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1068 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1068 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:100
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+24
	s_addc_u32 s23, s23, K@rel32@hi+32
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1064 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1064 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:40
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1060 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1060 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:104
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+28
	s_addc_u32 s23, s23, K@rel32@hi+36
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1056 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1056 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:108
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1052 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1052 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:108
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+32
	s_addc_u32 s23, s23, K@rel32@hi+40
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1048 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1048 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1044 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1044 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:112
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+36
	s_addc_u32 s23, s23, K@rel32@hi+44
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1040 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1040 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1036 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1036 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:116
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+40
	s_addc_u32 s23, s23, K@rel32@hi+48
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1032 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1032 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1028 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1028 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:120
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+44
	s_addc_u32 s23, s23, K@rel32@hi+52
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1024 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1024 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:124
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1020 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1020 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:124
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+48
	s_addc_u32 s23, s23, K@rel32@hi+56
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1016 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1016 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1012 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1012 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:128
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+52
	s_addc_u32 s23, s23, K@rel32@hi+60
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1008 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1008 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1004 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1004 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:132
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+56
	s_addc_u32 s23, s23, K@rel32@hi+64
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:1000 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1000 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:996 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:996 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:136
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+60
	s_addc_u32 s23, s23, K@rel32@hi+68
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:992 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:992 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:140
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:988 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:988 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:140
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+308
	s_addc_u32 s23, s23, K@rel32@hi+316
	s_load_b32 s18, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:984 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:984 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:136
	v_mov_b32_e32 v1, 15
	scratch_store_b32 off, v1, s33 offset:228 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:980 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	v_mov_b32_e32 v1, 13
	scratch_store_b32 off, v1, s33 offset:224 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:980 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v1, s16, v1
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:976 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, 25
	scratch_store_b32 off, v1, s33 offset:220 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	v_mov_b32_e32 v1, 14
	scratch_store_b32 off, v1, s33 offset:212 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:976 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	s_mov_b32 s18, 3
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:972 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:972 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:80
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+64
	s_addc_u32 s23, s23, K@rel32@hi+72
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:968 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:968 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:964 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:964 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:960 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:960 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:956 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:956 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:84
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+68
	s_addc_u32 s23, s23, K@rel32@hi+76
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:952 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:952 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:948 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:948 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:944 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:944 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:940 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:940 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:88
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+72
	s_addc_u32 s23, s23, K@rel32@hi+80
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:936 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:936 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:932 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:932 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:928 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:924 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:924 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:92
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+76
	s_addc_u32 s23, s23, K@rel32@hi+84
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:920 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:920 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:916 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:916 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:912 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:908 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:908 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:96
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+80
	s_addc_u32 s23, s23, K@rel32@hi+88
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:904 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:904 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:900 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:900 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:896 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:896 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:892 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:892 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:100
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+84
	s_addc_u32 s23, s23, K@rel32@hi+92
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:888 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:888 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:884 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:884 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:880 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:876 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:876 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:104
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+88
	s_addc_u32 s23, s23, K@rel32@hi+96
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:872 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:872 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:868 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:868 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:864 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:860 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:860 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:108
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+92
	s_addc_u32 s23, s23, K@rel32@hi+100
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:856 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:856 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:852 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:852 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:848 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:848 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:844 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:844 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:112
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+96
	s_addc_u32 s23, s23, K@rel32@hi+104
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:840 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:840 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:836 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:836 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:832 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:832 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:828 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:828 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:116
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+100
	s_addc_u32 s23, s23, K@rel32@hi+108
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:824 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:824 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:820 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:820 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:816 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:816 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:812 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:812 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:120
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+104
	s_addc_u32 s23, s23, K@rel32@hi+112
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:808 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:808 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:804 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:804 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:800 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:800 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:112
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:796 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:796 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:124
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+108
	s_addc_u32 s23, s23, K@rel32@hi+116
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:792 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:792 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:788 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:788 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:784 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:784 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:780 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:780 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:128
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+112
	s_addc_u32 s23, s23, K@rel32@hi+120
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:776 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:776 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:772 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:772 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:768 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:764 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:764 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:132
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+116
	s_addc_u32 s23, s23, K@rel32@hi+124
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:760 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:760 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:756 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:756 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:752 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:752 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:748 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:748 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:136
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+120
	s_addc_u32 s23, s23, K@rel32@hi+128
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:744 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:744 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:740 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:740 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:736 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:736 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:732 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:732 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:140
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+124
	s_addc_u32 s23, s23, K@rel32@hi+132
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:728 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:728 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:724 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:724 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:720 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:716 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:716 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:80
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+128
	s_addc_u32 s23, s23, K@rel32@hi+136
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:712 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:712 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:708 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:708 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:704 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:704 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:700 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:700 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:84
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+132
	s_addc_u32 s23, s23, K@rel32@hi+140
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:696 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:696 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:692 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:692 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:688 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:688 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:684 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:684 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:88
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+136
	s_addc_u32 s23, s23, K@rel32@hi+144
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:680 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:680 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:676 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:676 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:672 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:672 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:668 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:668 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:92
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+140
	s_addc_u32 s23, s23, K@rel32@hi+148
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:664 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:664 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:660 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:660 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:656 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:656 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:652 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:652 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:96
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+144
	s_addc_u32 s23, s23, K@rel32@hi+152
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:648 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:648 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:644 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:644 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:640 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:640 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:636 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:636 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:100
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+148
	s_addc_u32 s23, s23, K@rel32@hi+156
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:632 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:632 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:628 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:628 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:624 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:624 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:620 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:620 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:104
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+152
	s_addc_u32 s23, s23, K@rel32@hi+160
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:616 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:616 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:612 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:612 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:608 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:608 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:604 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:604 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:108
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+156
	s_addc_u32 s23, s23, K@rel32@hi+164
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:600 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:600 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:596 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:596 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:592 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:592 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:588 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:588 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:112
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+160
	s_addc_u32 s23, s23, K@rel32@hi+168
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:584 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:584 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:580 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:580 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:576 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:576 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:572 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:572 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:116
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+164
	s_addc_u32 s23, s23, K@rel32@hi+172
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:568 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:568 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:564 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:564 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:560 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:556 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:556 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:120
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+168
	s_addc_u32 s23, s23, K@rel32@hi+176
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:552 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:552 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:548 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:548 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:544 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:544 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:112
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:540 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:540 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:124
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+172
	s_addc_u32 s23, s23, K@rel32@hi+180
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:536 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:536 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:532 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:532 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:528 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:524 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:524 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:128
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+176
	s_addc_u32 s23, s23, K@rel32@hi+184
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:520 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:520 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:516 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:516 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:512 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:508 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:508 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:132
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+180
	s_addc_u32 s23, s23, K@rel32@hi+188
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:504 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:504 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:500 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:500 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:496 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:496 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:492 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:492 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:136
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+184
	s_addc_u32 s23, s23, K@rel32@hi+192
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:488 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:488 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:484 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:484 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:480 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:476 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:476 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:140
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+188
	s_addc_u32 s23, s23, K@rel32@hi+196
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:472 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:472 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:468 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:468 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:464 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:460 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:460 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:80
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+192
	s_addc_u32 s23, s23, K@rel32@hi+200
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:456 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:456 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:452 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:452 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:448 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:448 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:84
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:444 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:444 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:84
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+196
	s_addc_u32 s23, s23, K@rel32@hi+204
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:440 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:440 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:436 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:436 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:432 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:428 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:428 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:88
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+200
	s_addc_u32 s23, s23, K@rel32@hi+208
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:424 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:424 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:420 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:84
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:420 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:416 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:416 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:80
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:412 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:412 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:92
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+204
	s_addc_u32 s23, s23, K@rel32@hi+212
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:408 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:408 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:404 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:88
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:404 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:400 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:400 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:396 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:396 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:96
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+208
	s_addc_u32 s23, s23, K@rel32@hi+216
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:392 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:392 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:388 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:388 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:384 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:384 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:100
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:380 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:380 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:100
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+212
	s_addc_u32 s23, s23, K@rel32@hi+220
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:376 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:376 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:372 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:96
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:372 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:368 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:368 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:104
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:364 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:364 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:104
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+216
	s_addc_u32 s23, s23, K@rel32@hi+224
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:360 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:360 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:356 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:100
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:356 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:352 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:352 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:348 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:348 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:108
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+220
	s_addc_u32 s23, s23, K@rel32@hi+228
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:344 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:344 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:340 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:104
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:340 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:336 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:336 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:332 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:332 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:112
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+224
	s_addc_u32 s23, s23, K@rel32@hi+232
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:328 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:328 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:324 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:108
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:324 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:320 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:316 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:316 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:116
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+228
	s_addc_u32 s23, s23, K@rel32@hi+236
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:312 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:312 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:308 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:112
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:308 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:304 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:304 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:300 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:300 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:120
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+232
	s_addc_u32 s23, s23, K@rel32@hi+240
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:296 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:296 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:292 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:116
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:292 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:288 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:112
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:284 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:284 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:124
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+236
	s_addc_u32 s23, s23, K@rel32@hi+244
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:280 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:280 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:276 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:120
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:276 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:272 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:272 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v4
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:268 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:268 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:128
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+240
	s_addc_u32 s23, s23, K@rel32@hi+248
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:264 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:264 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v5
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v5, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:260 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:124
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:260 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:256 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:136
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v5
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v4
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:252 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:252 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:132
	s_getpc_b64 s[22:23]
	s_add_u32 s22, s22, K@rel32@lo+244
	s_addc_u32 s23, s23, K@rel32@hi+252
	s_load_b32 s21, s[22:23], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s21, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:248 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:248 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s20
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v2, s20
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v4
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:244 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:128
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:244 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_lshrrev_b32_e64 v6, s16, v6
	scratch_load_b32 v7, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v6, v7
	scratch_store_b32 off, v0, s33 offset:240 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v5
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:140
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33 offset:240 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v6
	v_lshrrev_b32_e64 v8, s18, v8
	v_xor3_b32 v2, v2, v7, v8
	v_mov_b32_e32 v3, v5
	v_add3_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:136
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:236 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:236 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:136
	s_getpc_b64 s[20:21]
	s_add_u32 s20, s20, K@rel32@lo+248
	s_addc_u32 s21, s21, K@rel32@hi+256
	s_load_b32 s20, s[20:21], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s20, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:232 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:232 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s19
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v1, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v4
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:228 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v3
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v3, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:216 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:216 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, v2
	scratch_load_b32 v2, off, s33 offset:132
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s16, v2
	scratch_load_b32 v3, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_xad_u32 v0, v0, v2, v3
	scratch_store_b32 off, v0, s33 offset:204 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:80
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:204 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v4, s18, v4
	v_xor3_b32 v6, v2, v3, v4
	scratch_load_b128 v[2:5], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_add3_u32 v0, v0, v6, v7
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:192 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:192 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v7, v0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v6, off, s33 offset:140
	s_getpc_b64 s[18:19]
	s_add_u32 s18, s18, K@rel32@lo+252
	s_addc_u32 s19, s19, K@rel32@hi+260
	s_load_b32 s18, s[18:19], 0x0
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v2
	s_waitcnt lgkmcnt(0)
	v_add3_u32 v6, v6, s18, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v7, v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	scratch_store_b128 v0, v[2:5], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	scratch_store_b32 off, v0, s33 offset:180 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 13
	v_readlane_b32 s1, v22, 14
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:180 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v5, v0, v1
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s17
	scratch_load_b32 v0, v0, off
	v_mov_b32_e32 v1, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s0, v22, 17
	v_readlane_b32 s1, v22, 18
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v0
	v_xad_u32 v5, v5, v6, v7
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v3
	v_xor_b32_e64 v2, v2, v0
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s4, v22, 19
	v_readlane_b32 s5, v22, 20
	v_readlane_b32 s0, v22, 15
	v_readlane_b32 s1, v22, 16
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	s_load_b32 s7, s[4:5], 0x0
	s_getpc_b64 s[4:5]
	s_add_u32 s4, s4, K@rel32@lo+312
	s_addc_u32 s5, s5, K@rel32@hi+320
	s_load_b32 s6, s[4:5], 0x0
	s_getpc_b64 s[4:5]
	s_add_u32 s4, s4, K@rel32@lo+316
	s_addc_u32 s5, s5, K@rel32@hi+324
	s_load_b32 s5, s[4:5], 0x0
	s_getpc_b64 s[8:9]
	s_add_u32 s8, s8, K@rel32@lo+320
	s_addc_u32 s9, s9, K@rel32@hi+328
	s_load_b32 s4, s[8:9], 0x0
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s7
	v_mov_b32_e32 v6, s6
	v_mov_b32_e32 v5, s5
	v_mov_b32_e32 v4, s4
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[0:3], off, s33 offset:144
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_add_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_add_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	s_load_b32 s3, s[2:3], 0x0
	s_load_b32 s2, s[0:1], 0x0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, K@rel32@lo+324
	s_addc_u32 s1, s1, K@rel32@hi+332
	s_load_b32 s1, s[0:1], 0x0
	s_getpc_b64 s[4:5]
	s_add_u32 s4, s4, K@rel32@lo+328
	s_addc_u32 s5, s5, K@rel32@hi+336
	s_load_b32 s0, s[4:5], 0x0
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s3
	v_mov_b32_e32 v6, s2
	v_mov_b32_e32 v5, s1
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[0:3], off, s33 offset:160
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_add_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_add_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v21, 0
	v_readlane_b32 s31, v21, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v21, off, s33 offset:1192 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:1196 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffb40
	s_mov_b32 s33, s25
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end3:
	.size	SHA256_fresh, .Lfunc_end3-SHA256_fresh
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 144020
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 1216
; MemoryBound: 0
	.text
	.hidden	sha256SwapByteOrder             ; -- Begin function sha256SwapByteOrder
	.globl	sha256SwapByteOrder
	.p2align	2
	.type	sha256SwapByteOrder,@function
sha256SwapByteOrder:                    ; @sha256SwapByteOrder
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s21, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v7, s33 offset:64 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:68 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x50
	v_writelane_b32 v7, s30, 0
	v_writelane_b32 v7, s31, 1
	scratch_store_b32 off, v31, s33 offset:44 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr8 : SGPR spill to VGPR lane
	v_writelane_b32 v8, s6, 0
	v_writelane_b32 v8, s7, 1
	v_writelane_b32 v8, s15, 2
	v_writelane_b32 v8, s14, 3
	v_writelane_b32 v8, s13, 4
	v_writelane_b32 v8, s12, 5
	v_writelane_b32 v8, s10, 6
	v_writelane_b32 v8, s11, 7
	v_writelane_b32 v8, s8, 8
	v_writelane_b32 v8, s9, 9
	v_writelane_b32 v8, s4, 10
	v_writelane_b32 v8, s5, 11
	scratch_store_b32 off, v0, s33
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_getpc_b64 s[18:19]
	s_add_u32 s18, s18, ES@rel32@lo+4
	s_addc_u32 s19, s19, ES@rel32@hi+12
	s_load_b32 s0, s[18:19], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6rotatejj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6rotatejj@rel32@hi+12
	v_writelane_b32 v8, s0, 12
	v_writelane_b32 v8, s1, 13
	v_mov_b32_e32 v1, 24
	scratch_store_b32 off, v1, s33 offset:52 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:44 ; 4-byte Folded Reload
	v_readlane_b32 s15, v8, 2
	v_readlane_b32 s14, v8, 3
	v_readlane_b32 s13, v8, 4
	v_readlane_b32 s12, v8, 5
	v_readlane_b32 s10, v8, 6
	v_readlane_b32 s11, v8, 7
	v_readlane_b32 s8, v8, 8
	v_readlane_b32 s9, v8, 9
	v_readlane_b32 s6, v8, 0
	v_readlane_b32 s7, v8, 1
	v_readlane_b32 s4, v8, 10
	v_readlane_b32 s5, v8, 11
	v_readlane_b32 s0, v8, 12
	v_readlane_b32 s1, v8, 13
	scratch_store_b32 off, v0, s33 offset:60 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	s_getpc_b64 s[2:3]
	s_add_u32 s2, s2, ES@rel32@lo+8
	s_addc_u32 s3, s3, ES@rel32@hi+16
	s_load_b32 s16, s[2:3], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s16
	v_mov_b32_e32 v2, 8
	scratch_store_b32 off, v2, s33 offset:40 ; 4-byte Folded Spill
	v_mov_b32_e32 v1, v2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:44 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:52 ; 4-byte Folded Reload
	v_readlane_b32 s15, v8, 2
	v_readlane_b32 s14, v8, 3
	v_readlane_b32 s13, v8, 4
	v_readlane_b32 s12, v8, 5
	v_readlane_b32 s10, v8, 6
	v_readlane_b32 s11, v8, 7
	v_readlane_b32 s8, v8, 8
	v_readlane_b32 s9, v8, 9
	v_readlane_b32 s6, v8, 0
	v_readlane_b32 s7, v8, 1
	v_readlane_b32 s4, v8, 10
	v_readlane_b32 s5, v8, 11
	v_readlane_b32 s0, v8, 12
	v_readlane_b32 s1, v8, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:60 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_or_b32_e64 v0, v0, v3
	scratch_store_b32 off, v0, s33 offset:32 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_mov_b32 s16, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s16
	scratch_load_b32 v0, v0, off
	s_load_b32 s17, s[18:19], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s17
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:44 ; 4-byte Folded Reload
	v_readlane_b32 s15, v8, 2
	v_readlane_b32 s14, v8, 3
	v_readlane_b32 s13, v8, 4
	v_readlane_b32 s12, v8, 5
	v_readlane_b32 s10, v8, 6
	v_readlane_b32 s11, v8, 7
	v_readlane_b32 s8, v8, 8
	v_readlane_b32 s9, v8, 9
	v_readlane_b32 s6, v8, 0
	v_readlane_b32 s7, v8, 1
	v_readlane_b32 s4, v8, 10
	v_readlane_b32 s5, v8, 11
	v_readlane_b32 s0, v8, 12
	v_readlane_b32 s1, v8, 13
	scratch_store_b32 off, v0, s33 offset:56 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s16
	scratch_load_b32 v0, v0, off
	s_load_b32 s16, s[2:3], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s16
	v_mov_b32_e32 v1, v2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:44 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:52 ; 4-byte Folded Reload
	v_readlane_b32 s15, v8, 2
	v_readlane_b32 s14, v8, 3
	v_readlane_b32 s13, v8, 4
	v_readlane_b32 s12, v8, 5
	v_readlane_b32 s10, v8, 6
	v_readlane_b32 s11, v8, 7
	v_readlane_b32 s8, v8, 8
	v_readlane_b32 s9, v8, 9
	v_readlane_b32 s6, v8, 0
	v_readlane_b32 s7, v8, 1
	v_readlane_b32 s4, v8, 10
	v_readlane_b32 s5, v8, 11
	v_readlane_b32 s0, v8, 12
	v_readlane_b32 s1, v8, 13
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:56 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_or_b32_e64 v6, v0, v3
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_load_b32 v0, v0, off
	s_load_b32 s16, s[18:19], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:44 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:40 ; 4-byte Folded Reload
	v_readlane_b32 s15, v8, 2
	v_readlane_b32 s14, v8, 3
	v_readlane_b32 s13, v8, 4
	v_readlane_b32 s12, v8, 5
	v_readlane_b32 s10, v8, 6
	v_readlane_b32 s11, v8, 7
	v_readlane_b32 s8, v8, 8
	v_readlane_b32 s9, v8, 9
	v_readlane_b32 s6, v8, 0
	v_readlane_b32 s7, v8, 1
	v_readlane_b32 s4, v8, 10
	v_readlane_b32 s5, v8, 11
	v_readlane_b32 s0, v8, 12
	v_readlane_b32 s1, v8, 13
	scratch_store_b32 off, v0, s33 offset:48 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_load_b32 v0, v0, off
	s_load_b32 s16, s[2:3], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:44 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:52 ; 4-byte Folded Reload
	v_readlane_b32 s15, v8, 2
	v_readlane_b32 s14, v8, 3
	v_readlane_b32 s13, v8, 4
	v_readlane_b32 s12, v8, 5
	v_readlane_b32 s10, v8, 6
	v_readlane_b32 s11, v8, 7
	v_readlane_b32 s8, v8, 8
	v_readlane_b32 s9, v8, 9
	v_readlane_b32 s6, v8, 0
	v_readlane_b32 s7, v8, 1
	v_readlane_b32 s4, v8, 10
	v_readlane_b32 s5, v8, 11
	v_readlane_b32 s0, v8, 12
	v_readlane_b32 s1, v8, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_or_b32_e64 v5, v0, v2
	scratch_load_b32 v0, off, s33
	s_mov_b32 s16, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s16
	scratch_load_b32 v0, v0, off
	s_load_b32 s17, s[18:19], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s17
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:44 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:40 ; 4-byte Folded Reload
	v_readlane_b32 s15, v8, 2
	v_readlane_b32 s14, v8, 3
	v_readlane_b32 s13, v8, 4
	v_readlane_b32 s12, v8, 5
	v_readlane_b32 s10, v8, 6
	v_readlane_b32 s11, v8, 7
	v_readlane_b32 s8, v8, 8
	v_readlane_b32 s9, v8, 9
	v_readlane_b32 s6, v8, 0
	v_readlane_b32 s7, v8, 1
	v_readlane_b32 s4, v8, 10
	v_readlane_b32 s5, v8, 11
	v_readlane_b32 s0, v8, 12
	v_readlane_b32 s1, v8, 13
	scratch_store_b32 off, v0, s33 offset:36 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s16
	scratch_load_b32 v0, v0, off
	s_load_b32 s2, s[2:3], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:36 ; 4-byte Folded Reload
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:32 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_or_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_load_b128 v[0:3], off, s33 offset:16
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v7, 0
	v_readlane_b32 s31, v7, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v7, off, s33 offset:64 ; 4-byte Folded Reload
	scratch_load_b32 v8, off, s33 offset:68 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffb0
	s_mov_b32 s33, s21
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end4:
	.size	sha256SwapByteOrder, .Lfunc_end4-sha256SwapByteOrder
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1824
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 80
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __printf_alloc
	.type	__printf_alloc,@function
__printf_alloc:                         ; @__printf_alloc
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s10, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v4, s33 offset:44 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 52
	v_mov_b32_e32 v1, v0
	scratch_store_b32 off, v1, s33 offset:16 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s1, s1, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s0, s[0:1], 0x0
	s_mov_b32 s1, 0x1f4
	s_waitcnt lgkmcnt(0)
	s_cmp_lt_i32 s0, s1
	s_mov_b32 s1, 0x48
	s_mov_b32 s0, 24
	s_cselect_b32 s0, s0, s1
	s_load_b64 s[0:1], s[8:9], s0 offset:0x0
	v_mov_b32_e32 v0, 0
	s_waitcnt lgkmcnt(0)
	s_mov_b64 s[2:3], s[0:1]
                                        ; implicit-def: $vgpr4 : SGPR spill to VGPR lane
	v_writelane_b32 v4, s2, 0
	v_writelane_b32 v4, s3, 1
	global_load_b32 v2, v0, s[0:1] offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v2, s33 offset:12 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr2
	global_load_b32 v0, v0, s[0:1] glc
                                        ; implicit-def: $sgpr0
	s_mov_b32 s0, 8
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 off, v1, s33 offset:8 ; 4-byte Folded Spill
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v4, s0, 2
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:4 ; 4-byte Folded Spill
.LBB5_1:                                ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v4, 3
	v_readlane_b32 s2, v4, 4
	v_readlane_b32 s0, v4, 5
	v_readlane_b32 s3, v4, 2
	v_writelane_b32 v4, s3, 6
	v_writelane_b32 v4, s1, 7
	scratch_load_b32 v1, off, s33 offset:12 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:4  ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v2, s33 offset:24 ; 4-byte Folded Spill
	v_add_nc_u32_e64 v0, v0, v2
	v_cmp_le_u32_e64 s1, v0, v1
	s_mov_b32 s3, -1
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s3
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v4, s0, 8
	s_or_b32 s2, s2, exec_lo
	v_writelane_b32 v4, s2, 9
	v_writelane_b32 v4, s2, 10
	v_writelane_b32 v4, s0, 11
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v4, s0, 12
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB5_5
; %bb.2:                                ;   in Loop: Header=BB5_1 Depth=1
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v4, 9
	v_readlane_b32 s0, v4, 8
	v_readlane_b32 s2, v4, 0
	v_readlane_b32 s3, v4, 1
	scratch_load_b32 v1, off, s33 offset:24 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:16 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v1, v0
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v1
	v_mov_b32_e32 v0, 0
	global_atomic_cmpswap_b32 v0, v0, v[2:3], s[2:3] glc
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s2, v0, v1
	s_mov_b32 s3, 0
	s_and_not1_b32 s0, s0, exec_lo
	s_and_not1_b32 s1, s1, exec_lo
	s_and_b32 s2, s2, exec_lo
	s_or_b32 s1, s1, s2
	v_writelane_b32 v4, s1, 10
	v_writelane_b32 v4, s0, 11
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
	s_branch .LBB5_5
.LBB5_3:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 0
	v_readlane_b32 s1, v4, 1
	scratch_load_b32 v1, off, s33 offset:36 ; 4-byte Folded Reload
	s_mov_b64 s[4:5], 8
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s4
	s_mov_b32 s1, s5
	s_add_u32 s2, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr2 killed $sgpr2 def $sgpr2_sgpr3
	s_mov_b32 s3, s0
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	s_mov_b32 s1, s2
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	s_mov_b32 s0, s3
	v_mov_b32_e32 v1, v2
	v_add_co_u32 v0, s1, s1, v0
	v_add_co_ci_u32_e64 v2, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:28 ; 8-byte Folded Spill
.LBB5_4:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 13
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b64 v[2:3], off, s33 offset:28 ; 8-byte Folded Reload
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], s0, v[2:3]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v2
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v4, off, s33 offset:44 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffcc
	s_mov_b32 s33, s10
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.LBB5_5:                                ; %Flow
                                        ;   in Loop: Header=BB5_1 Depth=1
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 12
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s3, v4, 7
	v_readlane_b32 s4, v4, 6
	v_readlane_b32 s2, v4, 10
	v_readlane_b32 s1, v4, 11
	scratch_load_b32 v0, off, s33 offset:24 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:20 ; 4-byte Folded Reload
	s_mov_b32 s0, s2
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s4
	s_and_not1_b32 s3, s3, exec_lo
	s_and_b32 s4, s1, exec_lo
	s_or_b32 s3, s3, s4
	v_writelane_b32 v4, s3, 14
	v_writelane_b32 v4, s3, 3
	v_writelane_b32 v4, s2, 4
	v_writelane_b32 v4, s1, 5
	s_mov_b32 s1, s0
	v_writelane_b32 v4, s1, 2
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 s1, s0
	v_writelane_b32 v4, s1, 15
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	scratch_store_b32 off, v0, s33 offset:40 ; 4-byte Folded Spill
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB5_1
; %bb.6:                                ; %loop.exit.guard
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 15
	s_or_b32 exec_lo, exec_lo, s0
; %bb.7:                                ; %loop.exit.guard
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 14
	scratch_load_b32 v0, off, s33 offset:40 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:36 ; 4-byte Folded Spill
	s_mov_b32 s1, -1
	s_xor_b32 s0, s0, s1
	s_mov_b64 s[2:3], 0
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v1, 0
	scratch_store_b64 off, v[0:1], s33 offset:28 ; 8-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v4, s1, 13
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB5_4
	s_branch .LBB5_3
.Lfunc_end5:
	.size	__printf_alloc, .Lfunc_end5-__printf_alloc
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1212
; NumSgprs: 34
; NumVgprs: 5
; ScratchSize: 52
; MemoryBound: 0
	.text
	.hidden	dbgPrint_v4                     ; -- Begin function dbgPrint_v4
	.globl	dbgPrint_v4
	.p2align	2
	.type	dbgPrint_v4,@function
dbgPrint_v4:                            ; @dbgPrint_v4
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v7, s33 offset:44 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:48 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 64
	v_writelane_b32 v7, s30, 0
	v_writelane_b32 v7, s31, 1
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[0:3], s33
	scratch_load_b128 v[0:3], off, s33
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	scratch_store_b32 off, v4, s33 offset:40 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v1
	scratch_store_b32 off, v4, s33 offset:36 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v2
	scratch_store_b32 off, v4, s33 offset:32 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __printf_alloc@rel32@lo+4
	s_addc_u32 s1, s1, __printf_alloc@rel32@hi+12
	v_mov_b32_e32 v0, 20
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:20 ; 8-byte Folded Spill
; %bb.1:
	scratch_load_b64 v[0:1], off, s33 offset:20 ; 8-byte Folded Reload
	s_mov_b64 s[0:1], 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u64_e64 s1, v[0:1], s[0:1]
	s_mov_b32 s0, exec_lo
                                        ; implicit-def: $vgpr8 : SGPR spill to VGPR lane
	v_writelane_b32 v8, s0, 0
	s_or_saveexec_b32 s17, -1
	scratch_store_b32 off, v8, s33 offset:16 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s17
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB6_3
; %bb.2:
	scratch_load_b64 v[0:1], off, s33 offset:20 ; 8-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:28 ; 4-byte Folded Reload
	scratch_load_b32 v3, off, s33 offset:32 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:36 ; 4-byte Folded Reload
	scratch_load_b32 v5, off, s33 offset:40 ; 4-byte Folded Reload
	v_mov_b32_e32 v6, 1
	s_waitcnt vmcnt(4)
	global_store_b32 v[0:1], v6, off
	s_waitcnt vmcnt(0)
	global_store_b32 v[0:1], v5, off offset:4
	global_store_b32 v[0:1], v4, off offset:8
	global_store_b32 v[0:1], v3, off offset:12
	global_store_b32 v[0:1], v2, off offset:16
.LBB6_3:
	s_or_saveexec_b32 s17, -1
	scratch_load_b32 v8, off, s33 offset:16 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s17
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v8, 0
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s30, v7, 0
	v_readlane_b32 s31, v7, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v7, off, s33 offset:44 ; 4-byte Folded Reload
	scratch_load_b32 v8, off, s33 offset:48 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffc0
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end6:
	.size	dbgPrint_v4, .Lfunc_end6-dbgPrint_v4
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 440
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 116
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __ockl_mul_hi_u64
	.type	__ockl_mul_hi_u64,@function
__ockl_mul_hi_u64:                      ; @__ockl_mul_hi_u64
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s5, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 12
	scratch_store_b32 off, v2, s33 offset:4 ; 4-byte Folded Spill
	v_mov_b32_e32 v2, v1
	scratch_load_b32 v1, off, s33 offset:4  ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	v_mov_b32_e32 v8, v0
	scratch_load_b32 v0, off, s33           ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v0
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
	s_mov_b32 s0, 32
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	v_lshrrev_b64 v[6:7], s0, v[3:4]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v3, v1
	v_lshrrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v8
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	v_mul_hi_u32 v2, v1, v0
	v_mov_b32_e32 v7, v6
	v_mad_u64_u32 v[8:9], s1, v1, v7, 0
	v_mov_b32_e32 v10, v8
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v1, s1
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v8, v9
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v3
	v_lshlrev_b64 v[8:9], s0, v[8:9]
	v_mov_b32_e32 v3, v9
	v_or_b32_e64 v1, v1, v3
	v_mov_b32_e32 v3, v10
	v_mov_b32_e32 v6, v8
	v_or_b32_e64 v8, v3, v6
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v1
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v1, s1
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v1
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v6, v8
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v9
	v_add_co_u32 v1, s2, v1, v6
	v_add_co_ci_u32_e64 v3, s2, v2, v3, s2
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v2
	s_mov_b64 s[2:3], 0xffffffff
	s_mov_b32 s4, s3
	v_and_b32_e64 v3, v3, s4
	v_mov_b32_e32 v6, v1
                                        ; kill: def $sgpr2 killed $sgpr2 killed $sgpr2_sgpr3
	v_and_b32_e64 v10, v6, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v3
	v_lshrrev_b64 v[2:3], s0, v[1:2]
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr4_vgpr5 killed $exec
	v_mad_u64_u32 v[5:6], s2, v4, v0, 0
	v_mov_b32_e32 v8, v5
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_mov_b32_e32 v0, v9
	v_mov_b32_e32 v5, v6
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v1
	v_lshlrev_b64 v[5:6], s0, v[5:6]
	v_mov_b32_e32 v1, v6
	v_or_b32_e64 v0, v0, v1
	v_mov_b32_e32 v1, v8
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	v_or_b32_e64 v8, v1, v5
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v6, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v5, v9
	v_add_co_u32 v0, s2, v0, v6
	v_add_co_ci_u32_e64 v5, s2, v1, v5, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v5
	v_mad_u64_u32 v[5:6], s2, v4, v7, 0
	v_mov_b32_e32 v8, v5
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v4, s1
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v4
	v_mov_b32_e32 v4, v9
	v_mov_b32_e32 v5, v6
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v7, s1
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v7
	v_lshlrev_b64 v[6:7], s0, v[5:6]
	v_mov_b32_e32 v5, v7
	v_or_b32_e64 v4, v4, v5
	v_mov_b32_e32 v5, v8
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	v_or_b32_e64 v6, v5, v6
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v4
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v5, v6
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v7
	v_add_co_u32 v6, s1, v4, v5
	v_add_co_ci_u32_e64 v2, s1, v2, v3, s1
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v2
	v_lshrrev_b64 v[4:5], s0, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s1, v1, v3
	v_add_co_ci_u32_e64 v0, s1, v0, v2, s1
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	v_lshrrev_b64 v[1:2], s0, v[1:2]
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_add_i32 s32, s32, -12
	s_mov_b32 s33, s5
	s_setpc_b64 s[30:31]
.Lfunc_end7:
	.size	__ockl_mul_hi_u64, .Lfunc_end7-__ockl_mul_hi_u64
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 576
; NumSgprs: 34
; NumVgprs: 12
; ScratchSize: 12
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z6mul_himm
	.type	_Z6mul_himm,@function
_Z6mul_himm:                            ; @_Z6mul_himm
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_mul_hi_u64@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_mul_hi_u64@rel32@hi+12
	s_mov_b32 s33, s16
	s_setpc_b64 s[0:1]
.Lfunc_end8:
	.size	_Z6mul_himm, .Lfunc_end8-_Z6mul_himm
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 12
; MemoryBound: 0
	.text
	.hidden	longModuloByMul256              ; -- Begin function longModuloByMul256
	.globl	longModuloByMul256
	.p2align	2
	.type	longModuloByMul256,@function
longModuloByMul256:                     ; @longModuloByMul256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v16, s33 offset:240 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x100
	v_writelane_b32 v16, s30, 0
	v_writelane_b32 v16, s31, 1
	scratch_store_b32 off, v31, s33 offset:200 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr17 : SGPR spill to VGPR lane
	v_writelane_b32 v17, s6, 0
	v_writelane_b32 v17, s7, 1
	scratch_store_b32 off, v9, s33 offset:228 ; 4-byte Folded Spill
	v_mov_b32_e32 v9, v7
	v_mov_b32_e32 v13, v6
	v_mov_b32_e32 v14, v5
	scratch_store_b32 off, v4, s33 offset:236 ; 4-byte Folded Spill
	scratch_store_b32 off, v3, s33 offset:232 ; 4-byte Folded Spill
	v_mov_b32_e32 v6, v2
	scratch_load_b32 v2, off, s33 offset:236 ; 4-byte Folded Reload
	v_mov_b32_e32 v7, v1
	scratch_load_b32 v1, off, s33 offset:232 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v0
	scratch_load_b32 v0, off, s33 offset:228 ; 4-byte Folded Reload
	v_writelane_b32 v17, s15, 2
	v_writelane_b32 v17, s14, 3
	v_writelane_b32 v17, s13, 4
	v_writelane_b32 v17, s12, 5
	v_writelane_b32 v17, s10, 6
	v_writelane_b32 v17, s11, 7
	v_writelane_b32 v17, s8, 8
	v_writelane_b32 v17, s9, 9
	v_writelane_b32 v17, s4, 10
	v_writelane_b32 v17, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v14
	v_mov_b32_e32 v4, v13
	v_mov_b32_e32 v5, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v7
	v_mov_b32_e32 v14, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v15, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v10
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[12:15], s33
	scratch_store_b128 off, v[2:5], s33 offset:16
	scratch_store_b32 off, v8, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_store_b32 off, v11, s33 offset:48
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v1, 0
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_mov_b32 s0, 32
	v_writelane_b32 v17, s0, 12
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s0, v[0:1]
	scratch_load_b32 v0, off, s33 offset:28
	s_mov_b32 s1, 0
	v_writelane_b32 v17, s1, 13
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:64
	scratch_load_b64 v[6:7], off, s33 offset:64
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s0, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s0, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_himm@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_himm@rel32@hi+12
	v_writelane_b32 v17, s0, 14
	v_writelane_b32 v17, s1, 15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v17, 2
	v_readlane_b32 s14, v17, 3
	v_readlane_b32 s13, v17, 4
	v_readlane_b32 s12, v17, 5
	v_readlane_b32 s10, v17, 6
	v_readlane_b32 s11, v17, 7
	v_readlane_b32 s8, v17, 8
	v_readlane_b32 s9, v17, 9
	v_readlane_b32 s6, v17, 0
	v_readlane_b32 s7, v17, 1
	v_readlane_b32 s4, v17, 10
	v_readlane_b32 s5, v17, 11
	v_readlane_b32 s0, v17, 14
	v_readlane_b32 s1, v17, 15
	v_readlane_b32 s2, v17, 12
	v_readlane_b32 s3, v17, 13
	scratch_store_b32 off, v0, s33 offset:224 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:224 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[1:2], off, s33 offset:64
	scratch_load_b64 v[3:4], off, s33 offset:72
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:24
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:80
	scratch_load_b64 v[6:7], off, s33 offset:80
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v17, 2
	v_readlane_b32 s14, v17, 3
	v_readlane_b32 s13, v17, 4
	v_readlane_b32 s12, v17, 5
	v_readlane_b32 s10, v17, 6
	v_readlane_b32 s11, v17, 7
	v_readlane_b32 s8, v17, 8
	v_readlane_b32 s9, v17, 9
	v_readlane_b32 s6, v17, 0
	v_readlane_b32 s7, v17, 1
	v_readlane_b32 s4, v17, 10
	v_readlane_b32 s5, v17, 11
	v_readlane_b32 s0, v17, 14
	v_readlane_b32 s1, v17, 15
	v_readlane_b32 s2, v17, 12
	v_readlane_b32 s3, v17, 13
	scratch_store_b32 off, v0, s33 offset:220 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:220 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:88
	scratch_load_b64 v[1:2], off, s33 offset:80
	scratch_load_b64 v[3:4], off, s33 offset:88
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:20
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b64 v[6:7], off, s33 offset:96
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v17, 2
	v_readlane_b32 s14, v17, 3
	v_readlane_b32 s13, v17, 4
	v_readlane_b32 s12, v17, 5
	v_readlane_b32 s10, v17, 6
	v_readlane_b32 s11, v17, 7
	v_readlane_b32 s8, v17, 8
	v_readlane_b32 s9, v17, 9
	v_readlane_b32 s6, v17, 0
	v_readlane_b32 s7, v17, 1
	v_readlane_b32 s4, v17, 10
	v_readlane_b32 s5, v17, 11
	v_readlane_b32 s0, v17, 14
	v_readlane_b32 s1, v17, 15
	v_readlane_b32 s2, v17, 12
	v_readlane_b32 s3, v17, 13
	scratch_store_b32 off, v0, s33 offset:216 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:104
	scratch_load_b64 v[1:2], off, s33 offset:96
	scratch_load_b64 v[3:4], off, s33 offset:104
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:16
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:112
	scratch_load_b64 v[6:7], off, s33 offset:112
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v17, 2
	v_readlane_b32 s14, v17, 3
	v_readlane_b32 s13, v17, 4
	v_readlane_b32 s12, v17, 5
	v_readlane_b32 s10, v17, 6
	v_readlane_b32 s11, v17, 7
	v_readlane_b32 s8, v17, 8
	v_readlane_b32 s9, v17, 9
	v_readlane_b32 s6, v17, 0
	v_readlane_b32 s7, v17, 1
	v_readlane_b32 s4, v17, 10
	v_readlane_b32 s5, v17, 11
	v_readlane_b32 s0, v17, 14
	v_readlane_b32 s1, v17, 15
	v_readlane_b32 s2, v17, 12
	v_readlane_b32 s3, v17, 13
	scratch_store_b32 off, v0, s33 offset:212 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:212 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_load_b64 v[1:2], off, s33 offset:112
	scratch_load_b64 v[3:4], off, s33 offset:120
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:12
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b64 v[6:7], off, s33 offset:128
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v17, 2
	v_readlane_b32 s14, v17, 3
	v_readlane_b32 s13, v17, 4
	v_readlane_b32 s12, v17, 5
	v_readlane_b32 s10, v17, 6
	v_readlane_b32 s11, v17, 7
	v_readlane_b32 s8, v17, 8
	v_readlane_b32 s9, v17, 9
	v_readlane_b32 s6, v17, 0
	v_readlane_b32 s7, v17, 1
	v_readlane_b32 s4, v17, 10
	v_readlane_b32 s5, v17, 11
	v_readlane_b32 s0, v17, 14
	v_readlane_b32 s1, v17, 15
	v_readlane_b32 s2, v17, 12
	v_readlane_b32 s3, v17, 13
	scratch_store_b32 off, v0, s33 offset:208 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:208 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:136
	scratch_load_b64 v[1:2], off, s33 offset:128
	scratch_load_b64 v[3:4], off, s33 offset:136
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:8
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b64 v[6:7], off, s33 offset:144
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v17, 2
	v_readlane_b32 s14, v17, 3
	v_readlane_b32 s13, v17, 4
	v_readlane_b32 s12, v17, 5
	v_readlane_b32 s10, v17, 6
	v_readlane_b32 s11, v17, 7
	v_readlane_b32 s8, v17, 8
	v_readlane_b32 s9, v17, 9
	v_readlane_b32 s6, v17, 0
	v_readlane_b32 s7, v17, 1
	v_readlane_b32 s4, v17, 10
	v_readlane_b32 s5, v17, 11
	v_readlane_b32 s0, v17, 14
	v_readlane_b32 s1, v17, 15
	v_readlane_b32 s2, v17, 12
	v_readlane_b32 s3, v17, 13
	scratch_store_b32 off, v0, s33 offset:204 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:204 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b64 v[1:2], off, s33 offset:144
	scratch_load_b64 v[3:4], off, s33 offset:152
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:4
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b64 v[6:7], off, s33 offset:160
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:200 ; 4-byte Folded Reload
	v_readlane_b32 s15, v17, 2
	v_readlane_b32 s14, v17, 3
	v_readlane_b32 s13, v17, 4
	v_readlane_b32 s12, v17, 5
	v_readlane_b32 s10, v17, 6
	v_readlane_b32 s11, v17, 7
	v_readlane_b32 s8, v17, 8
	v_readlane_b32 s9, v17, 9
	v_readlane_b32 s6, v17, 0
	v_readlane_b32 s7, v17, 1
	v_readlane_b32 s4, v17, 10
	v_readlane_b32 s5, v17, 11
	v_readlane_b32 s0, v17, 14
	v_readlane_b32 s1, v17, 15
	v_readlane_b32 s2, v17, 12
	v_readlane_b32 s3, v17, 13
	scratch_store_b32 off, v0, s33 offset:196 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b64 v[1:2], off, s33 offset:160
	scratch_load_b64 v[3:4], off, s33 offset:168
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b64 v[6:7], off, s33 offset:176
	scratch_load_b64 v[4:5], off, s33 offset:40
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s1, v17, 12
	v_readlane_b32 s0, v17, 13
	scratch_store_b32 off, v0, s33 offset:192 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:192 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b64 v[1:2], off, s33 offset:176
	scratch_load_b64 v[3:4], off, s33 offset:184
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s2, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s1, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s2, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s1, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s0, v0, v3
	v_sub_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b32 v0, off, s33 offset:56
	v_readlane_b32 s30, v16, 0
	v_readlane_b32 s31, v16, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v16, off, s33 offset:240 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff00
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end9:
	.size	longModuloByMul256, .Lfunc_end9-longModuloByMul256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 4432
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 268
; MemoryBound: 0
	.text
	.hidden	longModuloByMul384              ; -- Begin function longModuloByMul384
	.globl	longModuloByMul384
	.p2align	2
	.type	longModuloByMul384,@function
longModuloByMul384:                     ; @longModuloByMul384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v20, s33 offset:344 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:348 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x170
	v_writelane_b32 v20, s30, 0
	v_writelane_b32 v20, s31, 1
	scratch_store_b32 off, v31, s33 offset:280 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr21 : SGPR spill to VGPR lane
	v_writelane_b32 v21, s6, 0
	v_writelane_b32 v21, s7, 1
	scratch_store_b32 off, v13, s33 offset:324 ; 4-byte Folded Spill
	scratch_store_b32 off, v11, s33 offset:336 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:340 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v8
	scratch_load_b32 v8, off, s33 offset:340 ; 4-byte Folded Reload
	scratch_store_b32 off, v10, s33 offset:332 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v7
	scratch_load_b32 v7, off, s33 offset:336 ; 4-byte Folded Reload
	v_mov_b32_e32 v17, v6
	v_mov_b32_e32 v18, v5
	v_mov_b32_e32 v6, v4
	scratch_store_b32 off, v3, s33 offset:328 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v2
	scratch_load_b32 v2, off, s33 offset:332 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v1
	scratch_load_b32 v1, off, s33 offset:328 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v0
	scratch_load_b32 v0, off, s33 offset:324 ; 4-byte Folded Reload
	v_writelane_b32 v21, s15, 2
	v_writelane_b32 v21, s14, 3
	v_writelane_b32 v21, s13, 4
	v_writelane_b32 v21, s12, 5
	v_writelane_b32 v21, s10, 6
	v_writelane_b32 v21, s11, 7
	v_writelane_b32 v21, s8, 8
	v_writelane_b32 v21, s9, 9
	v_writelane_b32 v21, s4, 10
	v_writelane_b32 v21, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v9
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v8
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v7, v18
	v_mov_b32_e32 v8, v17
	v_mov_b32_e32 v9, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v11
	v_mov_b32_e32 v18, v10
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v19, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v14
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[16:19], s33
	scratch_store_b128 off, v[6:9], s33 offset:16
	scratch_store_b128 off, v[2:5], s33 offset:32
	scratch_store_b32 off, v12, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_store_b32 off, v15, s33 offset:64
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v1, 0
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_mov_b32 s0, 32
	v_writelane_b32 v21, s0, 12
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s0, v[0:1]
	scratch_load_b32 v0, off, s33 offset:44
	s_mov_b32 s1, 0
	v_writelane_b32 v21, s1, 13
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:80
	scratch_load_b64 v[6:7], off, s33 offset:80
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s0, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s0, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_himm@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_himm@rel32@hi+12
	v_writelane_b32 v21, s0, 14
	v_writelane_b32 v21, s1, 15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:320 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:320 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:88
	scratch_load_b64 v[1:2], off, s33 offset:80
	scratch_load_b64 v[3:4], off, s33 offset:88
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:40
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b64 v[6:7], off, s33 offset:96
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:316 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:316 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:104
	scratch_load_b64 v[1:2], off, s33 offset:96
	scratch_load_b64 v[3:4], off, s33 offset:104
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:36
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:112
	scratch_load_b64 v[6:7], off, s33 offset:112
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:312 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:312 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_load_b64 v[1:2], off, s33 offset:112
	scratch_load_b64 v[3:4], off, s33 offset:120
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:32
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b64 v[6:7], off, s33 offset:128
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:308 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:308 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:136
	scratch_load_b64 v[1:2], off, s33 offset:128
	scratch_load_b64 v[3:4], off, s33 offset:136
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:28
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b64 v[6:7], off, s33 offset:144
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:304 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:304 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b64 v[1:2], off, s33 offset:144
	scratch_load_b64 v[3:4], off, s33 offset:152
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:24
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b64 v[6:7], off, s33 offset:160
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:300 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:300 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b64 v[1:2], off, s33 offset:160
	scratch_load_b64 v[3:4], off, s33 offset:168
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:20
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b64 v[6:7], off, s33 offset:176
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:296 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:296 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b64 v[1:2], off, s33 offset:176
	scratch_load_b64 v[3:4], off, s33 offset:184
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:16
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b64 v[6:7], off, s33 offset:192
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:292 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:292 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b64 v[1:2], off, s33 offset:192
	scratch_load_b64 v[3:4], off, s33 offset:200
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:12
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b64 v[6:7], off, s33 offset:208
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:288 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:288 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b64 v[1:2], off, s33 offset:208
	scratch_load_b64 v[3:4], off, s33 offset:216
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:8
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b64 v[6:7], off, s33 offset:224
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:284 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:284 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b64 v[1:2], off, s33 offset:224
	scratch_load_b64 v[3:4], off, s33 offset:232
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33 offset:4
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b64 v[6:7], off, s33 offset:240
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 14
	v_readlane_b32 s1, v21, 15
	v_readlane_b32 s2, v21, 12
	v_readlane_b32 s3, v21, 13
	scratch_store_b32 off, v0, s33 offset:276 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:276 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b64 v[1:2], off, s33 offset:240
	scratch_load_b64 v[3:4], off, s33 offset:248
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s16, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s16, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr17
                                        ; implicit-def: $sgpr17
	v_mov_b32_e32 v0, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s16, v0, v3
	v_sub_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[3:4], s2, v[0:1]
	scratch_load_b32 v0, off, s33
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b64 v[6:7], off, s33 offset:256
	scratch_load_b64 v[4:5], off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[6:7]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[2:3], s2, v[4:5]
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v2, v4
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s1, v21, 12
	v_readlane_b32 s0, v21, 13
	scratch_store_b32 off, v0, s33 offset:272 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:272 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], v0, v[1:2]
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b64 v[1:2], off, s33 offset:256
	scratch_load_b64 v[3:4], off, s33 offset:264
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[5:6], s2, v0, v7, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_lshrrev_b64 v[3:4], s1, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s2, v0, v7, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s1, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_sub_co_u32 v0, s0, v0, v3
	v_sub_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b32 v0, off, s33 offset:72
	v_readlane_b32 s30, v20, 0
	v_readlane_b32 s31, v20, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v20, off, s33 offset:344 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:348 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffe90
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end10:
	.size	longModuloByMul384, .Lfunc_end10-longModuloByMul384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 6548
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 380
; MemoryBound: 0
	.text
	.hidden	intInvert                       ; -- Begin function intInvert
	.globl	intInvert
	.p2align	2
	.type	intInvert,@function
intInvert:                              ; @intInvert
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s9, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v6, s33 offset:44 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 52
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:8
	scratch_load_b32 v1, off, s33
	scratch_load_b32 v2, off, s33 offset:4
	v_mov_b32_e32 v0, 0
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v4, v0, v2
	v_cvt_f32_u32_e32 v3, v2
	v_rcp_iflag_f32_e32 v3, v3
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v3, 0x4f7ffffe, v3
	v_cvt_u32_f32_e32 v3, v3
	v_mul_lo_u32 v4, v4, v3
	v_mul_hi_u32 v4, v3, v4
	v_add_nc_u32_e64 v3, v3, v4
	v_mul_hi_u32 v3, v1, v3
	v_mul_lo_u32 v3, v3, v2
	v_sub_nc_u32_e64 v1, v1, v3
	v_cmp_ge_u32_e64 s0, v1, v2
	v_sub_nc_u32_e64 v3, v1, v2
	v_cndmask_b32_e64 v1, v1, v3, s0
	v_cmp_ge_u32_e64 s0, v1, v2
	v_sub_nc_u32_e64 v2, v1, v2
	v_cndmask_b32_e64 v1, v1, v2, s0
	scratch_store_b32 off, v1, s33 offset:12
	scratch_store_b32 off, v0, s33 offset:20
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:24
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $vgpr6 : SGPR spill to VGPR lane
	v_writelane_b32 v6, s0, 0
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
.LBB11_1:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v6, 1
	v_readlane_b32 s4, v6, 2
	v_readlane_b32 s3, v6, 3
	v_readlane_b32 s2, v6, 4
	v_readlane_b32 s0, v6, 5
	v_readlane_b32 s5, v6, 0
	v_writelane_b32 v6, s5, 6
	v_writelane_b32 v6, s4, 7
	v_writelane_b32 v6, s1, 8
	scratch_load_b32 v0, off, s33 offset:12
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, s1
	s_mov_b32 s4, -1
	s_mov_b32 s4, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v6, s0, 9
	s_or_b32 s2, s2, exec_lo
	v_writelane_b32 v6, s2, 10
	s_or_b32 s3, s3, exec_lo
	v_writelane_b32 v6, s3, 11
	v_writelane_b32 v6, s3, 12
	v_writelane_b32 v6, s2, 13
	v_writelane_b32 v6, s0, 14
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v6, s0, 15
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB11_7
	s_branch .LBB11_4
.LBB11_2:                               ; %Flow4
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 16
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v6, s0, 17
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB11_13
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:36
	s_branch .LBB11_13
.LBB11_4:                               ;   in Loop: Header=BB11_1 Depth=1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:12
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, s1, v1
	v_cvt_f32_u32_e32 v2, v1
	v_rcp_iflag_f32_e32 v2, v2
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	v_mul_lo_u32 v3, v3, v2
	v_mul_hi_u32 v3, v2, v3
	v_add_nc_u32_e64 v2, v2, v3
	v_mul_hi_u32 v2, v0, v2
	v_mul_lo_u32 v2, v2, v1
	v_sub_nc_u32_e64 v0, v0, v2
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v2, v0, v1
	v_cndmask_b32_e64 v0, v0, v2, s0
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v1, v0, v1
	v_cndmask_b32_e64 v0, v0, v1, s0
	scratch_store_b32 off, v0, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:8
	scratch_load_b32 v2, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, s1, v2
	v_cvt_f32_u32_e32 v0, v2
	v_rcp_iflag_f32_e32 v0, v0
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v0, 0x4f7ffffe, v0
	v_cvt_u32_f32_e32 v0, v0
	v_mul_lo_u32 v3, v3, v0
	v_mul_hi_u32 v3, v0, v3
	v_add_nc_u32_e64 v0, v0, v3
	v_mul_hi_u32 v0, v1, v0
	v_mul_lo_u32 v3, v0, v2
	v_sub_nc_u32_e64 v1, v1, v3
	v_cmp_ge_u32_e64 s3, v1, v2
	v_sub_nc_u32_e64 v3, v1, v2
	v_cndmask_b32_e64 v1, v1, v3, s3
	v_cmp_ge_u32_e64 s2, v1, v2
	s_mov_b32 s0, 1
	v_add_nc_u32_e64 v1, v0, s0
	v_cndmask_b32_e64 v0, v0, v1, s3
	v_add_nc_u32_e64 v1, v0, s0
	v_cndmask_b32_e64 v0, v0, v1, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, s1, v0
	scratch_load_b32 v3, off, s33 offset:24
	scratch_load_b32 v4, off, s33 offset:20
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s1, v2, v3, v[4:5]
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:28
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, s0
	s_mov_b32 s0, -1
	s_mov_b32 s2, s0
	v_writelane_b32 v6, s2, 18
	v_writelane_b32 v6, s0, 19
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v6, s0, 20
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB11_10
	s_branch .LBB11_8
.LBB11_5:                               ; %Flow
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 21
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v6, s0, 22
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB11_12
; %bb.6:
	scratch_load_b32 v0, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:36
	s_branch .LBB11_12
.LBB11_7:                               ; %Flow7
                                        ;   in Loop: Header=BB11_1 Depth=1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 15
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s5, v6, 8
	v_readlane_b32 s4, v6, 7
	v_readlane_b32 s6, v6, 6
	v_readlane_b32 s3, v6, 12
	v_readlane_b32 s2, v6, 13
	v_readlane_b32 s1, v6, 14
	s_mov_b32 s0, s3
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s6
	s_and_not1_b32 s4, s4, exec_lo
	s_and_b32 s6, s1, exec_lo
	s_or_b32 s4, s4, s6
	v_writelane_b32 v6, s4, 23
	s_and_not1_b32 s5, s5, exec_lo
	s_and_b32 s6, s2, exec_lo
	s_or_b32 s5, s5, s6
	v_writelane_b32 v6, s5, 24
	v_writelane_b32 v6, s5, 1
	v_writelane_b32 v6, s4, 2
	v_writelane_b32 v6, s3, 3
	v_writelane_b32 v6, s2, 4
	v_writelane_b32 v6, s1, 5
	s_mov_b32 s1, s0
	v_writelane_b32 v6, s1, 0
	s_mov_b32 s1, s0
	v_writelane_b32 v6, s1, 25
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB11_1
	s_branch .LBB11_15
.LBB11_8:                               ;   in Loop: Header=BB11_1 Depth=1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	scratch_load_b32 v0, off, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:16
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, s1, v1
	v_cvt_f32_u32_e32 v2, v1
	v_rcp_iflag_f32_e32 v2, v2
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	v_mul_lo_u32 v3, v3, v2
	v_mul_hi_u32 v3, v2, v3
	v_add_nc_u32_e64 v2, v2, v3
	v_mul_hi_u32 v2, v0, v2
	v_mul_lo_u32 v2, v2, v1
	v_sub_nc_u32_e64 v0, v0, v2
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v2, v0, v1
	v_cndmask_b32_e64 v0, v0, v2, s0
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v1, v0, v1
	v_cndmask_b32_e64 v0, v0, v1, s0
	scratch_store_b32 off, v0, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:12
	scratch_load_b32 v2, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, s1, v2
	v_cvt_f32_u32_e32 v0, v2
	v_rcp_iflag_f32_e32 v0, v0
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v0, 0x4f7ffffe, v0
	v_cvt_u32_f32_e32 v0, v0
	v_mul_lo_u32 v3, v3, v0
	v_mul_hi_u32 v3, v0, v3
	v_add_nc_u32_e64 v0, v0, v3
	v_mul_hi_u32 v0, v1, v0
	v_mul_lo_u32 v3, v0, v2
	v_sub_nc_u32_e64 v1, v1, v3
	v_cmp_ge_u32_e64 s3, v1, v2
	v_sub_nc_u32_e64 v3, v1, v2
	v_cndmask_b32_e64 v1, v1, v3, s3
	v_cmp_ge_u32_e64 s2, v1, v2
	s_mov_b32 s0, 1
	v_add_nc_u32_e64 v1, v0, s0
	v_cndmask_b32_e64 v0, v0, v1, s3
	v_add_nc_u32_e64 v1, v0, s0
	v_cndmask_b32_e64 v0, v0, v1, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, s1, v0
	scratch_load_b32 v3, off, s33 offset:28
	scratch_load_b32 v4, off, s33 offset:24
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s1, v2, v3, v[4:5]
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:20
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, s0
	s_mov_b32 s0, -1
	v_writelane_b32 v6, s0, 26
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v6, s0, 27
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB11_14
	s_branch .LBB11_11
.LBB11_9:
	scratch_load_b32 v0, off, s33 offset:20
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:36
	s_branch .LBB11_5
.LBB11_10:                              ; %Flow8
                                        ;   in Loop: Header=BB11_1 Depth=1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s5, v6, 20
	s_or_b32 exec_lo, exec_lo, s5
	v_readlane_b32 s2, v6, 11
	v_readlane_b32 s1, v6, 10
	v_readlane_b32 s0, v6, 9
	v_readlane_b32 s3, v6, 18
	v_readlane_b32 s4, v6, 19
	s_mov_b32 s5, 0
	s_and_not1_b32 s0, s0, exec_lo
	s_and_b32 s4, s4, exec_lo
	s_or_b32 s0, s0, s4
	s_and_not1_b32 s1, s1, exec_lo
	s_and_not1_b32 s2, s2, exec_lo
	s_and_b32 s3, s3, exec_lo
	s_or_b32 s2, s2, s3
	v_writelane_b32 v6, s2, 12
	v_writelane_b32 v6, s1, 13
	v_writelane_b32 v6, s0, 14
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_branch .LBB11_7
.LBB11_11:                              ;   in Loop: Header=BB11_1 Depth=1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	scratch_load_b32 v0, off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:8
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, s0, v1
	v_cvt_f32_u32_e32 v2, v1
	v_rcp_iflag_f32_e32 v2, v2
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	v_mul_lo_u32 v3, v3, v2
	v_mul_hi_u32 v3, v2, v3
	v_add_nc_u32_e64 v2, v2, v3
	v_mul_hi_u32 v2, v0, v2
	v_mul_lo_u32 v2, v2, v1
	v_sub_nc_u32_e64 v0, v0, v2
	v_cmp_ge_u32_e64 s1, v0, v1
	v_sub_nc_u32_e64 v2, v0, v1
	v_cndmask_b32_e64 v0, v0, v2, s1
	v_cmp_ge_u32_e64 s1, v0, v1
	v_sub_nc_u32_e64 v1, v0, v1
	v_cndmask_b32_e64 v0, v0, v1, s1
	scratch_store_b32 off, v0, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:16
	scratch_load_b32 v2, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, s0, v2
	v_cvt_f32_u32_e32 v0, v2
	v_rcp_iflag_f32_e32 v0, v0
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v0, 0x4f7ffffe, v0
	v_cvt_u32_f32_e32 v0, v0
	v_mul_lo_u32 v3, v3, v0
	v_mul_hi_u32 v3, v0, v3
	v_add_nc_u32_e64 v0, v0, v3
	v_mul_hi_u32 v0, v1, v0
	v_mul_lo_u32 v3, v0, v2
	v_sub_nc_u32_e64 v1, v1, v3
	v_cmp_ge_u32_e64 s3, v1, v2
	v_sub_nc_u32_e64 v3, v1, v2
	v_cndmask_b32_e64 v1, v1, v3, s3
	v_cmp_ge_u32_e64 s1, v1, v2
	s_mov_b32 s2, 1
	v_add_nc_u32_e64 v1, v0, s2
	v_cndmask_b32_e64 v0, v0, v1, s3
	v_add_nc_u32_e64 v1, v0, s2
	v_cndmask_b32_e64 v0, v0, v1, s1
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, s0, v0
	scratch_load_b32 v3, off, s33 offset:20
	scratch_load_b32 v4, off, s33 offset:28
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s0, v2, v3, v[4:5]
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:24
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v6, s0, 26
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_branch .LBB11_14
.LBB11_12:                              ; %Flow3
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 22
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB11_2
.LBB11_13:
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 17
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:36
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	v_sub_nc_u32_e64 v3, s0, v1
	v_cvt_f32_u32_e32 v2, v1
	v_rcp_iflag_f32_e32 v2, v2
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	v_mul_lo_u32 v3, v3, v2
	v_mul_hi_u32 v3, v2, v3
	v_add_nc_u32_e64 v2, v2, v3
	v_mul_hi_u32 v2, v0, v2
	v_mul_lo_u32 v2, v2, v1
	v_sub_nc_u32_e64 v0, v0, v2
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v2, v0, v1
	v_cndmask_b32_e64 v0, v0, v2, s0
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v1, v0, v1
	v_cndmask_b32_e64 v0, v0, v1, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v6, off, s33 offset:44 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffcc
	s_mov_b32 s33, s9
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.LBB11_14:                              ; %Flow9
                                        ;   in Loop: Header=BB11_1 Depth=1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 27
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v6, 26
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	s_or_not1_b32 s1, s1, exec_lo
	v_writelane_b32 v6, s1, 18
	v_writelane_b32 v6, s0, 19
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_branch .LBB11_10
.LBB11_15:                              ; %loop.exit.guard
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.16:                               ; %loop.exit.guard
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v6, 23
	v_readlane_b32 s0, v6, 24
	s_mov_b32 s2, -1
	s_xor_b32 s0, s0, s2
	s_xor_b32 s1, s1, s2
	v_writelane_b32 v6, s1, 28
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v6, s1, 16
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB11_2
; %bb.17:                               ; %loop.exit.guard1
	s_or_saveexec_b32 s8, -1
	scratch_load_b32 v6, off, s33 offset:40 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s8
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 28
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v6, s1, 21
	s_or_saveexec_b32 s8, -1
	scratch_store_b32 off, v6, s33 offset:40 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s8
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB11_5
	s_branch .LBB11_9
.Lfunc_end11:
	.size	intInvert, .Lfunc_end11-intInvert
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 3092
; NumSgprs: 34
; NumVgprs: 7
; ScratchSize: 52
; MemoryBound: 0
	.text
	.hidden	calculateOffset                 ; -- Begin function calculateOffset
	.globl	calculateOffset
	.p2align	2
	.type	calculateOffset,@function
calculateOffset:                        ; @calculateOffset
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v3, s33 offset:24 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 32
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr3 : SGPR spill to VGPR lane
	v_writelane_b32 v3, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:12 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB12_1
	s_branch .LBB12_3
.LBB12_1:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:12 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 0
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:16 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:12 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB12_4
; %bb.2:
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
	s_branch .LBB12_4
.LBB12_3:
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_branch .LBB12_1
.LBB12_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:12 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 1
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:20 ; 4-byte Folded Reload
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v3, off, s33 offset:24 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffe0
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end12:
	.size	calculateOffset, .Lfunc_end12-calculateOffset
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 408
; NumSgprs: 34
; NumVgprs: 4
; ScratchSize: 32
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __ockl_get_local_id
	.type	__ockl_get_local_id,@function
__ockl_get_local_id:                    ; @__ockl_get_local_id
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v2, s33 offset:36 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 44
	scratch_store_b32 off, v31, s33 offset:8 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s33 offset:4 ; 4-byte Folded Spill
; %bb.1:                                ; %NodeBlock3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr2 : SGPR spill to VGPR lane
	v_writelane_b32 v2, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB13_4
; %bb.2:                                ; %NodeBlock
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v2, s1, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB13_7
; %bb.3:                                ; %LeafBlock1
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v2, s0, 2
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB13_10
	s_branch .LBB13_9
.LBB13_4:                               ; %Flow8
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 0
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:24 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v2, s0, 3
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB13_13
; %bb.5:                                ; %LeafBlock
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v2, s0, 4
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB13_12
; %bb.6:
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 0x3ff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	s_branch .LBB13_12
.LBB13_7:                               ; %Flow5
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 1
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:16 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:32 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v2, s0, 5
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB13_11
; %bb.8:
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_bfe_u32 v0, v0, 10, 10
	scratch_store_b32 off, v0, s33 offset:32 ; 4-byte Folded Spill
	s_branch .LBB13_11
.LBB13_9:
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_bfe_u32 v0, v0, 20, 10
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
.LBB13_10:                              ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 2
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:20 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_branch .LBB13_7
.LBB13_11:                              ; %Flow6
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 5
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:32 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_branch .LBB13_4
.LBB13_12:                              ; %Flow7
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 4
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:28 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:24 ; 4-byte Folded Spill
.LBB13_13:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 3
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:24 ; 4-byte Folded Reload
	v_mov_b32_e32 v1, 0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v2, off, s33 offset:36 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffd4
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end13:
	.size	__ockl_get_local_id, .Lfunc_end13-__ockl_get_local_id
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 936
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 44
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z12get_local_idj
	.type	_Z12get_local_idj,@function
_Z12get_local_idj:                      ; @_Z12get_local_idj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_get_local_id@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_get_local_id@rel32@hi+12
	s_mov_b32 s33, s2
	s_setpc_b64 s[0:1]
.Lfunc_end14:
	.size	_Z12get_local_idj, .Lfunc_end14-_Z12get_local_idj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 44
; MemoryBound: 0
	.text
	.hidden	clFillMemoryByGroup             ; -- Begin function clFillMemoryByGroup
	.globl	clFillMemoryByGroup
	.p2align	2
	.type	clFillMemoryByGroup,@function
clFillMemoryByGroup:                    ; @clFillMemoryByGroup
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v6, s33 offset:32 ; 4-byte Folded Spill
	scratch_store_b32 off, v7, s33 offset:36 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 48
	v_writelane_b32 v6, s30, 0
	v_writelane_b32 v6, s31, 1
	v_mov_b32_e32 v3, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b64 off, v[0:1], s33
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b64 v[0:1], off, s33
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:16
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	s_mov_b32 s2, 0
                                        ; implicit-def: $vgpr7 : SGPR spill to VGPR lane
	v_writelane_b32 v7, s2, 0
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v7, 0
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:24
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v7, s0, 1
	s_or_saveexec_b32 s17, -1
	scratch_store_b32 off, v7, s33 offset:28 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s17
.LBB15_1:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s17, -1
	scratch_load_b32 v7, off, s33 offset:28 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s17
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 2
	v_readlane_b32 s1, v7, 1
	v_writelane_b32 v7, s1, 3
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:8
	s_mov_b32 s1, 2
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v1, s1, v1
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v7, s0, 4
	v_writelane_b32 v7, s0, 5
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v7, s0, 6
	s_or_saveexec_b32 s17, -1
	scratch_store_b32 off, v7, s33 offset:28 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s17
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB15_3
; %bb.2:                                ;   in Loop: Header=BB15_1 Depth=1
	scratch_load_b64 v[1:2], off, s33 offset:16
	s_mov_b32 s0, 0
	scratch_load_b32 v3, off, s33 offset:24
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, -1
	global_store_b32 v[0:1], v2, off
	s_branch .LBB15_4
.LBB15_3:                               ; %Flow
                                        ;   in Loop: Header=BB15_1 Depth=1
	s_or_saveexec_b32 s17, -1
	scratch_load_b32 v7, off, s33 offset:28 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s17
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 6
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v7, 3
	v_readlane_b32 s1, v7, 5
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v7, s1, 2
	s_mov_b32 s1, s0
	v_writelane_b32 v7, s1, 1
	s_mov_b32 s1, s0
	v_writelane_b32 v7, s1, 7
	s_or_saveexec_b32 s17, -1
	scratch_store_b32 off, v7, s33 offset:28 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s17
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB15_1
	s_branch .LBB15_5
.LBB15_4:                               ;   in Loop: Header=BB15_1 Depth=1
	s_or_saveexec_b32 s17, -1
	scratch_load_b32 v7, off, s33 offset:28 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s17
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 4
	scratch_load_b32 v0, off, s33 offset:24
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:24
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v7, s0, 5
	s_or_saveexec_b32 s17, -1
	scratch_store_b32 off, v7, s33 offset:28 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s17
	s_branch .LBB15_3
.LBB15_5:
	s_or_saveexec_b32 s17, -1
	scratch_load_b32 v7, off, s33 offset:28 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s17
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 7
	s_or_b32 exec_lo, exec_lo, s0
; %bb.6:
	v_readlane_b32 s30, v6, 0
	v_readlane_b32 s31, v6, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v6, off, s33 offset:32 ; 4-byte Folded Reload
	scratch_load_b32 v7, off, s33 offset:36 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffd0
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end15:
	.size	clFillMemoryByGroup, .Lfunc_end15-clFillMemoryByGroup
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 744
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 92
; MemoryBound: 0
	.text
	.hidden	flushLayer                      ; -- Begin function flushLayer
	.globl	flushLayer
	.p2align	2
	.type	flushLayer,@function
flushLayer:                             ; @flushLayer
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s10, s33
	s_add_i32 s33, s32, 31
	s_and_b32 s33, s33, 0xffffffe0
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v33, s33 offset:124 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xc0
	scratch_store_b32 off, v19, s33 offset:108 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:104 ; 4-byte Folded Spill
	scratch_store_b32 off, v11, s33 offset:116 ; 4-byte Folded Spill
	scratch_store_b32 off, v7, s33 offset:112 ; 4-byte Folded Spill
	v_mov_b32_e32 v7, v6
	scratch_store_b32 off, v5, s33 offset:120 ; 4-byte Folded Spill
	v_mov_b32_e32 v19, v4
	scratch_load_b32 v4, off, s33 offset:120 ; 4-byte Folded Reload
	v_mov_b32_e32 v6, v3
	scratch_load_b32 v3, off, s33 offset:116 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v2
	scratch_load_b32 v2, off, s33 offset:112 ; 4-byte Folded Reload
	v_mov_b32_e32 v24, v1
	scratch_load_b32 v1, off, s33 offset:108 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v0
	scratch_load_b32 v0, off, s33 offset:104 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v25, v0
	v_mov_b32_e32 v26, v16
	v_mov_b32_e32 v27, v17
	v_mov_b32_e32 v28, v18
	v_mov_b32_e32 v29, v1
	v_mov_b32_e32 v30, v20
	v_mov_b32_e32 v31, v21
                                        ; kill: def $vgpr32 killed $vgpr22 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v25, v2
	v_mov_b32_e32 v26, v8
	v_mov_b32_e32 v27, v9
	v_mov_b32_e32 v28, v10
	v_mov_b32_e32 v29, v3
	v_mov_b32_e32 v30, v12
	v_mov_b32_e32 v31, v13
                                        ; kill: def $vgpr32 killed $vgpr14 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v19
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr24 killed $vgpr24 def $vgpr24_vgpr25 killed $exec
	v_mov_b32_e32 v25, v15
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3_sgpr4_sgpr5_sgpr6_sgpr7
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b32 off, v11, s33
	scratch_store_b64 off, v[24:25], s33 offset:8
	scratch_store_b64 off, v[6:7], s33 offset:16
	scratch_store_b64 off, v[4:5], s33 offset:24
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v4, v12
	v_mov_b32_e32 v5, v13
	v_mov_b32_e32 v6, v14
	scratch_store_b128 off, v[3:6], s33 offset:48
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	v_mov_b32_e32 v5, v10
	scratch_store_b128 off, v[2:5], s33 offset:32
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v2, v20
	v_mov_b32_e32 v3, v21
	v_mov_b32_e32 v4, v22
	scratch_store_b128 off, v[1:4], s33 offset:80
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v16
	v_mov_b32_e32 v2, v17
	v_mov_b32_e32 v3, v18
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_store_b32 off, v23, s33 offset:96
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr33 : SGPR spill to VGPR lane
	v_writelane_b32 v33, s1, 0
	s_or_saveexec_b32 s9, -1
	scratch_store_b32 off, v33, s33 offset:100 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s9
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB16_8
	s_branch .LBB16_2
.LBB16_1:
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:8
	s_mov_b32 s1, 0
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v0
	v_mov_b32_e32 v9, v1
	v_mov_b32_e32 v10, v2
	v_mov_b32_e32 v11, v3
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v0
	v_mov_b32_e32 v13, v1
	v_mov_b32_e32 v14, v2
	v_mov_b32_e32 v15, v3
	scratch_load_b128 v[16:19], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v16
	v_mov_b32_e32 v3, v17
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v1, v19
	scratch_load_b128 v[16:19], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v16
	v_mov_b32_e32 v6, v17
	v_mov_b32_e32 v5, v18
	v_mov_b32_e32 v4, v19
	v_and_b32_e64 v4, v4, v15
	v_and_b32_e64 v5, v5, v14
	v_and_b32_e64 v6, v6, v13
	v_and_b32_e64 v0, v0, v12
	v_and_b32_e64 v1, v1, v11
	v_and_b32_e64 v2, v2, v10
	v_and_b32_e64 v3, v3, v9
	v_and_b32_e64 v7, v7, v8
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8_vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v8, v3
	v_mov_b32_e32 v9, v2
	v_mov_b32_e32 v10, v1
	scratch_store_b128 off, v[7:10], s33 offset:48
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB16_10
.LBB16_2:
	s_or_saveexec_b32 s9, -1
	scratch_load_b32 v33, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s9
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v33, s1, 1
	s_or_saveexec_b32 s9, -1
	scratch_store_b32 off, v33, s33 offset:100 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s9
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB16_6
	s_branch .LBB16_4
.LBB16_3:
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:8
	s_mov_b32 s1, 0
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB16_9
.LBB16_4:
	s_or_saveexec_b32 s9, -1
	scratch_load_b32 v33, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s9
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 10
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v33, s0, 2
	s_or_saveexec_b32 s9, -1
	scratch_store_b32 off, v33, s33 offset:100 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s9
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB16_7
; %bb.5:
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:8
	s_mov_b32 s1, 0
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:96
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[18:21], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v3, v21
	global_load_b128 v[18:21], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v8, v19
	v_mov_b32_e32 v7, v20
	v_mov_b32_e32 v6, v21
	v_and_b32_e64 v6, v6, v17
	v_and_b32_e64 v7, v7, v16
	v_and_b32_e64 v8, v8, v15
	v_and_b32_e64 v2, v2, v14
	v_and_b32_e64 v3, v3, v13
	v_and_b32_e64 v4, v4, v12
	v_and_b32_e64 v5, v5, v11
	v_and_b32_e64 v9, v9, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10_vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	global_store_b128 v[0:1], v[9:12], off offset:16
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB16_7
.LBB16_6:                               ; %Flow
	s_or_saveexec_b32 s9, -1
	scratch_load_b32 v33, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s9
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v33, 1
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v33, s0, 3
	s_or_saveexec_b32 s9, -1
	scratch_store_b32 off, v33, s33 offset:100 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s9
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB16_9
	s_branch .LBB16_3
.LBB16_7:
	s_or_saveexec_b32 s9, -1
	scratch_load_b32 v33, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s9
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v33, 2
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB16_6
.LBB16_8:                               ; %Flow1
	s_or_saveexec_b32 s9, -1
	scratch_load_b32 v33, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s9
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v33, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v33, s0, 4
	s_or_saveexec_b32 s9, -1
	scratch_store_b32 off, v33, s33 offset:100 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s9
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB16_10
	s_branch .LBB16_1
.LBB16_9:
	s_or_saveexec_b32 s9, -1
	scratch_load_b32 v33, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s9
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v33, 3
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB16_8
.LBB16_10:
	s_or_saveexec_b32 s9, -1
	scratch_load_b32 v33, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s9
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v33, 4
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v33, off, s33 offset:124 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff40
	s_mov_b32 s33, s10
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end16:
	.size	flushLayer, .Lfunc_end16-flushLayer
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 3420
; NumSgprs: 34
; NumVgprs: 34
; ScratchSize: 192
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __ockl_get_local_size
	.type	__ockl_get_local_size,@function
__ockl_get_local_size:                  ; @__ockl_get_local_size
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s10, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v4, s33 offset:104 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x70
	scratch_store_b32 off, v0, s33 offset:4 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr4 : SGPR spill to VGPR lane
	v_writelane_b32 v4, s14, 0
	v_writelane_b32 v4, s13, 1
	v_writelane_b32 v4, s12, 2
	v_writelane_b32 v4, s8, 3
	v_writelane_b32 v4, s9, 4
	v_writelane_b32 v4, s4, 5
	v_writelane_b32 v4, s5, 6
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
; %bb.1:                                ; %NodeBlock3
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr2_sgpr3
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:8 ; 8-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v4, s1, 7
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB17_4
; %bb.2:                                ; %NodeBlock
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr2_sgpr3
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:16 ; 8-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v4, s1, 8
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB17_10
; %bb.3:                                ; %LeafBlock1
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b64 s[2:3], 1
	v_mov_b32_e32 v0, 1
	v_mov_b32_e32 v1, 0
	scratch_store_b64 off, v[0:1], s33 offset:24 ; 8-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v4, s0, 9
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB17_20
	s_branch .LBB17_15
.LBB17_4:                               ; %Flow14
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 7
	s_or_saveexec_b32 s0, s0
	scratch_load_b64 v[0:1], off, s33 offset:8 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:32 ; 8-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v4, s0, 10
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB17_25
; %bb.5:                                ; %LeafBlock
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b64 s[2:3], 1
	v_mov_b32_e32 v0, 1
	v_mov_b32_e32 v1, 0
	scratch_store_b64 off, v[0:1], s33 offset:40 ; 8-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v4, s0, 11
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB17_24
; %bb.6:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s1, s1, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s1, s[0:1], 0x0
	s_mov_b32 s0, -1
                                        ; implicit-def: $sgpr2_sgpr3
	s_mov_b32 s4, 0x1f3
	s_waitcnt lgkmcnt(0)
	s_cmp_gt_i32 s1, s4
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:48 ; 8-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_writelane_b32 v4, s0, 12
	s_mov_b32 s7, exec_lo
	s_mov_b32 exec_lo, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_cbranch_scc1 .LBB17_9
.LBB17_7:                               ; %Flow11
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 12
	scratch_load_b64 v[0:1], off, s33 offset:48 ; 8-byte Folded Reload
	v_cndmask_b32_e64 v2, 0, 1, s0
	s_mov_b32 s0, 1
                                        ; implicit-def: $sgpr1
	v_cmp_ne_u32_e64 s0, v2, s0
	s_and_b32 vcc_lo, exec_lo, s0
                                        ; kill: def $vgpr0_vgpr1 killed $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56 ; 8-byte Folded Spill
	s_cbranch_vccnz .LBB17_23
; %bb.8:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v4, 2
	v_readlane_b32 s2, v4, 5
	v_readlane_b32 s3, v4, 6
	v_mov_b32_e32 v0, 0
	global_load_u16 v1, v0, s[2:3] offset:4
	s_load_b32 s0, s[2:3], 0xc
                                        ; implicit-def: $sgpr2
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, s1, v1
	s_waitcnt lgkmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
	v_min_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	v_mov_b32_e32 v2, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b64 off, v[0:1], s33 offset:56 ; 8-byte Folded Spill
	s_branch .LBB17_23
.LBB17_9:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 3
	v_readlane_b32 s1, v4, 4
	v_readlane_b32 s2, v4, 2
	s_load_b32 s3, s[0:1], 0x0
	s_waitcnt lgkmcnt(0)
	s_cmp_lt_u32 s2, s3
	s_mov_b32 s3, 18
	s_mov_b32 s2, 12
	s_cselect_b32 s2, s2, s3
	v_mov_b32_e32 v0, s2
	global_load_u16 v0, v0, s[0:1]
	s_mov_b32 s0, 0xffff
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
                                        ; implicit-def: $sgpr0
	s_mov_b32 s0, 0
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; implicit-def: $sgpr2_sgpr3
	scratch_store_b64 off, v[0:1], s33 offset:48 ; 8-byte Folded Spill
	v_writelane_b32 v4, s0, 12
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_branch .LBB17_7
.LBB17_10:                              ; %Flow9
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 8
	s_or_saveexec_b32 s0, s0
	scratch_load_b64 v[0:1], off, s33 offset:16 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:64 ; 8-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v4, s0, 13
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB17_22
; %bb.11:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s1, s1, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s1, s[0:1], 0x0
	s_mov_b32 s0, -1
                                        ; implicit-def: $sgpr2_sgpr3
	s_mov_b32 s4, 0x1f3
	s_waitcnt lgkmcnt(0)
	s_cmp_gt_i32 s1, s4
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:72 ; 8-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_writelane_b32 v4, s0, 14
	s_mov_b32 s7, exec_lo
	s_mov_b32 exec_lo, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_cbranch_scc1 .LBB17_14
.LBB17_12:                              ; %Flow7
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 14
	scratch_load_b64 v[0:1], off, s33 offset:72 ; 8-byte Folded Reload
	v_cndmask_b32_e64 v2, 0, 1, s0
	s_mov_b32 s0, 1
                                        ; implicit-def: $sgpr1
	v_cmp_ne_u32_e64 s0, v2, s0
	s_and_b32 vcc_lo, exec_lo, s0
                                        ; kill: def $vgpr0_vgpr1 killed $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:80 ; 8-byte Folded Spill
	s_cbranch_vccnz .LBB17_21
; %bb.13:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v4, 1
	v_readlane_b32 s2, v4, 5
	v_readlane_b32 s3, v4, 6
	v_mov_b32_e32 v0, 0
	global_load_u16 v1, v0, s[2:3] offset:6
	s_load_b32 s0, s[2:3], 0x10
                                        ; implicit-def: $sgpr2
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, s1, v1
	s_waitcnt lgkmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
	v_min_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	v_mov_b32_e32 v2, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b64 off, v[0:1], s33 offset:80 ; 8-byte Folded Spill
	s_branch .LBB17_21
.LBB17_14:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 3
	v_readlane_b32 s1, v4, 4
	v_readlane_b32 s2, v4, 1
	s_load_b32 s3, s[0:1], 0x4
	s_waitcnt lgkmcnt(0)
	s_cmp_lt_u32 s2, s3
	s_mov_b32 s3, 20
	s_mov_b32 s2, 14
	s_cselect_b32 s2, s2, s3
	v_mov_b32_e32 v0, s2
	global_load_u16 v0, v0, s[0:1]
	s_mov_b32 s0, 0xffff
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
                                        ; implicit-def: $sgpr0
	s_mov_b32 s0, 0
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; implicit-def: $sgpr2_sgpr3
	scratch_store_b64 off, v[0:1], s33 offset:72 ; 8-byte Folded Spill
	v_writelane_b32 v4, s0, 14
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_branch .LBB17_12
.LBB17_15:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s1, s1, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s1, s[0:1], 0x0
	s_mov_b32 s0, -1
                                        ; implicit-def: $sgpr2_sgpr3
	s_mov_b32 s4, 0x1f3
	s_waitcnt lgkmcnt(0)
	s_cmp_gt_i32 s1, s4
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:88 ; 8-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_writelane_b32 v4, s0, 15
	s_mov_b32 s7, exec_lo
	s_mov_b32 exec_lo, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_cbranch_scc1 .LBB17_18
.LBB17_16:                              ; %Flow
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 15
	scratch_load_b64 v[0:1], off, s33 offset:88 ; 8-byte Folded Reload
	v_cndmask_b32_e64 v2, 0, 1, s0
	s_mov_b32 s0, 1
                                        ; implicit-def: $sgpr1
	v_cmp_ne_u32_e64 s0, v2, s0
	s_and_b32 vcc_lo, exec_lo, s0
                                        ; kill: def $vgpr0_vgpr1 killed $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:96 ; 8-byte Folded Spill
	s_cbranch_vccnz .LBB17_19
; %bb.17:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v4, 0
	v_readlane_b32 s2, v4, 5
	v_readlane_b32 s3, v4, 6
	v_mov_b32_e32 v0, 0
	global_load_u16 v1, v0, s[2:3] offset:8
	s_load_b32 s0, s[2:3], 0x14
                                        ; implicit-def: $sgpr2
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, s1, v1
	s_waitcnt lgkmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
	v_min_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	v_mov_b32_e32 v2, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b64 off, v[0:1], s33 offset:96 ; 8-byte Folded Spill
	s_branch .LBB17_19
.LBB17_18:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 3
	v_readlane_b32 s1, v4, 4
	v_readlane_b32 s2, v4, 0
	s_load_b32 s3, s[0:1], 0x8
	s_waitcnt lgkmcnt(0)
	s_cmp_lt_u32 s2, s3
	s_mov_b32 s3, 22
	s_mov_b32 s2, 16
	s_cselect_b32 s2, s2, s3
	v_mov_b32_e32 v0, s2
	global_load_u16 v0, v0, s[0:1]
	s_mov_b32 s0, 0xffff
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
                                        ; implicit-def: $sgpr0
	s_mov_b32 s0, 0
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; implicit-def: $sgpr2_sgpr3
	scratch_store_b64 off, v[0:1], s33 offset:88 ; 8-byte Folded Spill
	v_writelane_b32 v4, s0, 15
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v4, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_branch .LBB17_16
.LBB17_19:                              ; %Flow5
	scratch_load_b64 v[0:1], off, s33 offset:96 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:24 ; 8-byte Folded Spill
.LBB17_20:                              ; %Flow6
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 9
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b64 v[0:1], off, s33 offset:24 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:16 ; 8-byte Folded Spill
	s_branch .LBB17_10
.LBB17_21:                              ; %Flow8
	scratch_load_b64 v[0:1], off, s33 offset:80 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:64 ; 8-byte Folded Spill
.LBB17_22:                              ; %Flow10
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 13
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b64 v[0:1], off, s33 offset:64 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:8 ; 8-byte Folded Spill
	s_branch .LBB17_4
.LBB17_23:                              ; %Flow12
	scratch_load_b64 v[0:1], off, s33 offset:56 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40 ; 8-byte Folded Spill
.LBB17_24:                              ; %Flow13
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 11
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b64 v[0:1], off, s33 offset:40 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:32 ; 8-byte Folded Spill
.LBB17_25:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v4, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v4, 10
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b64 v[2:3], off, s33 offset:32 ; 8-byte Folded Reload
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], s0, v[2:3]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v2
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v4, off, s33 offset:104 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff90
	s_mov_b32 s33, s10
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end17:
	.size	__ockl_get_local_size, .Lfunc_end17-__ockl_get_local_size
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 2412
; NumSgprs: 36
; NumVgprs: 5
; ScratchSize: 112
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z14get_local_sizej
	.type	_Z14get_local_sizej,@function
_Z14get_local_sizej:                    ; @_Z14get_local_sizej
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_get_local_size@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_get_local_size@rel32@hi+12
	s_mov_b32 s33, s16
	s_setpc_b64 s[0:1]
.Lfunc_end18:
	.size	_Z14get_local_sizej, .Lfunc_end18-_Z14get_local_sizej
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 36
; NumVgprs: 32
; ScratchSize: 112
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z22atomic_work_item_fencej12memory_order12memory_scope
	.type	_Z22atomic_work_item_fencej12memory_order12memory_scope,@function
_Z22atomic_work_item_fencej12memory_order12memory_scope: ; @_Z22atomic_work_item_fencej12memory_order12memory_scope
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v3, s33 offset:16 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 24
	scratch_store_b32 off, v2, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v1, s33 offset:8 ; 4-byte Folded Spill
	s_mov_b32 s0, 0
	v_cmp_ne_u32_e64 s1, v1, s0
	s_mov_b32 s0, exec_lo
                                        ; implicit-def: $vgpr3 : SGPR spill to VGPR lane
	v_writelane_b32 v3, s0, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_2
; %bb.1:
	s_branch .LBB19_3
.LBB19_2:                               ; %Flow86
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 0
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_88
.LBB19_3:                               ; %NodeBlock5
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_6
; %bb.4:                                ; %NodeBlock3
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 2
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_51
; %bb.5:                                ; %LeafBlock1
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 3
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_10
	s_branch .LBB19_9
.LBB19_6:                               ; %Flow84
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 1
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 4
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_87
; %bb.7:                                ; %NodeBlock
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 5
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_38
	s_branch .LBB19_37
.LBB19_8:                               ; %LeafBlock
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 6
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_24
	s_branch .LBB19_23
.LBB19_9:
	s_branch .LBB19_11
.LBB19_10:                              ; %Flow54
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 3
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_51
.LBB19_11:                              ; %NodeBlock15
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 7
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_14
; %bb.12:                               ; %NodeBlock13
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 8
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_20
; %bb.13:                               ; %LeafBlock11
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 9
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_66
	s_branch .LBB19_22
.LBB19_14:                              ; %Flow52
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 7
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 10
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_70
; %bb.15:                               ; %NodeBlock9
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 11
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_16
	s_branch .LBB19_19
.LBB19_16:                              ; %Flow50
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 11
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 12
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_69
; %bb.17:                               ; %LeafBlock7
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 13
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_68
; %bb.18:
	s_branch .LBB19_68
.LBB19_19:
	s_branch .LBB19_16
.LBB19_20:                              ; %Flow47
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 8
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 14
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_67
; %bb.21:
	s_branch .LBB19_67
.LBB19_22:
	s_branch .LBB19_66
.LBB19_23:
	s_branch .LBB19_25
.LBB19_24:                              ; %Flow81
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 6
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_86
.LBB19_25:                              ; %NodeBlock25
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 15
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_28
; %bb.26:                               ; %NodeBlock23
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 16
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_34
; %bb.27:                               ; %LeafBlock21
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 17
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_81
	s_branch .LBB19_36
.LBB19_28:                              ; %Flow79
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 15
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 18
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_85
; %bb.29:                               ; %NodeBlock19
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 19
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_30
	s_branch .LBB19_33
.LBB19_30:                              ; %Flow77
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 19
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 20
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_84
; %bb.31:                               ; %LeafBlock17
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 21
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_83
; %bb.32:
	s_waitcnt_vscnt null, 0x0
	buffer_gl0_inv
	s_branch .LBB19_83
.LBB19_33:
	s_waitcnt_vscnt null, 0x0
	s_branch .LBB19_30
.LBB19_34:                              ; %Flow74
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 16
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 22
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_82
; %bb.35:
	s_waitcnt_vscnt null, 0x0
	buffer_gl0_inv
	s_branch .LBB19_82
.LBB19_36:
	s_waitcnt_vscnt null, 0x0
	buffer_gl0_inv
	s_branch .LBB19_81
.LBB19_37:
	s_branch .LBB19_39
.LBB19_38:                              ; %Flow82
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 5
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 23
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_86
	s_branch .LBB19_8
.LBB19_39:                              ; %NodeBlock35
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 24
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_42
; %bb.40:                               ; %NodeBlock33
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 25
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_48
; %bb.41:                               ; %LeafBlock31
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 26
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_76
	s_branch .LBB19_50
.LBB19_42:                              ; %Flow71
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 24
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 27
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_80
; %bb.43:                               ; %NodeBlock29
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 28
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_44
	s_branch .LBB19_47
.LBB19_44:                              ; %Flow69
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 28
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 29
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_79
; %bb.45:                               ; %LeafBlock27
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 30
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_78
; %bb.46:
	s_waitcnt_vscnt null, 0x0
	buffer_gl1_inv
	buffer_gl0_inv
	s_branch .LBB19_78
.LBB19_47:
	s_waitcnt_vscnt null, 0x0
	s_branch .LBB19_44
.LBB19_48:                              ; %Flow66
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 25
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 31
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_77
; %bb.49:
	s_waitcnt_vscnt null, 0x0
	buffer_gl1_inv
	buffer_gl0_inv
	s_branch .LBB19_77
.LBB19_50:
	s_waitcnt_vscnt null, 0x0
	buffer_gl1_inv
	buffer_gl0_inv
	s_branch .LBB19_76
.LBB19_51:                              ; %Flow63
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 2
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
                                        ; implicit-def: $vgpr3 : SGPR spill to VGPR lane
	v_writelane_b32 v3, s0, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_53
; %bb.52:
	s_branch .LBB19_54
.LBB19_53:                              ; %Flow64
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 0
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_6
.LBB19_54:                              ; %NodeBlock45
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_57
; %bb.55:                               ; %NodeBlock43
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 2
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_63
; %bb.56:                               ; %LeafBlock41
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 3
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_71
	s_branch .LBB19_65
.LBB19_57:                              ; %Flow61
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 1
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 4
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_75
; %bb.58:                               ; %NodeBlock39
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v3, s1, 5
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_59
	s_branch .LBB19_62
.LBB19_59:                              ; %Flow59
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 5
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 6
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_74
; %bb.60:                               ; %LeafBlock37
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v3, s0, 7
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB19_73
; %bb.61:
	s_waitcnt_vscnt null, 0x0
	buffer_gl1_inv
	buffer_gl0_inv
	s_branch .LBB19_73
.LBB19_62:
	s_waitcnt_vscnt null, 0x0
	s_branch .LBB19_59
.LBB19_63:                              ; %Flow56
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 2
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v3, s0, 8
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v3, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB19_72
; %bb.64:
	s_waitcnt_vscnt null, 0x0
	buffer_gl1_inv
	buffer_gl0_inv
	s_branch .LBB19_72
.LBB19_65:
	s_waitcnt_vscnt null, 0x0
	buffer_gl1_inv
	buffer_gl0_inv
	s_branch .LBB19_71
.LBB19_66:                              ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 9
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_20
.LBB19_67:                              ; %Flow48
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 14
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_14
.LBB19_68:                              ; %Flow49
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 13
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_69:                              ; %Flow51
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 12
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_70:                              ; %Flow53
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 10
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_10
.LBB19_71:                              ; %Flow55
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 3
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_63
.LBB19_72:                              ; %Flow57
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 8
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_57
.LBB19_73:                              ; %Flow58
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 7
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_74:                              ; %Flow60
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 6
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_75:                              ; %Flow62
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 4
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_53
.LBB19_76:                              ; %Flow65
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 26
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_48
.LBB19_77:                              ; %Flow67
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 31
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_42
.LBB19_78:                              ; %Flow68
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 30
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_79:                              ; %Flow70
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 29
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_80:                              ; %Flow72
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 27
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_38
.LBB19_81:                              ; %Flow73
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 17
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_34
.LBB19_82:                              ; %Flow75
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 22
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_28
.LBB19_83:                              ; %Flow76
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 21
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_84:                              ; %Flow78
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 20
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_85:                              ; %Flow80
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 18
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_24
.LBB19_86:                              ; %Flow83
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 23
	s_or_b32 exec_lo, exec_lo, s0
.LBB19_87:                              ; %Flow85
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v3, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v3, 4
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB19_2
.LBB19_88:
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v3, off, s33 offset:16 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffe8
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end19:
	.size	_Z22atomic_work_item_fencej12memory_order12memory_scope, .Lfunc_end19-_Z22atomic_work_item_fencej12memory_order12memory_scope
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 4416
; NumSgprs: 34
; NumVgprs: 4
; ScratchSize: 24
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z7barrierj
	.type	_Z7barrierj,@function
_Z7barrierj:                            ; @_Z7barrierj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v4, s33 offset:16 ; 4-byte Folded Spill
	scratch_store_b32 off, v5, s33 offset:20 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 32
	v_writelane_b32 v4, s30, 0
	v_writelane_b32 v4, s31, 1
	scratch_store_b32 off, v31, s33 offset:8 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr5 : SGPR spill to VGPR lane
	v_writelane_b32 v5, s6, 0
	v_writelane_b32 v5, s7, 1
	scratch_store_b32 off, v0, s33 offset:4 ; 4-byte Folded Spill
	v_writelane_b32 v5, s15, 2
	v_writelane_b32 v5, s14, 3
	v_writelane_b32 v5, s13, 4
	v_writelane_b32 v5, s12, 5
	v_writelane_b32 v5, s10, 6
	v_writelane_b32 v5, s11, 7
	v_writelane_b32 v5, s8, 8
	v_writelane_b32 v5, s9, 9
	v_writelane_b32 v5, s4, 10
	v_writelane_b32 v5, s5, 11
	s_mov_b32 s0, 0
	v_cmp_ne_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v5, s1, 12
	s_or_saveexec_b32 s18, -1
	scratch_store_b32 off, v5, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s18
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB20_2
; %bb.1:
	s_or_saveexec_b32 s18, -1
	scratch_load_b32 v5, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s18
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v5, 2
	v_readlane_b32 s14, v5, 3
	v_readlane_b32 s13, v5, 4
	v_readlane_b32 s12, v5, 5
	v_readlane_b32 s10, v5, 6
	v_readlane_b32 s11, v5, 7
	v_readlane_b32 s8, v5, 8
	v_readlane_b32 s9, v5, 9
	v_readlane_b32 s6, v5, 0
	v_readlane_b32 s7, v5, 1
	v_readlane_b32 s4, v5, 10
	v_readlane_b32 s5, v5, 11
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:8 ; 4-byte Folded Reload
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(1)
	v_cmp_eq_u32_e64 s1, v0, s0
	v_writelane_b32 v5, s1, 13
	s_mov_b32 s16, 5
	v_mov_b32_e32 v1, s16
	v_cndmask_b32_e64 v1, s0, v1, s1
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z22atomic_work_item_fencej12memory_order12memory_scope@rel32@lo+4
	s_addc_u32 s1, s1, _Z22atomic_work_item_fencej12memory_order12memory_scope@rel32@hi+12
	v_writelane_b32 v5, s0, 14
	v_writelane_b32 v5, s1, 15
	s_or_saveexec_b32 s18, -1
	scratch_store_b32 off, v5, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s18
	v_mov_b32_e32 v2, 1
	scratch_store_b32 off, v2, s33 offset:12 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:12 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:8 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	v_readlane_b32 s15, v5, 2
	v_readlane_b32 s14, v5, 3
	v_readlane_b32 s13, v5, 4
	v_readlane_b32 s12, v5, 5
	v_readlane_b32 s10, v5, 6
	v_readlane_b32 s11, v5, 7
	v_readlane_b32 s8, v5, 8
	v_readlane_b32 s9, v5, 9
	v_readlane_b32 s6, v5, 0
	v_readlane_b32 s7, v5, 1
	v_readlane_b32 s3, v5, 13
	v_readlane_b32 s4, v5, 10
	v_readlane_b32 s5, v5, 11
	v_readlane_b32 s0, v5, 14
	v_readlane_b32 s1, v5, 15
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	s_barrier
	s_mov_b32 s2, 2
	v_mov_b32_e32 v1, s16
	v_cndmask_b32_e64 v1, s2, v1, s3
	s_swappc_b64 s[30:31], s[0:1]
.LBB20_2:                               ; %Flow
	s_or_saveexec_b32 s18, -1
	scratch_load_b32 v5, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s18
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v5, 12
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v5, s0, 16
	s_or_saveexec_b32 s18, -1
	scratch_store_b32 off, v5, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s18
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB20_4
; %bb.3:
	s_waitcnt_vscnt null, 0x0
	s_barrier
.LBB20_4:
	s_or_saveexec_b32 s18, -1
	scratch_load_b32 v5, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s18
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v5, 16
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s30, v4, 0
	v_readlane_b32 s31, v4, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v4, off, s33 offset:16 ; 4-byte Folded Reload
	scratch_load_b32 v5, off, s33 offset:20 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffe0
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end20:
	.size	_Z7barrierj, .Lfunc_end20-_Z7barrierj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 808
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 56
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z3maxjj
	.type	_Z3maxjj,@function
_Z3maxjj:                               ; @_Z3maxjj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s0, s33
	s_mov_b32 s33, s32
	v_max_u32_e64 v0, v0, v1
	s_mov_b32 s33, s0
	s_setpc_b64 s[30:31]
.Lfunc_end21:
	.size	_Z3maxjj, .Lfunc_end21-_Z3maxjj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 28
; NumSgprs: 34
; NumVgprs: 2
; ScratchSize: 0
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z6vload8mPU3AS3Kj
	.type	_Z6vload8mPU3AS3Kj,@function
_Z6vload8mPU3AS3Kj:                     ; @_Z6vload8mPU3AS3Kj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	v_mov_b32_e32 v3, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s0, 5
	v_lshl_add_u32 v6, v0, s0, v2
	ds_load_2addr_b32 v[1:2], v6 offset1:1
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v2
	ds_load_2addr_b32 v[3:4], v6 offset0:2 offset1:3
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v4
	ds_load_2addr_b32 v[7:8], v6 offset0:4 offset1:5
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	ds_load_2addr_b32 v[7:8], v6 offset0:6 offset1:7
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v7, v8
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end22:
	.size	_Z6vload8mPU3AS3Kj, .Lfunc_end22-_Z6vload8mPU3AS3Kj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 120
; NumSgprs: 34
; NumVgprs: 9
; ScratchSize: 0
; MemoryBound: 0
	.text
	.hidden	weave                           ; -- Begin function weave
	.globl	weave
	.p2align	2
	.type	weave,@function
weave:                                  ; @weave
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s22, s33
	s_add_i32 s33, s32, 31
	s_and_b32 s33, s33, 0xffffffe0
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v34, s33 offset:1700 ; 4-byte Folded Spill
	scratch_store_b32 off, v35, s33 offset:1704 ; 4-byte Folded Spill
	scratch_store_b32 off, v36, s33 offset:1708 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x6e0
	v_writelane_b32 v34, s30, 0
	v_writelane_b32 v34, s31, 1
	scratch_store_b32 off, v31, s33 offset:1564 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s6, 0
	v_writelane_b32 v36, s7, 1
	scratch_store_b32 off, v24, s33 offset:1568 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:1584 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:1576 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:1592 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:1580 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:1588 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:1604 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:1596 ; 4-byte Folded Spill
	v_mov_b32_e32 v16, v13
	scratch_store_b32 off, v12, s33 offset:1600 ; 4-byte Folded Spill
	v_mov_b32_e32 v21, v11
	scratch_load_b32 v11, off, s33 offset:1604 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v10
	scratch_load_b32 v10, off, s33 offset:1600 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v9
	v_mov_b32_e32 v12, v8
	scratch_load_b32 v8, off, s33 offset:1596 ; 4-byte Folded Reload
	v_mov_b32_e32 v24, v7
	scratch_load_b32 v7, off, s33 offset:1592 ; 4-byte Folded Reload
	v_mov_b32_e32 v28, v6
	scratch_load_b32 v6, off, s33 offset:1588 ; 4-byte Folded Reload
	v_mov_b32_e32 v29, v5
	scratch_load_b32 v5, off, s33 offset:1584 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v4
	scratch_load_b32 v4, off, s33 offset:1580 ; 4-byte Folded Reload
	v_mov_b32_e32 v9, v2
	scratch_load_b32 v2, off, s33 offset:1576 ; 4-byte Folded Reload
	scratch_store_b32 off, v9, s33 offset:1572 ; 4-byte Folded Spill
	v_mov_b32_e32 v9, v1
	scratch_load_b32 v1, off, s33 offset:1572 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v0
	scratch_load_b32 v0, off, s33 offset:1568 ; 4-byte Folded Reload
	v_writelane_b32 v36, s15, 2
	v_writelane_b32 v36, s14, 3
	v_writelane_b32 v36, s13, 4
	v_writelane_b32 v36, s12, 5
	v_writelane_b32 v36, s10, 6
	v_writelane_b32 v36, s11, 7
	v_writelane_b32 v36, s8, 8
	v_writelane_b32 v36, s9, 9
	v_writelane_b32 v36, s4, 10
	v_writelane_b32 v36, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v23
	v_mov_b32_e32 v14, v22
	v_mov_b32_e32 v15, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v29
	v_mov_b32_e32 v22, v28
	v_mov_b32_e32 v23, v24
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr27 killed $vgpr27 def $vgpr27_vgpr28_vgpr29_vgpr30 killed $exec
	v_mov_b32_e32 v28, v9
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v29, v1
	v_mov_b32_e32 v30, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v25
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v16
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[27:30], s33
	scratch_store_b128 off, v[20:23], s33 offset:16
	scratch_store_b128 off, v[12:15], s33 offset:32
	scratch_store_b64 off, v[10:11], s33 offset:48
	scratch_store_b64 off, v[8:9], s33 offset:56
	scratch_store_b64 off, v[6:7], s33 offset:64
	scratch_store_b32 off, v18, s33 offset:72
	scratch_store_b32 off, v19, s33 offset:76
	scratch_store_b64 off, v[4:5], s33 offset:80
	scratch_store_b64 off, v[2:3], s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_store_b32 off, v26, s33 offset:104
	v_mov_b32_e32 v0, 31
	scratch_store_b32 off, v0, s33 offset:108
	v_mov_b32_e32 v0, 19
	scratch_store_b32 off, v0, s33 offset:112
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v36, s2, 12
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:116
	scratch_load_b32 v0, off, s33 offset:104
	s_mov_b32 s0, 10
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	s_mov_b32 s0, 0x1ffffc00
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:120
	scratch_load_b32 v0, off, s33 offset:120
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:124
	scratch_load_b64 v[3:4], off, s33 offset:48
	scratch_load_b32 v2, off, s33 offset:120
	s_mov_b32 s0, 32
	v_writelane_b32 v36, s0, 13
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s0, v[3:4]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, clFillMemoryByGroup@rel32@lo+4
	s_addc_u32 s1, s1, clFillMemoryByGroup@rel32@hi+12
	v_writelane_b32 v36, s0, 14
	v_writelane_b32 v36, s1, 15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s2, v36, 13
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_readlane_b32 s0, v36, 14
	v_readlane_b32 s1, v36, 15
	scratch_load_b64 v[3:4], off, s33 offset:56
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[3:4]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s2, v36, 13
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_readlane_b32 s0, v36, 14
	v_readlane_b32 s1, v36, 15
	scratch_load_b64 v[3:4], off, s33 offset:64
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s2, v[3:4]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v36, 12
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:1276
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 16
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_1:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 17
	v_readlane_b32 s1, v36, 16
	v_writelane_b32 v36, s1, 18
	scratch_load_b32 v0, off, s33 offset:1276
	s_mov_b32 s1, 10
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 19
	v_writelane_b32 v36, s0, 20
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 21
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_3
; %bb.2:                                ;   in Loop: Header=BB23_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	scratch_load_b64 v[7:8], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:1276
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v2
	s_mov_b32 s1, 0
	v_writelane_b32 v36, s1, 22
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	s_mov_b32 s16, 2
	v_lshlrev_b64 v[5:6], s16, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	s_mov_b32 s0, 1
	v_writelane_b32 v36, s0, 23
	v_lshrrev_b32_e64 v2, s0, v2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v4, s1
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	v_lshlrev_b64 v[4:5], s16, v[2:3]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v5
	v_add_co_u32 v3, s1, v2, v3
	v_add_co_ci_u32_e64 v0, s1, v0, v1, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s0, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 32
	v_writelane_b32 v36, s0, 24
	v_lshrrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v1, v3
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, clFillMemoryByGroup@rel32@lo+4
	s_addc_u32 s1, s1, clFillMemoryByGroup@rel32@hi+12
	v_writelane_b32 v36, s0, 25
	v_writelane_b32 v36, s1, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s17, v36, 22
	v_readlane_b32 s3, v36, 23
	v_readlane_b32 s2, v36, 24
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_readlane_b32 s0, v36, 25
	v_readlane_b32 s1, v36, 26
	scratch_load_b64 v[7:8], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:1276
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v2
                                        ; implicit-def: $sgpr18
	v_mov_b32_e32 v3, s17
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s16, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s18, v0, v4
	v_add_co_ci_u32_e64 v3, s18, v1, v3, s18
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshrrev_b32_e64 v2, s3, v2
                                        ; implicit-def: $sgpr18
	v_mov_b32_e32 v4, s17
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	v_lshlrev_b64 v[4:5], s16, v[2:3]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v5
	v_add_co_u32 v3, s17, v2, v3
	v_add_co_ci_u32_e64 v0, s17, v0, v1, s17
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s3, v0
	v_mov_b32_e32 v0, v3
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v1, v3
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s17, v36, 22
	v_readlane_b32 s3, v36, 23
	v_readlane_b32 s2, v36, 24
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_readlane_b32 s0, v36, 25
	v_readlane_b32 s1, v36, 26
	scratch_load_b64 v[7:8], off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:1276
	scratch_load_b32 v2, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v2
                                        ; implicit-def: $sgpr18
	v_mov_b32_e32 v3, s17
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s16, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s18, v0, v4
	v_add_co_ci_u32_e64 v3, s18, v1, v3, s18
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshrrev_b32_e64 v2, s3, v2
                                        ; implicit-def: $sgpr18
	v_mov_b32_e32 v4, s17
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	v_lshlrev_b64 v[4:5], s16, v[2:3]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v5
	v_add_co_u32 v3, s16, v2, v3
	v_add_co_ci_u32_e64 v0, s16, v0, v1, s16
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v2, s3, v0
	v_mov_b32_e32 v0, v3
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v1, v3
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB23_4
.LBB23_3:                               ; %Flow19
                                        ;   in Loop: Header=BB23_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 21
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 18
	v_readlane_b32 s1, v36, 20
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 17
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 27
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_1
	s_branch .LBB23_5
.LBB23_4:                               ;   in Loop: Header=BB23_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 19
	scratch_load_b32 v0, off, s33 offset:1276
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1276
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 20
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_3
.LBB23_5:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 27
	s_or_b32 exec_lo, exec_lo, s0
; %bb.6:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:116
	s_mov_b32 s0, 19
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1280
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1284
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 28
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_7:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s0, v35, 29
	v_readlane_b32 s1, v35, 28
	v_writelane_b32 v35, s1, 30
	v_writelane_b32 v35, s0, 31
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v35, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	s_mov_b32 s0, 0
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s0, 0
	scratch_load_b32 v0, off, s33 offset:1284
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1608 ; 8-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z14get_local_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z14get_local_sizej@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v36, s2, 1
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s4, v36, 0
	v_readlane_b32 s1, v36, 1
	v_readlane_b32 s0, v35, 31
	v_mov_b32_e32 v12, v0
	v_mov_b32_e32 v14, v1
	scratch_load_b64 v[0:1], off, s33 offset:1608 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v3, v12
	v_mov_b32_e32 v4, v14
	v_cvt_f32_u32_e64 v2, v12
	v_cvt_f32_u32_e64 v5, v14
	s_mov_b32 s2, 0x4f800000
	v_fmac_f32_e64 v2, v5, s2
	v_rcp_f32_e64 v2, v2
	s_mov_b32 s2, 0x5f7ffffc
	s_waitcnt_depctr 0xfff
	v_mul_f32_e64 v2, v2, s2
	s_mov_b32 s2, 0x2f800000
	v_mul_f32_e64 v5, v2, s2
	v_trunc_f32_e64 v5, v5
	s_mov_b32 s2, 0xcf800000
	v_fmac_f32_e64 v2, v5, s2
	v_cvt_u32_f32_e64 v2, v2
	s_mov_b64 s[6:7], 0
	s_mov_b32 s3, s6
	v_mov_b32_e32 v7, v3
	s_mov_b32 s2, s7
	v_mov_b32_e32 v6, v4
	v_sub_co_u32 v9, s3, s3, v7
	v_sub_co_ci_u32_e64 v6, s2, s2, v6, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v6
	s_mov_b32 s3, 32
	v_writelane_b32 v36, s3, 2
	v_lshrrev_b64 v[6:7], s3, v[9:10]
	v_mov_b32_e32 v8, v6
	v_mul_lo_u32 v15, v8, v2
	v_cvt_u32_f32_e64 v5, v5
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v7, v5
	v_lshrrev_b64 v[6:7], s3, v[6:7]
	v_mov_b32_e32 v7, v6
	v_mov_b32_e32 v11, v9
	v_mul_lo_u32 v13, v11, v7
	v_mad_u64_u32 v[9:10], s2, v11, v2, 0
	v_mov_b32_e32 v6, v10
	v_add3_u32 v17, v6, v13, v15
	v_mad_u64_u32 v[15:16], s2, v2, v17, 0
	v_mov_b32_e32 v18, v15
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s4
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v6
	v_mov_b32_e32 v6, v19
	v_mov_b32_e32 v15, v16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v13, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v13
	v_lshlrev_b64 v[15:16], s3, v[15:16]
	v_mov_b32_e32 v13, v16
	v_or_b32_e64 v6, v6, v13
	v_mov_b32_e32 v13, v18
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	v_or_b32_e64 v18, v13, v15
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v6
	v_mov_b32_e32 v10, v9
	v_mul_hi_u32 v20, v2, v10
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s4
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21 killed $exec
	v_mov_b32_e32 v21, v6
	v_mov_b32_e32 v13, v20
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v9, v19
	v_add_co_u32 v15, s2, v13, v15
	v_add_co_ci_u32_e64 v6, s2, v6, v9, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v6
	v_mov_b32_e32 v6, v15
	v_mov_b32_e32 v9, v16
	v_mad_u64_u32 v[15:16], s2, v7, v10, 0
	v_mov_b32_e32 v18, v15
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v10, s4
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v10
	v_mov_b32_e32 v10, v19
	v_mov_b32_e32 v15, v16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v13, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v13
	v_lshlrev_b64 v[15:16], s3, v[15:16]
	v_mov_b32_e32 v13, v16
	v_or_b32_e64 v10, v10, v13
	v_mov_b32_e32 v13, v18
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	v_or_b32_e64 v15, v13, v15
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v10
	v_mov_b32_e32 v13, v15
	v_mov_b32_e32 v10, v16
	v_mad_u64_u32 v[15:16], s2, v7, v17, 0
	v_mov_b32_e32 v7, v16
	v_add_co_u32 v6, vcc_lo, v6, v13
	v_add_co_ci_u32_e32 v9, vcc_lo, v9, v10, vcc_lo
	v_mov_b32_e32 v10, s1
	v_add_co_ci_u32_e32 v17, vcc_lo, v7, v10, vcc_lo
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v7, s2
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v7
	v_lshlrev_b64 v[17:18], s3, v[17:18]
	v_mov_b32_e32 v10, v18
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v7, s4
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v7
	v_mov_b32_e32 v7, v16
	v_or_b32_e64 v7, v7, v10
	v_mov_b32_e32 v13, v17
	v_mov_b32_e32 v10, v15
	v_or_b32_e64 v15, v10, v13
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v7
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v9
	v_lshrrev_b64 v[17:18], s3, v[6:7]
	v_mov_b32_e32 v6, v17
	v_mov_b32_e32 v10, v15
	v_mov_b32_e32 v7, v18
	v_mov_b32_e32 v9, v16
	v_add_co_u32 v6, s2, v6, v10
	v_add_co_ci_u32_e64 v9, s2, v7, v9, s2
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v9
	v_mov_b32_e32 v9, v6
	v_add_co_u32 v2, s2, v2, v9
	v_lshrrev_b64 v[6:7], s3, v[6:7]
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	v_add_co_ci_u32_e64 v5, s2, v5, v6, s2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v7, v5
	v_lshrrev_b64 v[6:7], s3, v[6:7]
	v_mov_b32_e32 v7, v6
	v_mad_u64_u32 v[15:16], s2, v11, v2, 0
	v_mov_b32_e32 v6, v15
	v_mad_u64_u32 v[17:18], s2, v7, v6, 0
	v_mov_b32_e32 v19, v17
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v9, s4
                                        ; kill: def $vgpr19 killed $vgpr19 def $vgpr19_vgpr20 killed $exec
	v_mov_b32_e32 v20, v9
	v_mov_b32_e32 v9, v20
	v_mov_b32_e32 v17, v18
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v10, s2
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v10
	v_lshlrev_b64 v[17:18], s3, v[17:18]
	v_mov_b32_e32 v10, v18
	v_or_b32_e64 v9, v9, v10
	v_mov_b32_e32 v10, v19
	v_mov_b32_e32 v13, v17
	v_or_b32_e64 v17, v10, v13
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v9
	v_mov_b32_e32 v10, v17
	v_mov_b32_e32 v9, v18
	v_mul_lo_u32 v11, v11, v7
	v_mul_lo_u32 v13, v8, v2
	v_mov_b32_e32 v8, v16
	v_add3_u32 v11, v8, v11, v13
	v_mad_u64_u32 v[15:16], s2, v2, v11, 0
	v_mov_b32_e32 v17, v15
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v8, s4
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v8
	v_mov_b32_e32 v8, v18
	v_mov_b32_e32 v15, v16
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v13, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v13
	v_lshlrev_b64 v[15:16], s3, v[15:16]
	v_mov_b32_e32 v13, v16
	v_or_b32_e64 v8, v8, v13
	v_mov_b32_e32 v13, v17
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	v_or_b32_e64 v16, v13, v15
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17 killed $exec
	v_mov_b32_e32 v17, v8
	v_mul_hi_u32 v18, v2, v6
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s4
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v6
	v_mov_b32_e32 v13, v18
	v_mov_b32_e32 v15, v16
	v_mov_b32_e32 v6, v19
	v_mov_b32_e32 v8, v17
	v_add_co_u32 v15, s2, v13, v15
	v_add_co_ci_u32_e64 v6, s2, v6, v8, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v6
	v_mov_b32_e32 v6, v15
	v_mov_b32_e32 v8, v16
	v_mad_u64_u32 v[15:16], s2, v7, v11, 0
	v_mov_b32_e32 v7, v16
	v_add_co_u32 v6, vcc_lo, v6, v10
	v_add_co_ci_u32_e32 v8, vcc_lo, v8, v9, vcc_lo
	v_mov_b32_e32 v9, s1
	v_add_co_ci_u32_e32 v9, vcc_lo, v7, v9, vcc_lo
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v7, s2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v7
	v_lshlrev_b64 v[9:10], s3, v[9:10]
	v_mov_b32_e32 v11, v10
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v7, s4
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v7
	v_mov_b32_e32 v7, v16
	v_or_b32_e64 v7, v7, v11
	v_mov_b32_e32 v10, v9
	v_mov_b32_e32 v9, v15
	v_or_b32_e64 v10, v9, v10
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v7
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v8
	v_lshrrev_b64 v[7:8], s3, v[6:7]
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v9, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v8, v11
	v_add_co_u32 v6, s2, v6, v9
	v_add_co_ci_u32_e64 v8, s2, v7, v8, s2
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v8, v6
	v_add_co_u32 v2, s2, v2, v8
	v_lshrrev_b64 v[6:7], s3, v[6:7]
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	v_add_co_ci_u32_e64 v7, s2, v5, v6, s2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v7
	v_lshrrev_b64 v[5:6], s3, v[5:6]
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	s_mov_b32 s2, 0x1f00
	v_mad_u64_u32 v[6:7], s5, v5, s2, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v5, s4
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v5, v10
	v_mov_b32_e32 v6, v7
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v8, s5
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v8
	v_lshlrev_b64 v[7:8], s3, v[6:7]
	v_mov_b32_e32 v6, v8
	v_or_b32_e64 v5, v5, v6
	v_mov_b32_e32 v6, v9
                                        ; kill: def $vgpr7 killed $vgpr7 killed $vgpr7_vgpr8 killed $exec
	v_or_b32_e64 v8, v6, v7
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v5
	v_mul_hi_u32 v10, v2, s2
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v2, s4
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v2
	v_mov_b32_e32 v5, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v2, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v5, s4, v5, v7
	v_add_co_ci_u32_e64 v2, s4, v2, v6, s4
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v2
	v_lshrrev_b64 v[10:11], s3, v[5:6]
	v_mov_b32_e32 v2, v10
	v_mov_b32_e32 v7, v3
	v_mad_u64_u32 v[5:6], s4, v7, v2, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v7, s4
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v7
	v_lshrrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v7, v3
	v_mad_u64_u32 v[3:4], s3, v7, v2, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
	v_sub_nc_u32_e64 v4, s1, v3
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	v_sub_co_u32 v5, s3, s2, v5
	v_sub_co_ci_u32_e64 v4, s2, v4, v14, s3
	v_sub_co_u32 v6, s2, v5, v12
	v_sub_co_ci_u32_e64 v7, s2, v4, s1, s2
	v_cmp_ge_u32_e64 s2, v7, v14
	s_mov_b32 s5, -1
	v_mov_b32_e32 v4, s5
	v_cndmask_b32_e64 v4, s1, v4, s2
	v_cmp_eq_u32_e64 s2, v7, v14
	v_cmp_ge_u32_e64 s4, v6, v12
	v_mov_b32_e32 v6, s5
	v_cndmask_b32_e64 v6, s1, v6, s4
	v_cndmask_b32_e64 v4, v4, v6, s2
	v_cmp_ne_u32_e64 s2, v4, s1
	s_mov_b64 s[8:9], 2
	v_mov_b32_e32 v6, v10
	s_mov_b32 s6, s8
	v_mov_b32_e32 v4, v11
	s_mov_b32 s4, s9
	v_add_co_u32 v8, s6, v6, s6
	v_add_co_ci_u32_e64 v4, s4, v4, s4, s6
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v4
	v_mov_b32_e32 v13, v9
	s_mov_b64 s[8:9], 1
	v_mov_b32_e32 v6, v10
	s_mov_b32 s6, s8
	v_mov_b32_e32 v4, v11
	s_mov_b32 s4, s9
	v_add_co_u32 v6, s6, v6, s6
	v_add_co_ci_u32_e64 v4, s4, v4, s4, s6
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v4
	v_mov_b32_e32 v4, v7
	v_cndmask_b32_e64 v4, v4, v13, s2
	v_sub_co_ci_u32_e64 v13, s3, s1, v3, s3
	v_cmp_ge_u32_e64 s3, v13, v14
	v_mov_b32_e32 v3, s5
	v_cndmask_b32_e64 v3, s1, v3, s3
	v_cmp_eq_u32_e64 s3, v13, v14
	v_cmp_ge_u32_e64 s4, v5, v12
	v_mov_b32_e32 v5, s5
	v_cndmask_b32_e64 v5, s1, v5, s4
	v_cndmask_b32_e64 v3, v3, v5, s3
	v_cmp_ne_u32_e64 s1, v3, s1
	v_mov_b32_e32 v3, v11
	v_cndmask_b32_e64 v4, v3, v4, s1
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v3, v6
	v_cndmask_b32_e64 v3, v3, v5, s2
	v_cndmask_b32_e64 v2, v2, v3, s1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	s_waitcnt vmcnt(0)
	v_cmp_lt_u64_e64 s1, v[0:1], v[2:3]
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 3
	v_writelane_b32 v36, s0, 4
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 5
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_9
; %bb.8:                                ;   in Loop: Header=BB23_7 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:80
	s_mov_b32 s1, 0
	scratch_load_b32 v3, off, s33 offset:1280
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(3)
	v_writelane_b32 v36, s0, 6
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1288
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[16:19], off, s33 offset:32
	scratch_load_b32 v12, off, s33 offset:1288
	scratch_load_b64 v[1:2], off, s33 offset:88
	scratch_load_b32 v13, off, s33 offset:1280
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v0
	s_mov_b32 s1, 3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v21, v14
	v_mov_b32_e32 v20, v13
	v_lshlrev_b64 v[20:21], s1, v[20:21]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v11, v20
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v21
	v_add_co_u32 v0, s1, v0, v11
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b64 v[0:1], v[0:1], off
	scratch_load_b64 v[22:23], off, s33 offset:96
	v_lshlrev_b64 v[20:21], s0, v[13:14]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v13, v22
	v_mov_b32_e32 v14, v20
	v_mov_b32_e32 v2, v23
	v_mov_b32_e32 v11, v21
	v_add_co_u32 v13, s0, v13, v14
	v_add_co_ci_u32_e64 v2, s0, v2, v11, s0
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v2
	global_load_b32 v15, v[13:14], off
	v_mov_b32_e32 v13, v0
	s_mov_b32 s0, 32
	v_lshrrev_b64 v[0:1], s0, v[0:1]
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v16
	v_mov_b32_e32 v9, v17
	v_mov_b32_e32 v10, v18
	v_mov_b32_e32 v11, v19
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, longModuloByMul384@rel32@lo+4
	s_addc_u32 s1, s1, longModuloByMul384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	scratch_store_b32 off, v0, s33 offset:1292
	scratch_load_b32 v0, off, s33 offset:1292
	scratch_load_b32 v1, off, s33 offset:1288
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, intInvert@rel32@lo+4
	s_addc_u32 s1, s1, intInvert@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v36, 6
	scratch_load_b32 v1, off, s33 offset:1284
	s_add_i32 s1, s33, 0x80
	v_mov_b32_e32 v2, s1
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v1, v1, s0, v2
	scratch_store_b32 v1, v0, off
	s_branch .LBB23_10
.LBB23_9:                               ; %Flow18
                                        ;   in Loop: Header=BB23_7 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 5
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v35, 30
	v_readlane_b32 s1, v36, 4
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v35, s1, 29
	s_mov_b32 s1, s0
	v_writelane_b32 v35, s1, 28
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v35, s33 offset:1544 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 7
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_7
	s_branch .LBB23_11
.LBB23_10:                              ;   in Loop: Header=BB23_7 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 3
	scratch_load_b32 v0, off, s33 offset:1284
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1284
	scratch_load_b32 v0, off, s33 offset:1280
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1280
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 4
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_9
.LBB23_11:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 7
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0x800
	scratch_store_b32 off, v0, s33 offset:1296
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1300
	scratch_load_b32 v0, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1304
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1308
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 8
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_13:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB23_16 Depth 2
                                        ;     Child Loop BB23_22 Depth 2
                                        ;       Child Loop BB23_30 Depth 3
                                        ;       Child Loop BB23_36 Depth 3
                                        ;         Child Loop BB23_39 Depth 4
                                        ;           Child Loop BB23_42 Depth 5
                                        ;       Child Loop BB23_61 Depth 3
                                        ;         Child Loop BB23_64 Depth 4
                                        ;       Child Loop BB23_92 Depth 3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 9
	v_readlane_b32 s1, v36, 8
	v_writelane_b32 v36, s1, 10
	scratch_load_b32 v0, off, s33 offset:1308
	scratch_load_b32 v1, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 11
	v_writelane_b32 v36, s0, 12
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 13
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_15
; %bb.14:                               ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1308
	s_mov_b32 s0, 13
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1312
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1316
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_16
.LBB23_15:                              ; %Flow17
                                        ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 13
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 10
	v_readlane_b32 s1, v36, 12
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 8
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_13
	s_branch .LBB23_101
.LBB23_16:                              ;   Parent Loop BB23_13 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 16
	v_readlane_b32 s1, v36, 14
	v_writelane_b32 v36, s1, 17
	scratch_load_b32 v0, off, s33 offset:1316
	s_mov_b32 s1, 31
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 18
	v_writelane_b32 v36, s0, 19
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 20
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_18
; %bb.17:                               ;   in Loop: Header=BB23_16 Depth=2
	scratch_load_b32 v0, off, s33 offset:1316
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v2, s0, v0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v0, s0
	v_add_nc_u32_e64 v0, v0, v2
	scratch_load_b32 v0, v0, off
	s_add_i32 s0, s33, 0x480
	v_mov_b32_e32 v1, s0
	v_add_nc_u32_e64 v1, v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	s_branch .LBB23_19
.LBB23_18:                              ; %Flow16
                                        ;   in Loop: Header=BB23_16 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 20
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 17
	v_readlane_b32 s1, v36, 19
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 14
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 21
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_16
	s_branch .LBB23_20
.LBB23_19:                              ;   in Loop: Header=BB23_16 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 18
	scratch_load_b32 v0, off, s33 offset:1316
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1316
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_18
.LBB23_20:                              ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 21
	s_or_b32 exec_lo, exec_lo, s0
; %bb.21:                               ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1320
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v36, s0, 22
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_22:                              ;   Parent Loop BB23_13 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB23_30 Depth 3
                                        ;       Child Loop BB23_36 Depth 3
                                        ;         Child Loop BB23_39 Depth 4
                                        ;           Child Loop BB23_42 Depth 5
                                        ;       Child Loop BB23_61 Depth 3
                                        ;         Child Loop BB23_64 Depth 4
                                        ;       Child Loop BB23_92 Depth 3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v36, 23
	v_readlane_b32 s2, v36, 24
	v_readlane_b32 s0, v36, 25
	v_readlane_b32 s3, v36, 22
	v_writelane_b32 v36, s3, 26
	v_writelane_b32 v36, s1, 27
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s1, 19
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s3, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 28
	s_or_b32 s2, s2, exec_lo
	v_writelane_b32 v36, s2, 29
	v_writelane_b32 v36, s2, 30
	v_writelane_b32 v36, s0, 31
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s0, exec_lo
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s0, 0
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_24
; %bb.23:                               ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 10
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s2, v0, s0
	v_writelane_b32 v36, s2, 1
	s_mov_b32 s0, 9
	v_cmp_gt_u32_e64 s1, v0, s0
	s_mov_b32 s0, -1
	v_writelane_b32 v36, s2, 2
	v_writelane_b32 v36, s0, 3
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 4
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_27
	s_branch .LBB23_25
.LBB23_24:                              ; %Flow13
                                        ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 0
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s3, v35, 27
	v_readlane_b32 s4, v35, 26
	v_readlane_b32 s2, v35, 30
	v_readlane_b32 s1, v35, 31
	s_mov_b32 s0, s2
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s4
	s_and_not1_b32 s3, s3, exec_lo
	s_and_b32 s4, s1, exec_lo
	s_or_b32 s3, s3, s4
	v_writelane_b32 v36, s3, 5
	v_writelane_b32 v35, s3, 23
	v_writelane_b32 v35, s2, 24
	v_writelane_b32 v35, s1, 25
	s_mov_b32 s1, s0
	v_writelane_b32 v35, s1, 22
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v35, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 6
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_22
	s_branch .LBB23_103
.LBB23_25:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v36, 1
	scratch_load_b32 v0, off, s33 offset:1308
	scratch_load_b32 v1, off, s33 offset:104
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v1, s0, v1
	v_cmp_ge_u32_e64 s2, v0, v1
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	s_and_not1_b32 s1, s1, exec_lo
	s_and_b32 s2, s2, exec_lo
	s_or_b32 s1, s1, s2
	v_writelane_b32 v36, s1, 2
	v_writelane_b32 v36, s0, 3
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_27
.LBB23_26:                              ;   in Loop: Header=BB23_13 Depth=1
	s_branch .LBB23_99
.LBB23_27:                              ; %Flow14
                                        ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v36, 4
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v36, 2
	v_readlane_b32 s0, v36, 3
	v_writelane_b32 v36, s0, 7
	s_mov_b32 s0, -1
	v_writelane_b32 v36, s0, 8
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 9
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_29
; %bb.28:                               ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1324
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:1328
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 10
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_30
.LBB23_29:                              ; %Flow15
                                        ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(1)
	v_readlane_b32 s4, v35, 9
	s_or_b32 exec_lo, exec_lo, s4
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v36, 29
	v_readlane_b32 s3, v35, 7
	v_readlane_b32 s0, v36, 28
	v_readlane_b32 s2, v35, 8
	s_and_not1_b32 s0, s0, exec_lo
	s_and_b32 s3, s3, exec_lo
	s_or_b32 s0, s0, s3
	s_and_not1_b32 s1, s1, exec_lo
	s_and_b32 s2, s2, exec_lo
	s_or_b32 s1, s1, s2
	v_writelane_b32 v36, s1, 30
	v_writelane_b32 v36, s0, 31
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_24
.LBB23_30:                              ;   Parent Loop BB23_13 Depth=1
                                        ;     Parent Loop BB23_22 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 11
	v_readlane_b32 s1, v36, 10
	v_writelane_b32 v36, s1, 12
	scratch_load_b32 v0, off, s33 offset:1324
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 13
	v_writelane_b32 v36, s0, 14
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_32
; %bb.31:                               ;   in Loop: Header=BB23_30 Depth=3
	v_mov_b32_e32 v0, -1
	scratch_store_b32 off, v0, s33 offset:1332
	scratch_load_b32 v1, off, s33 offset:1332
	scratch_load_b32 v2, off, s33 offset:1300
	scratch_load_b32 v0, off, s33 offset:1328
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v2
	ds_store_b32 v0, v1
	scratch_load_b32 v1, off, s33 offset:1332
	scratch_load_b32 v2, off, s33 offset:1304
	scratch_load_b32 v0, off, s33 offset:1328
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v2
	ds_store_b32 v0, v1
	s_branch .LBB23_33
.LBB23_32:                              ; %Flow11
                                        ;   in Loop: Header=BB23_30 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 15
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 12
	v_readlane_b32 s1, v36, 14
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 11
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 16
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_30
	s_branch .LBB23_34
.LBB23_33:                              ;   in Loop: Header=BB23_30 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 13
	scratch_load_b32 v0, off, s33 offset:1324
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1324
	scratch_load_b32 v0, off, s33 offset:1328
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1328
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_32
.LBB23_34:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 16
	s_or_b32 exec_lo, exec_lo, s0
; %bb.35:                               ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1340
	scratch_load_b32 v0, off, s33 offset:116
	s_mov_b32 s0, 19
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1344
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 17
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_36:                              ;   Parent Loop BB23_13 Depth=1
                                        ;     Parent Loop BB23_22 Depth=2
                                        ; =>    This Loop Header: Depth=3
                                        ;         Child Loop BB23_39 Depth 4
                                        ;           Child Loop BB23_42 Depth 5
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(1)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 18
	v_readlane_b32 s1, v36, 17
	v_writelane_b32 v36, s1, 19
	v_writelane_b32 v36, s0, 20
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	v_writelane_b32 v36, s0, 21
	scratch_load_b32 v0, off, s33 offset:1340
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1616 ; 8-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z14get_local_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z14get_local_sizej@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v36, s2, 22
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s3, v36, 21
	v_readlane_b32 s1, v36, 22
	v_readlane_b32 s0, v36, 20
	v_mov_b32_e32 v12, v0
	v_mov_b32_e32 v14, v1
	scratch_load_b64 v[0:1], off, s33 offset:1616 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v3, v12
	v_mov_b32_e32 v4, v14
	v_cvt_f32_u32_e64 v2, v12
	v_cvt_f32_u32_e64 v5, v14
	s_mov_b32 s2, 0x4f800000
	v_fmac_f32_e64 v2, v5, s2
	v_rcp_f32_e64 v2, v2
	s_mov_b32 s2, 0x5f7ffffc
	s_waitcnt_depctr 0xfff
	v_mul_f32_e64 v5, v2, s2
	s_mov_b32 s2, 0x2f800000
	v_mul_f32_e64 v2, v5, s2
	v_trunc_f32_e64 v2, v2
	s_mov_b32 s2, 0xcf800000
	v_fmac_f32_e64 v5, v2, s2
	v_cvt_u32_f32_e64 v7, v5
	s_mov_b64 s[6:7], 0
	s_mov_b32 s4, s6
	v_mov_b32_e32 v6, v3
	s_mov_b32 s2, s7
	v_mov_b32_e32 v5, v4
	v_sub_co_u32 v9, s4, s4, v6
	v_sub_co_ci_u32_e64 v5, s2, s2, v5, s4
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v5
	s_mov_b32 s2, 32
	v_writelane_b32 v36, s2, 23
	v_lshrrev_b64 v[5:6], s2, v[9:10]
	v_mov_b32_e32 v8, v5
	v_mul_lo_u32 v15, v8, v7
	v_cvt_u32_f32_e64 v2, v2
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v2
	v_lshrrev_b64 v[5:6], s2, v[5:6]
	v_mov_b32_e32 v6, v5
	v_mov_b32_e32 v11, v9
	v_mul_lo_u32 v13, v11, v6
	v_mad_u64_u32 v[9:10], s4, v11, v7, 0
	v_mov_b32_e32 v5, v10
	v_add3_u32 v17, v5, v13, v15
	v_mad_u64_u32 v[15:16], s4, v7, v17, 0
	v_mov_b32_e32 v18, v15
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v5, s3
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v5
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v15, v16
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v13, s4
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v13
	v_lshlrev_b64 v[15:16], s2, v[15:16]
	v_mov_b32_e32 v13, v16
	v_or_b32_e64 v5, v5, v13
	v_mov_b32_e32 v13, v18
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	v_or_b32_e64 v18, v13, v15
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v5
	v_mov_b32_e32 v10, v9
	v_mul_hi_u32 v20, v7, v10
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v5, s3
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21 killed $exec
	v_mov_b32_e32 v21, v5
	v_mov_b32_e32 v13, v20
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v5, v21
	v_mov_b32_e32 v9, v19
	v_add_co_u32 v15, s4, v13, v15
	v_add_co_ci_u32_e64 v5, s4, v5, v9, s4
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v5
	v_mov_b32_e32 v5, v15
	v_mov_b32_e32 v9, v16
	v_mad_u64_u32 v[15:16], s4, v6, v10, 0
	v_mov_b32_e32 v18, v15
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v10, s3
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v10
	v_mov_b32_e32 v10, v19
	v_mov_b32_e32 v15, v16
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v13, s4
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v13
	v_lshlrev_b64 v[15:16], s2, v[15:16]
	v_mov_b32_e32 v13, v16
	v_or_b32_e64 v10, v10, v13
	v_mov_b32_e32 v13, v18
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	v_or_b32_e64 v15, v13, v15
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v10
	v_mov_b32_e32 v13, v15
	v_mov_b32_e32 v10, v16
	v_mad_u64_u32 v[15:16], s4, v6, v17, 0
	v_mov_b32_e32 v6, v16
	v_add_co_u32 v5, vcc_lo, v5, v13
	v_add_co_ci_u32_e32 v9, vcc_lo, v9, v10, vcc_lo
	v_mov_b32_e32 v10, s1
	v_add_co_ci_u32_e32 v17, vcc_lo, v6, v10, vcc_lo
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v6, s4
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v6
	v_lshlrev_b64 v[17:18], s2, v[17:18]
	v_mov_b32_e32 v10, v18
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v6, s3
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v6
	v_mov_b32_e32 v6, v16
	v_or_b32_e64 v6, v6, v10
	v_mov_b32_e32 v13, v17
	v_mov_b32_e32 v10, v15
	v_or_b32_e64 v15, v10, v13
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v6
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v9
	v_lshrrev_b64 v[17:18], s2, v[5:6]
	v_mov_b32_e32 v5, v17
	v_mov_b32_e32 v10, v15
	v_mov_b32_e32 v6, v18
	v_mov_b32_e32 v9, v16
	v_add_co_u32 v5, s4, v5, v10
	v_add_co_ci_u32_e64 v9, s4, v6, v9, s4
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v9, v5
	v_add_co_u32 v7, s4, v7, v9
	v_lshrrev_b64 v[5:6], s2, v[5:6]
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	v_add_co_ci_u32_e64 v2, s4, v2, v5, s4
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v2
	v_lshrrev_b64 v[5:6], s2, v[5:6]
	v_mov_b32_e32 v6, v5
	v_mad_u64_u32 v[15:16], s4, v11, v7, 0
	v_mov_b32_e32 v5, v15
	v_mad_u64_u32 v[17:18], s4, v6, v5, 0
	v_mov_b32_e32 v19, v17
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v9, s3
                                        ; kill: def $vgpr19 killed $vgpr19 def $vgpr19_vgpr20 killed $exec
	v_mov_b32_e32 v20, v9
	v_mov_b32_e32 v9, v20
	v_mov_b32_e32 v17, v18
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v10, s4
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v10
	v_lshlrev_b64 v[17:18], s2, v[17:18]
	v_mov_b32_e32 v10, v18
	v_or_b32_e64 v9, v9, v10
	v_mov_b32_e32 v10, v19
	v_mov_b32_e32 v13, v17
	v_or_b32_e64 v17, v10, v13
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v9
	v_mov_b32_e32 v10, v17
	v_mov_b32_e32 v9, v18
	v_mul_lo_u32 v11, v11, v6
	v_mul_lo_u32 v13, v8, v7
	v_mov_b32_e32 v8, v16
	v_add3_u32 v11, v8, v11, v13
	v_mad_u64_u32 v[15:16], s4, v7, v11, 0
	v_mov_b32_e32 v17, v15
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v8, s3
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v8
	v_mov_b32_e32 v8, v18
	v_mov_b32_e32 v15, v16
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v13, s4
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v13
	v_lshlrev_b64 v[15:16], s2, v[15:16]
	v_mov_b32_e32 v13, v16
	v_or_b32_e64 v8, v8, v13
	v_mov_b32_e32 v13, v17
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	v_or_b32_e64 v16, v13, v15
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17 killed $exec
	v_mov_b32_e32 v17, v8
	v_mul_hi_u32 v18, v7, v5
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v5, s3
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v19, v5
	v_mov_b32_e32 v13, v18
	v_mov_b32_e32 v15, v16
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v8, v17
	v_add_co_u32 v15, s4, v13, v15
	v_add_co_ci_u32_e64 v5, s4, v5, v8, s4
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v5
	v_mov_b32_e32 v5, v15
	v_mov_b32_e32 v8, v16
	v_mad_u64_u32 v[15:16], s4, v6, v11, 0
	v_mov_b32_e32 v6, v16
	v_add_co_u32 v5, vcc_lo, v5, v10
	v_add_co_ci_u32_e32 v8, vcc_lo, v8, v9, vcc_lo
	v_mov_b32_e32 v9, s1
	v_add_co_ci_u32_e32 v9, vcc_lo, v6, v9, vcc_lo
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr5
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v6, s4
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v6
	v_lshlrev_b64 v[9:10], s2, v[9:10]
	v_mov_b32_e32 v11, v10
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v6, s3
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v6
	v_mov_b32_e32 v6, v16
	v_or_b32_e64 v6, v6, v11
	v_mov_b32_e32 v10, v9
	v_mov_b32_e32 v9, v15
	v_or_b32_e64 v10, v9, v10
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v6
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v8
	v_lshrrev_b64 v[15:16], s2, v[5:6]
	v_mov_b32_e32 v5, v15
	v_mov_b32_e32 v9, v10
	v_mov_b32_e32 v6, v16
	v_mov_b32_e32 v8, v11
	v_add_co_u32 v5, s3, v5, v9
	v_add_co_ci_u32_e64 v8, s3, v6, v8, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v8
	v_mov_b32_e32 v8, v5
	v_add_co_u32 v7, s3, v7, v8
	v_lshrrev_b64 v[5:6], s2, v[5:6]
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	v_add_co_ci_u32_e64 v2, s3, v2, v5, s3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v5, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v2
	s_mov_b32 s3, 53
	v_lshrrev_b64 v[10:11], s3, v[5:6]
	v_mov_b32_e32 v2, v10
	v_mov_b32_e32 v7, v3
	v_mad_u64_u32 v[5:6], s3, v7, v2, 0
	v_mov_b32_e32 v8, v6
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v7, s3
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v7
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v3
	v_mad_u64_u32 v[3:4], s2, v7, v2, v[8:9]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
	v_sub_nc_u32_e64 v4, s1, v3
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	s_mov_b32 s2, 0x800
	v_sub_co_u32 v5, s3, s2, v5
	v_sub_co_ci_u32_e64 v4, s2, v4, v14, s3
	v_sub_co_u32 v6, s2, v5, v12
	v_sub_co_ci_u32_e64 v7, s2, v4, s1, s2
	v_cmp_ge_u32_e64 s2, v7, v14
	s_mov_b32 s5, -1
	v_mov_b32_e32 v4, s5
	v_cndmask_b32_e64 v4, s1, v4, s2
	v_cmp_eq_u32_e64 s2, v7, v14
	v_cmp_ge_u32_e64 s4, v6, v12
	v_mov_b32_e32 v6, s5
	v_cndmask_b32_e64 v6, s1, v6, s4
	v_cndmask_b32_e64 v4, v4, v6, s2
	v_cmp_ne_u32_e64 s2, v4, s1
	s_mov_b64 s[8:9], 2
	v_mov_b32_e32 v6, v10
	s_mov_b32 s6, s8
	v_mov_b32_e32 v4, v11
	s_mov_b32 s4, s9
	v_add_co_u32 v8, s6, v6, s6
	v_add_co_ci_u32_e64 v4, s4, v4, s4, s6
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v4
	v_mov_b32_e32 v13, v9
	s_mov_b64 s[8:9], 1
	v_mov_b32_e32 v6, v10
	s_mov_b32 s6, s8
	v_mov_b32_e32 v4, v11
	s_mov_b32 s4, s9
	v_add_co_u32 v6, s6, v6, s6
	v_add_co_ci_u32_e64 v4, s4, v4, s4, s6
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v4
	v_mov_b32_e32 v4, v7
	v_cndmask_b32_e64 v4, v4, v13, s2
	v_sub_co_ci_u32_e64 v13, s3, s1, v3, s3
	v_cmp_ge_u32_e64 s3, v13, v14
	v_mov_b32_e32 v3, s5
	v_cndmask_b32_e64 v3, s1, v3, s3
	v_cmp_eq_u32_e64 s3, v13, v14
	v_cmp_ge_u32_e64 s4, v5, v12
	v_mov_b32_e32 v5, s5
	v_cndmask_b32_e64 v5, s1, v5, s4
	v_cndmask_b32_e64 v3, v3, v5, s3
	v_cmp_ne_u32_e64 s1, v3, s1
	v_mov_b32_e32 v3, v11
	v_cndmask_b32_e64 v4, v3, v4, s1
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v3, v6
	v_cndmask_b32_e64 v3, v3, v5, s2
	v_cndmask_b32_e64 v2, v2, v3, s1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	s_waitcnt vmcnt(0)
	v_cmp_lt_u64_e64 s1, v[0:1], v[2:3]
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 24
	v_writelane_b32 v36, s0, 25
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_38
; %bb.37:                               ;   in Loop: Header=BB23_36 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:80
	s_mov_b32 s0, 0
	scratch_load_b32 v3, off, s33 offset:1344
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1356
	scratch_load_b32 v0, off, s33 offset:1340
	s_add_i32 s1, s33, 0x480
	v_mov_b32_e32 v1, s1
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1360
	scratch_load_b32 v0, off, s33 offset:1312
	scratch_load_b32 v1, off, s33 offset:1356
	v_mov_b32_e32 v2, 0
	scratch_store_b32 off, v2, s33 offset:1624 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, v2, v1
	v_cvt_f32_u32_e32 v2, v1
	v_rcp_iflag_f32_e32 v2, v2
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	v_mul_lo_u32 v3, v3, v2
	v_mul_hi_u32 v3, v2, v3
	v_add_nc_u32_e64 v2, v2, v3
	v_mul_hi_u32 v2, v0, v2
	v_mul_lo_u32 v2, v2, v1
	v_sub_nc_u32_e64 v0, v0, v2
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v2, v0, v1
	v_cndmask_b32_e64 v0, v0, v2, s0
	v_cmp_ge_u32_e64 s0, v0, v1
	v_sub_nc_u32_e64 v1, v0, v1
	v_cndmask_b32_e64 v0, v0, v1, s0
	scratch_store_b32 off, v0, s33 offset:1364
	scratch_load_b32 v0, off, s33 offset:1356
	scratch_load_b32 v1, off, s33 offset:1364
	scratch_load_b32 v2, off, s33 offset:1360
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, calculateOffset@rel32@lo+4
	s_addc_u32 s1, s1, calculateOffset@rel32@hi+12
	v_writelane_b32 v36, s0, 27
	v_writelane_b32 v36, s1, 28
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s0, v36, 27
	v_readlane_b32 s1, v36, 28
	scratch_store_b32 off, v0, s33 offset:1348
	scratch_load_b32 v0, off, s33 offset:1356
	scratch_load_b32 v1, off, s33 offset:1364
	scratch_load_b32 v2, off, s33 offset:1360
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, v0, v2
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1624 ; 4-byte Folded Reload
	scratch_store_b32 off, v1, s33 offset:1352
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1368
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 29
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_39
.LBB23_38:                              ; %Flow10
                                        ;   in Loop: Header=BB23_36 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 26
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 19
	v_readlane_b32 s1, v36, 25
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 17
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 30
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_36
	s_branch .LBB23_59
.LBB23_39:                              ;   Parent Loop BB23_13 Depth=1
                                        ;     Parent Loop BB23_22 Depth=2
                                        ;       Parent Loop BB23_36 Depth=3
                                        ; =>      This Loop Header: Depth=4
                                        ;           Child Loop BB23_42 Depth 5
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(1)
	v_readlane_b32 s0, v35, 31
	v_readlane_b32 s1, v35, 29
	s_waitcnt vmcnt(0)
	v_writelane_b32 v36, s1, 0
	scratch_load_b32 v0, off, s33 offset:1368
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 1
	v_writelane_b32 v36, s0, 2
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 3
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_41
; %bb.40:                               ;   in Loop: Header=BB23_39 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:1628 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:1628 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	scratch_load_b32 v0, off, s33 offset:1368
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v0, v1
	v_not_b32_e32 v0, v0
	scratch_store_b8 off, v0, s33 offset:1372
	scratch_load_b32 v0, off, s33 offset:1348
	scratch_load_b32 v1, off, s33 offset:1352
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z3maxjj@rel32@lo+4
	s_addc_u32 s1, s1, _Z3maxjj@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_store_b32 off, v0, s33 offset:1376
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 4
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_42
.LBB23_41:                              ; %Flow9
                                        ;   in Loop: Header=BB23_39 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 3
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 0
	v_readlane_b32 s1, v36, 2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	s_waitcnt vmcnt(0)
	v_writelane_b32 v35, s1, 31
	s_mov_b32 s1, s0
	v_writelane_b32 v35, s1, 29
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v35, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 5
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_39
	s_branch .LBB23_52
.LBB23_42:                              ;   Parent Loop BB23_13 Depth=1
                                        ;     Parent Loop BB23_22 Depth=2
                                        ;       Parent Loop BB23_36 Depth=3
                                        ;         Parent Loop BB23_39 Depth=4
                                        ; =>        This Inner Loop Header: Depth=5
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 6
	v_readlane_b32 s1, v36, 4
	v_writelane_b32 v36, s1, 7
	scratch_load_b32 v0, off, s33 offset:1376
	s_mov_b32 s1, 0x2000
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 8
	v_writelane_b32 v36, s0, 9
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 10
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_44
; %bb.43:                               ;   in Loop: Header=BB23_42 Depth=5
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 8
	scratch_load_u8 v2, off, s33 offset:1372
	scratch_load_b32 v0, off, s33 offset:72
	scratch_load_b32 v1, off, s33 offset:1348
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	ds_load_u8 v1, v0
	s_waitcnt lgkmcnt(0)
	v_and_b32_e64 v1, v1, v2
	ds_store_b8 v0, v1
	scratch_load_u8 v2, off, s33 offset:1372
	scratch_load_b32 v0, off, s33 offset:76
	scratch_load_b32 v1, off, s33 offset:1352
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	ds_load_u8 v1, v0
	s_waitcnt lgkmcnt(0)
	v_and_b32_e64 v1, v1, v2
	ds_store_b8 v0, v1
	scratch_load_b32 v1, off, s33 offset:1356
	scratch_load_b32 v0, off, s33 offset:1348
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1348
	scratch_load_b32 v1, off, s33 offset:1356
	scratch_load_b32 v0, off, s33 offset:1352
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1352
	scratch_load_b32 v1, off, s33 offset:1356
	scratch_load_b32 v0, off, s33 offset:1376
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1376
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 9
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_44:                              ; %Flow8
                                        ;   in Loop: Header=BB23_42 Depth=5
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 10
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 7
	v_readlane_b32 s1, v36, 9
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 6
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 4
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 11
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_42
; %bb.45:                               ;   in Loop: Header=BB23_39 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 11
	s_or_b32 exec_lo, exec_lo, s0
; %bb.46:                               ;   in Loop: Header=BB23_39 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1348
	s_mov_b32 s0, 0x2000
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_48
; %bb.47:                               ;   in Loop: Header=BB23_39 Depth=4
	scratch_load_u8 v2, off, s33 offset:1372
	scratch_load_b32 v0, off, s33 offset:72
	scratch_load_b32 v1, off, s33 offset:1348
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	ds_load_u8 v1, v0
	s_waitcnt lgkmcnt(0)
	v_and_b32_e64 v1, v1, v2
	ds_store_b8 v0, v1
	scratch_load_b32 v1, off, s33 offset:1356
	scratch_load_b32 v0, off, s33 offset:1348
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1348
.LBB23_48:                              ;   in Loop: Header=BB23_39 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 12
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1352
	s_mov_b32 s0, 0x2000
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 13
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_50
; %bb.49:                               ;   in Loop: Header=BB23_39 Depth=4
	scratch_load_u8 v2, off, s33 offset:1372
	scratch_load_b32 v0, off, s33 offset:76
	scratch_load_b32 v1, off, s33 offset:1352
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	ds_load_u8 v1, v0
	s_waitcnt lgkmcnt(0)
	v_and_b32_e64 v1, v1, v2
	ds_store_b8 v0, v1
	scratch_load_b32 v1, off, s33 offset:1356
	scratch_load_b32 v0, off, s33 offset:1352
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1352
.LBB23_50:                              ;   in Loop: Header=BB23_39 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 13
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1348
	s_mov_b32 s0, 0xffffe000
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1348
	scratch_load_b32 v0, off, s33 offset:1352
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1352
; %bb.51:                               ;   in Loop: Header=BB23_39 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 1
	scratch_load_b32 v0, off, s33 offset:1368
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1368
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 2
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_41
.LBB23_52:                              ;   in Loop: Header=BB23_36 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 5
	s_or_b32 exec_lo, exec_lo, s0
; %bb.53:                               ;   in Loop: Header=BB23_36 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1360
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	s_mov_b32 s0, 0
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1632 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v36, s1, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_54
	s_branch .LBB23_56
.LBB23_54:                              ; %Flow7
                                        ;   in Loop: Header=BB23_36 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 14
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:1632 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1636 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v36, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB23_57
; %bb.55:                               ;   in Loop: Header=BB23_36 Depth=3
	scratch_load_b32 v0, off, s33 offset:1360
	scratch_load_b32 v1, off, s33 offset:1356
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 1
	v_lshrrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1636 ; 4-byte Folded Spill
	s_branch .LBB23_57
.LBB23_56:                              ;   in Loop: Header=BB23_36 Depth=3
	scratch_load_b32 v0, off, s33 offset:1360
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1632 ; 4-byte Folded Spill
	s_branch .LBB23_54
.LBB23_57:                              ;   in Loop: Header=BB23_36 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 15
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1636 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1340
	s_add_i32 s0, s33, 0x480
	v_mov_b32_e32 v2, s0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v1, v1, s0, v2
	scratch_store_b32 v1, v0, off
; %bb.58:                               ;   in Loop: Header=BB23_36 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 24
	scratch_load_b32 v0, off, s33 offset:1340
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1340
	scratch_load_b32 v0, off, s33 offset:1344
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1344
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 25
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_38
.LBB23_59:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 30
	s_or_b32 exec_lo, exec_lo, s0
; %bb.60:                               ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 8
	scratch_store_b32 off, v0, s33 offset:1380
	scratch_load_b32 v0, off, s33 offset:116
	s_mov_b32 s0, 0x813
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1384
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 16
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_61:                              ;   Parent Loop BB23_13 Depth=1
                                        ;     Parent Loop BB23_22 Depth=2
                                        ; =>    This Loop Header: Depth=3
                                        ;         Child Loop BB23_64 Depth 4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 17
	v_readlane_b32 s1, v36, 16
	v_writelane_b32 v36, s1, 18
	scratch_load_b32 v0, off, s33 offset:1380
	s_mov_b32 s1, 31
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 19
	v_writelane_b32 v36, s0, 20
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 21
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_63
; %bb.62:                               ;   in Loop: Header=BB23_61 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:80
	s_mov_b32 s0, 0
	scratch_load_b32 v3, off, s33 offset:1384
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1388
	scratch_load_b32 v0, off, s33 offset:1312
	scratch_load_b32 v1, off, s33 offset:1388
	v_mov_b32_e32 v2, 0
	scratch_store_b32 off, v2, s33 offset:1640 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v3, v2, v1
	v_cvt_f32_u32_e32 v2, v1
	v_rcp_iflag_f32_e32 v2, v2
	s_waitcnt_depctr 0xfff
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	v_mul_lo_u32 v3, v3, v2
	v_mul_hi_u32 v3, v2, v3
	v_add_nc_u32_e64 v2, v2, v3
	v_mul_hi_u32 v2, v0, v2
	v_mul_lo_u32 v2, v2, v1
	v_sub_nc_u32_e64 v0, v0, v2
	v_cmp_ge_u32_e64 s1, v0, v1
	v_sub_nc_u32_e64 v2, v0, v1
	v_cndmask_b32_e64 v0, v0, v2, s1
	v_cmp_ge_u32_e64 s1, v0, v1
	v_sub_nc_u32_e64 v1, v0, v1
	v_cndmask_b32_e64 v0, v0, v1, s1
	scratch_store_b32 off, v0, s33 offset:1392
	scratch_load_b32 v0, off, s33 offset:1380
	s_add_i32 s1, s33, 0x480
	v_mov_b32_e32 v1, s1
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1396
	scratch_load_b32 v0, off, s33 offset:1388
	scratch_load_b32 v1, off, s33 offset:1392
	scratch_load_b32 v2, off, s33 offset:1396
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, calculateOffset@rel32@lo+4
	s_addc_u32 s1, s1, calculateOffset@rel32@hi+12
	v_writelane_b32 v36, s0, 22
	v_writelane_b32 v36, s1, 23
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s0, v36, 22
	v_readlane_b32 s1, v36, 23
	scratch_store_b32 off, v0, s33 offset:1400
	scratch_load_b32 v0, off, s33 offset:1388
	scratch_load_b32 v1, off, s33 offset:1392
	scratch_load_b32 v2, off, s33 offset:1396
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, v0, v2
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:1640 ; 4-byte Folded Reload
	scratch_store_b32 off, v1, s33 offset:1404
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1408
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 24
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_64
.LBB23_63:                              ; %Flow6
                                        ;   in Loop: Header=BB23_61 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 21
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 18
	v_readlane_b32 s1, v36, 20
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 17
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 25
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_61
	s_branch .LBB23_79
.LBB23_64:                              ;   Parent Loop BB23_13 Depth=1
                                        ;     Parent Loop BB23_22 Depth=2
                                        ;       Parent Loop BB23_61 Depth=3
                                        ; =>      This Inner Loop Header: Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 26
	v_readlane_b32 s1, v36, 24
	v_writelane_b32 v36, s1, 27
	scratch_load_b32 v0, off, s33 offset:1408
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 28
	v_writelane_b32 v36, s0, 29
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 30
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_67
; %bb.65:                               ;   in Loop: Header=BB23_64 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1408
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v0, s0
	v_not_b32_e32 v0, v0
	scratch_store_b8 off, v0, s33 offset:1412
	scratch_load_b32 v0, off, s33 offset:1400
	s_mov_b32 s0, 0x2000
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 31
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_68
; %bb.66:                               ;   in Loop: Header=BB23_64 Depth=4
	scratch_load_u8 v2, off, s33 offset:1412
	scratch_load_b32 v0, off, s33 offset:72
	scratch_load_b32 v1, off, s33 offset:1400
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	ds_load_u8 v1, v0
	s_waitcnt lgkmcnt(0)
	v_and_b32_e64 v1, v1, v2
	ds_store_b8 v0, v1
	scratch_load_b32 v1, off, s33 offset:1388
	scratch_load_b32 v0, off, s33 offset:1400
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1400
	s_branch .LBB23_68
.LBB23_67:                              ; %Flow5
                                        ;   in Loop: Header=BB23_64 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v35, 30
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v35, 27
	v_readlane_b32 s1, v35, 29
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v35, s1, 26
	s_mov_b32 s1, s0
	v_writelane_b32 v35, s1, 24
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v35, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, s0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v36, s1, 0
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_64
	s_branch .LBB23_72
.LBB23_68:                              ;   in Loop: Header=BB23_64 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v35, 31
	s_or_b32 exec_lo, exec_lo, s0
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1404
	s_mov_b32 s0, 0x2000
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 1
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_70
; %bb.69:                               ;   in Loop: Header=BB23_64 Depth=4
	scratch_load_u8 v2, off, s33 offset:1412
	scratch_load_b32 v0, off, s33 offset:76
	scratch_load_b32 v1, off, s33 offset:1404
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	ds_load_u8 v1, v0
	s_waitcnt lgkmcnt(0)
	v_and_b32_e64 v1, v1, v2
	ds_store_b8 v0, v1
	scratch_load_b32 v1, off, s33 offset:1388
	scratch_load_b32 v0, off, s33 offset:1404
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1404
.LBB23_70:                              ;   in Loop: Header=BB23_64 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 1
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1400
	s_mov_b32 s0, 0xffffe000
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1400
	scratch_load_b32 v0, off, s33 offset:1404
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1404
; %bb.71:                               ;   in Loop: Header=BB23_64 Depth=4
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 28
	scratch_load_b32 v0, off, s33 offset:1408
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1408
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 29
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_67
.LBB23_72:                              ;   in Loop: Header=BB23_61 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 0
	s_or_b32 exec_lo, exec_lo, s0
; %bb.73:                               ;   in Loop: Header=BB23_61 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1396
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	s_mov_b32 s0, 0
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1644 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v36, s1, 2
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_74
	s_branch .LBB23_76
.LBB23_74:                              ; %Flow4
                                        ;   in Loop: Header=BB23_61 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 2
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:1644 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1648 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v36, s0, 3
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB23_77
; %bb.75:                               ;   in Loop: Header=BB23_61 Depth=3
	scratch_load_b32 v0, off, s33 offset:1396
	scratch_load_b32 v1, off, s33 offset:1388
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 1
	v_lshrrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1648 ; 4-byte Folded Spill
	s_branch .LBB23_77
.LBB23_76:                              ;   in Loop: Header=BB23_61 Depth=3
	scratch_load_b32 v0, off, s33 offset:1396
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1644 ; 4-byte Folded Spill
	s_branch .LBB23_74
.LBB23_77:                              ;   in Loop: Header=BB23_61 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 3
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1648 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1380
	s_add_i32 s0, s33, 0x480
	v_mov_b32_e32 v2, s0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v1, v1, s0, v2
	scratch_store_b32 v1, v0, off
; %bb.78:                               ;   in Loop: Header=BB23_61 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 19
	scratch_load_b32 v0, off, s33 offset:1380
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1380
	scratch_load_b32 v0, off, s33 offset:1384
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1384
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 20
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1556 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_63
.LBB23_79:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1556 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.80:                               ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:1652 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:1312
	s_mov_b32 s2, 3
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s2, v0
	s_mov_b32 s1, 0x1ffffffc
	v_and_b32_e64 v4, v0, s1
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1416
	scratch_load_b64 v[1:2], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:1312
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s2, v0
	v_and_b32_e64 v4, v0, s1
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1424
	scratch_load_b64 v[1:2], off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:1312
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s2, v0
	v_and_b32_e64 v4, v0, s1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1432
	scratch_load_b32 v0, off, s33 offset:116
	scratch_load_b32 v2, off, s33 offset:1300
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6vload8mPU3AS3Kj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6vload8mPU3AS3Kj@rel32@hi+12
	v_writelane_b32 v36, s0, 4
	v_writelane_b32 v36, s1, 5
	v_mov_b32_e32 v1, 0
	scratch_store_b32 off, v1, s33 offset:1684 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s0, v36, 4
	v_readlane_b32 s1, v36, 5
	scratch_store_b32 off, v0, s33 offset:1680 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:1684 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:1672 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:1680 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:1676 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v8, v4
	v_mov_b32_e32 v4, v6
	scratch_load_b32 v6, off, s33 offset:1676 ; 4-byte Folded Reload
	v_mov_b32_e32 v3, v7
	scratch_load_b32 v7, off, s33 offset:1672 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v5
	v_mov_b32_e32 v10, v4
	v_mov_b32_e32 v11, v3
	scratch_store_b128 off, v[8:11], s33 offset:1456
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v4, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:1440
	scratch_load_b32 v0, off, s33 offset:116
	scratch_load_b32 v2, off, s33 offset:1304
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	scratch_store_b32 off, v1, s33 offset:1660 ; 4-byte Folded Spill
	scratch_store_b32 off, v2, s33 offset:1664 ; 4-byte Folded Spill
	scratch_store_b32 off, v3, s33 offset:1668 ; 4-byte Folded Spill
	v_mov_b32_e32 v1, v4
	scratch_load_b32 v4, off, s33 offset:1668 ; 4-byte Folded Reload
	scratch_store_b32 off, v1, s33 offset:1656 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v5
	scratch_load_b32 v5, off, s33 offset:1664 ; 4-byte Folded Reload
	v_mov_b32_e32 v2, v6
	scratch_load_b32 v6, off, s33 offset:1660 ; 4-byte Folded Reload
	v_mov_b32_e32 v1, v7
	scratch_load_b32 v7, off, s33 offset:1656 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8_vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v8, v3
	v_mov_b32_e32 v9, v2
	v_mov_b32_e32 v10, v1
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[7:10], s33 offset:1488
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:1472
	scratch_load_b32 v0, off, s33 offset:1320
	scratch_load_b64 v[28:29], off, s33 offset:1416
	scratch_load_b64 v[26:27], off, s33 offset:1424
	scratch_load_b64 v[24:25], off, s33 offset:1432
	scratch_load_b128 v[1:4], off, s33 offset:1440
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_mov_b32_e32 v8, v2
	v_mov_b32_e32 v9, v3
	v_mov_b32_e32 v10, v4
	scratch_load_b128 v[1:4], off, s33 offset:1456
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	v_mov_b32_e32 v14, v4
	scratch_load_b128 v[1:4], off, s33 offset:1472
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	v_mov_b32_e32 v18, v4
	scratch_load_b128 v[1:4], off, s33 offset:1488
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v19, v1
	v_mov_b32_e32 v20, v2
	v_mov_b32_e32 v21, v3
	v_mov_b32_e32 v22, v4
	scratch_load_b32 v23, off, s33 offset:116
	s_mov_b32 s0, 32
	v_lshrrev_b64 v[1:2], s0, v[28:29]
	v_mov_b32_e32 v2, v1
	v_lshrrev_b64 v[3:4], s0, v[26:27]
	v_mov_b32_e32 v4, v3
	v_lshrrev_b64 v[5:6], s0, v[24:25]
	v_mov_b32_e32 v6, v5
	v_mov_b32_e32 v1, v28
	v_mov_b32_e32 v3, v26
	v_mov_b32_e32 v5, v24
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, flushLayer@rel32@lo+4
	s_addc_u32 s1, s1, flushLayer@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:1652 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:1308
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v1, v1, v2
	v_cmp_ge_u32_e64 s0, v0, v1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v36, s1, 6
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_86
	s_branch .LBB23_82
.LBB23_81:                              ;   in Loop: Header=BB23_22 Depth=2
	s_branch .LBB23_98
.LBB23_82:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 9
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1688 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v36, s1, 7
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_83
	s_branch .LBB23_85
.LBB23_83:                              ; %Flow2
                                        ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 7
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:1688 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1692 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v36, s0, 8
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB23_87
; %bb.84:                               ;   in Loop: Header=BB23_22 Depth=2
	s_mov_b32 s0, 1
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:1692 ; 4-byte Folded Spill
	s_branch .LBB23_87
.LBB23_85:                              ;   in Loop: Header=BB23_22 Depth=2
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, -9
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1688 ; 4-byte Folded Spill
	s_branch .LBB23_83
.LBB23_86:                              ; %Flow3
                                        ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 6
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v36, s0, 9
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB23_98
	s_branch .LBB23_81
.LBB23_87:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 8
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1692 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1504
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 8
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v36, s1, 10
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_88
	s_branch .LBB23_90
.LBB23_88:                              ; %Flow1
                                        ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 10
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v36, 11
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1696 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v36, s0, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB23_91
; %bb.89:                               ;   in Loop: Header=BB23_22 Depth=2
	scratch_load_b32 v0, off, s33 offset:1320
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1696 ; 4-byte Folded Spill
	s_branch .LBB23_91
.LBB23_90:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_mov_b32 s0, 9
	s_waitcnt vmcnt(0)
	v_writelane_b32 v36, s0, 11
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_88
.LBB23_91:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 12
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1696 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1508
	scratch_load_b32 v0, off, s33 offset:1504
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1512
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 13
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB23_92:                              ;   Parent Loop BB23_13 Depth=1
                                        ;     Parent Loop BB23_22 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 14
	v_readlane_b32 s1, v36, 13
	v_writelane_b32 v36, s1, 15
	scratch_load_b32 v0, off, s33 offset:1512
	scratch_load_b32 v1, off, s33 offset:1508
	s_waitcnt vmcnt(0)
	v_cmp_le_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 16
	v_writelane_b32 v36, s0, 17
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 18
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_94
; %bb.93:                               ;   in Loop: Header=BB23_92 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1544 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v31, off, s33 offset:1564 ; 4-byte Folded Reload
	scratch_load_b64 v[6:7], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:1512
	scratch_load_b32 v1, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s3, 2
	v_lshlrev_b64 v[4:5], s3, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s1, v1, v3
	v_add_co_ci_u32_e64 v0, s1, v0, v2, s1
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1312
	s_mov_b32 s2, 3
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s2, v0
	s_mov_b32 s1, 0x1ffffffc
	v_and_b32_e64 v4, v0, s1
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s16, v0, v3
	v_add_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1520
	scratch_load_b64 v[6:7], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:1512
	scratch_load_b32 v1, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_lshlrev_b64 v[4:5], s3, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s16, v1, v3
	v_add_co_ci_u32_e64 v0, s16, v0, v2, s16
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1312
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s2, v0
	v_and_b32_e64 v4, v0, s1
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s16, v0, v3
	v_add_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1528
	scratch_load_b64 v[6:7], off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:1512
	scratch_load_b32 v1, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_lshlrev_b64 v[4:5], s3, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s3, v1, v3
	v_add_co_ci_u32_e64 v0, s3, v0, v2, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:1312
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s2, v0
	v_and_b32_e64 v4, v0, s1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1536
	scratch_load_b32 v0, off, s33 offset:1320
	scratch_load_b32 v1, off, s33 offset:1512
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_load_b64 v[28:29], off, s33 offset:1520
	scratch_load_b64 v[26:27], off, s33 offset:1528
	scratch_load_b64 v[24:25], off, s33 offset:1536
	scratch_load_b128 v[1:4], off, s33 offset:1440
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
	v_mov_b32_e32 v8, v2
	v_mov_b32_e32 v9, v3
	v_mov_b32_e32 v10, v4
	scratch_load_b128 v[1:4], off, s33 offset:1456
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v3
	v_mov_b32_e32 v14, v4
	scratch_load_b128 v[1:4], off, s33 offset:1472
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v15, v1
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v3
	v_mov_b32_e32 v18, v4
	scratch_load_b128 v[1:4], off, s33 offset:1488
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v19, v1
	v_mov_b32_e32 v20, v2
	v_mov_b32_e32 v21, v3
	v_mov_b32_e32 v22, v4
	scratch_load_b32 v23, off, s33 offset:116
	s_mov_b32 s0, 32
	v_lshrrev_b64 v[1:2], s0, v[28:29]
	v_mov_b32_e32 v2, v1
	v_lshrrev_b64 v[3:4], s0, v[26:27]
	v_mov_b32_e32 v4, v3
	v_lshrrev_b64 v[5:6], s0, v[24:25]
	v_mov_b32_e32 v6, v5
	v_mov_b32_e32 v1, v28
	v_mov_b32_e32 v3, v26
	v_mov_b32_e32 v5, v24
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, flushLayer@rel32@lo+4
	s_addc_u32 s1, s1, flushLayer@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB23_95
.LBB23_94:                              ; %Flow
                                        ;   in Loop: Header=BB23_92 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 18
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 15
	v_readlane_b32 s1, v36, 17
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 14
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB23_92
	s_branch .LBB23_96
.LBB23_95:                              ;   in Loop: Header=BB23_92 Depth=3
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 16
	scratch_load_b32 v0, off, s33 offset:1512
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1512
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 17
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_94
.LBB23_96:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 19
	s_or_b32 exec_lo, exec_lo, s0
; %bb.97:                               ;   in Loop: Header=BB23_22 Depth=2
	s_branch .LBB23_86
.LBB23_98:                              ;   in Loop: Header=BB23_22 Depth=2
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v35, 9
	s_or_b32 exec_lo, exec_lo, s0
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1320
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v36, s0, 8
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1552 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_29
.LBB23_99:                              ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 20
	s_or_b32 exec_lo, exec_lo, s0
; %bb.100:                              ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 11
	scratch_load_b32 v0, off, s33 offset:1308
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1308
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1548 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB23_15
.LBB23_101:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1548 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 15
	s_or_b32 exec_lo, exec_lo, s0
; %bb.102:
	v_readlane_b32 s30, v34, 0
	v_readlane_b32 s31, v34, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v34, off, s33 offset:1700 ; 4-byte Folded Reload
	scratch_load_b32 v35, off, s33 offset:1704 ; 4-byte Folded Reload
	scratch_load_b32 v36, off, s33 offset:1708 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffff920
	s_mov_b32 s33, s22
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.LBB23_103:                             ; %loop.exit.guard
                                        ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 6
	s_or_b32 exec_lo, exec_lo, s0
; %bb.104:                              ; %loop.exit.guard
                                        ;   in Loop: Header=BB23_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:1552 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v35, 5
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:1560 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, -1
	s_xor_b32 s0, s0, s1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v36, s1, 20
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:1560 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB23_99
	s_branch .LBB23_26
.Lfunc_end23:
	.size	weave, .Lfunc_end23-weave
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 20364
; NumSgprs: 36
; NumVgprs: 37
; ScratchSize: 2140
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __ockl_get_group_id
	.type	__ockl_get_group_id,@function
__ockl_get_group_id:                    ; @__ockl_get_group_id
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v2, s33 offset:32 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 40
	scratch_store_b32 off, v0, s33 offset:4 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr2 : SGPR spill to VGPR lane
	v_writelane_b32 v2, s14, 0
	v_writelane_b32 v2, s13, 1
	v_writelane_b32 v2, s12, 2
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
; %bb.1:                                ; %NodeBlock3
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:8 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v2, s1, 3
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB24_4
; %bb.2:                                ; %NodeBlock
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v2, s1, 4
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB24_7
; %bb.3:                                ; %LeafBlock1
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v2, s0, 5
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB24_10
	s_branch .LBB24_9
.LBB24_4:                               ; %Flow8
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 3
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v2, s0, 6
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB24_13
; %bb.5:                                ; %LeafBlock
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:24 ; 4-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v2, s0, 7
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB24_12
; %bb.6:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 2
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:24 ; 4-byte Folded Spill
	s_branch .LBB24_12
.LBB24_7:                               ; %Flow5
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 4
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v2, s0, 8
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB24_11
; %bb.8:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 1
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	s_branch .LBB24_11
.LBB24_9:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 0
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
.LBB24_10:                              ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 5
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:16 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_branch .LBB24_7
.LBB24_11:                              ; %Flow6
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 8
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:28 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:8 ; 4-byte Folded Spill
	s_branch .LBB24_4
.LBB24_12:                              ; %Flow7
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 7
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:24 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
.LBB24_13:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 6
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:20 ; 4-byte Folded Reload
	v_mov_b32_e32 v1, 0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v2, off, s33 offset:32 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffd8
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end24:
	.size	__ockl_get_group_id, .Lfunc_end24-__ockl_get_group_id
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1012
; NumSgprs: 34
; NumVgprs: 3
; ScratchSize: 40
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z12get_group_idj
	.type	_Z12get_group_idj,@function
_Z12get_group_idj:                      ; @_Z12get_group_idj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_get_group_id@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_get_group_id@rel32@hi+12
	s_mov_b32 s33, s2
	s_setpc_b64 s[0:1]
.Lfunc_end25:
	.size	_Z12get_group_idj, .Lfunc_end25-_Z12get_group_idj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 40
; MemoryBound: 0
	.text
	.protected	sieveBenchmark          ; -- Begin function sieveBenchmark
	.globl	sieveBenchmark
	.p2align	8
	.type	sieveBenchmark,@function
sieveBenchmark:                         ; @sieveBenchmark
; %bb.0:
	s_mov_b32 s32, 0x80
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr37 : SGPR spill to VGPR lane
	v_writelane_b32 v37, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v37, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v37, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v37, s10, 3
	v_writelane_b32 v37, s11, 4
	v_writelane_b32 v37, s2, 5
	v_writelane_b32 v37, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v37, 5
	v_readlane_b32 s1, v37, 6
	v_writelane_b32 v37, s4, 7
	v_writelane_b32 v37, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:88 ; 4-byte Folded Spill
	s_load_b64 s[24:25], s[0:1], 0x0
	s_load_b64 s[22:23], s[0:1], 0x8
	s_load_b64 s[20:21], s[0:1], 0x10
	s_load_b64 s[18:19], s[0:1], 0x18
	s_load_b64 s[16:17], s[0:1], 0x20
	s_load_b64 s[8:9], s[0:1], 0x28
	s_load_b64 s[6:7], s[0:1], 0x30
	s_load_b32 s2, s[0:1], 0x38
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s24
	v_mov_b32_e32 v1, s25
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s22
	v_mov_b32_e32 v1, s23
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s20
	v_mov_b32_e32 v1, s21
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s18
	v_mov_b32_e32 v1, s19
	scratch_store_b64 off, v[0:1], s33 offset:32
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:40
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:48
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:56
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:64
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:108 ; 8-byte Folded Spill
	s_mov_b64 s[6:7], 64
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v37, s8, 9
	v_writelane_b32 v37, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_group_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_group_idj@rel32@hi+12
	v_writelane_b32 v37, s0, 11
	v_writelane_b32 v37, s1, 12
	v_mov_b32_e32 v18, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:88 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s0, v37, 11
	v_readlane_b32 s1, v37, 12
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:108 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s3, 48
	v_mad_u64_u32 v[5:6], s2, v0, s3, 0
	v_mov_b32_e32 v7, v6
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v0
	s_mov_b32 s2, 32
	v_writelane_b32 v37, s2, 13
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s3, v0, s3, v[7:8]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	s_mov_b32 s2, 0
	v_writelane_b32 v37, s2, 14
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	global_load_b128 v[3:6], v[0:1], off
	global_load_b128 v[7:10], v[0:1], off offset:16
	global_load_b128 v[32:35], v[0:1], off offset:32
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:100 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:88 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s0, v37, 11
	v_readlane_b32 s1, v37, 12
	v_readlane_b32 s2, v37, 14
	v_readlane_b32 s3, v37, 13
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v11, v0
	v_mov_b32_e32 v2, v1
	scratch_load_b64 v[0:1], off, s33 offset:100 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v2, v11
	s_mov_b32 s6, 0x1400000
	v_writelane_b32 v37, s6, 15
	v_mad_u64_u32 v[13:14], s7, v2, s6, 0
	v_mov_b32_e32 v15, v14
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v2, s7
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v2
	v_lshrrev_b64 v[11:12], s3, v[11:12]
	v_mov_b32_e32 v2, v11
	v_mad_u64_u32 v[11:12], s6, v2, s6, v[15:16]
                                        ; kill: def $vgpr11 killed $vgpr11 killed $vgpr11_vgpr12 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v2, s6
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_lshlrev_b64 v[11:12], s3, v[11:12]
	v_mov_b32_e32 v15, v12
                                        ; kill: def $vgpr13 killed $vgpr13 killed $vgpr13_vgpr14 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v2
	v_mov_b32_e32 v2, v14
	v_or_b32_e64 v2, v2, v15
	v_mov_b32_e32 v12, v11
	v_mov_b32_e32 v11, v13
	v_or_b32_e64 v11, v11, v12
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	s_mov_b32 s2, 3
	v_writelane_b32 v37, s2, 16
	v_lshrrev_b64 v[12:13], s2, v[11:12]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v11, v12
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v13
	v_add_co_u32 v13, s2, v2, v11
	v_add_co_ci_u32_e64 v0, s2, v0, v1, s2
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v0
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:92 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:88 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s7, v37, 15
	v_readlane_b32 s6, v37, 13
	v_readlane_b32 s0, v37, 11
	v_readlane_b32 s1, v37, 12
	v_readlane_b32 s3, v37, 14
	v_readlane_b32 s2, v37, 16
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v11, v0
	v_mov_b32_e32 v2, v1
	scratch_load_b64 v[0:1], off, s33 offset:92 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v2, v11
	v_mad_u64_u32 v[15:16], s15, v2, s7, 0
	v_mov_b32_e32 v19, v16
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v2, s15
                                        ; kill: def $vgpr19 killed $vgpr19 def $vgpr19_vgpr20 killed $exec
	v_mov_b32_e32 v20, v2
	v_lshrrev_b64 v[11:12], s6, v[11:12]
	v_mov_b32_e32 v2, v11
	v_mad_u64_u32 v[11:12], s7, v2, s7, v[19:20]
                                        ; kill: def $vgpr11 killed $vgpr11 killed $vgpr11_vgpr12 killed $exec
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v2, s7
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_lshlrev_b64 v[11:12], s6, v[11:12]
	v_mov_b32_e32 v17, v12
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v2, v16
	v_or_b32_e64 v2, v2, v17
	v_mov_b32_e32 v12, v11
	v_mov_b32_e32 v11, v15
	v_or_b32_e64 v11, v11, v12
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_lshrrev_b64 v[15:16], s2, v[11:12]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v11, v15
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v16
	v_add_co_u32 v15, s2, v2, v11
	v_add_co_ci_u32_e64 v0, s2, v0, v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v0
	scratch_load_b64 v[0:1], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:80 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:88 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s3, v37, 15
	v_readlane_b32 s2, v37, 14
	v_readlane_b32 s1, v37, 16
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v11, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:80 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v0
	v_mov_b32_e32 v0, v11
	v_mad_u64_u32 v[19:20], s6, v0, s3, 0
	v_mov_b32_e32 v21, v20
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr21 killed $vgpr21 def $vgpr21_vgpr22 killed $exec
	v_mov_b32_e32 v22, v0
	v_lshrrev_b64 v[11:12], s0, v[11:12]
	v_mov_b32_e32 v0, v11
	v_mad_u64_u32 v[11:12], s3, v0, s3, v[21:22]
                                        ; kill: def $vgpr11 killed $vgpr11 killed $vgpr11_vgpr12 killed $exec
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v0
	v_lshlrev_b64 v[11:12], s0, v[11:12]
	v_mov_b32_e32 v17, v12
                                        ; kill: def $vgpr19 killed $vgpr19 killed $vgpr19_vgpr20 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr19 killed $vgpr19 def $vgpr19_vgpr20 killed $exec
	v_mov_b32_e32 v20, v0
	v_mov_b32_e32 v0, v20
	v_or_b32_e64 v0, v0, v17
	v_mov_b32_e32 v12, v11
	v_mov_b32_e32 v11, v19
	v_or_b32_e64 v11, v11, v12
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v0
	v_lshrrev_b64 v[19:20], s1, v[11:12]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v11, v19
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v20
	v_add_co_u32 v0, s1, v0, v11
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_load_b64 v[19:20], off, s33 offset:40
	scratch_load_b64 v[29:30], off, s33 offset:48
	scratch_load_b64 v[27:28], off, s33 offset:56
	scratch_load_b32 v26, off, s33 offset:64
	v_mov_b32_e32 v12, v13
	v_lshrrev_b64 v[13:14], s0, v[13:14]
                                        ; kill: def $vgpr13 killed $vgpr13 killed $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v15
	v_lshrrev_b64 v[15:16], s0, v[15:16]
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v0
	v_lshrrev_b64 v[0:1], s0, v[0:1]
	v_mov_b32_e32 v17, v0
	s_waitcnt vmcnt(3)
	v_lshrrev_b64 v[0:1], s0, v[19:20]
	v_mov_b32_e32 v21, v0
	s_waitcnt vmcnt(2)
	v_lshrrev_b64 v[0:1], s0, v[29:30]
	v_mov_b32_e32 v23, v0
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[0:1], s0, v[27:28]
	v_mov_b32_e32 v25, v0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v32
	v_mov_b32_e32 v9, v33
	v_mov_b32_e32 v10, v34
	v_mov_b32_e32 v11, v35
	v_mov_b32_e32 v20, v19
	v_mov_b32_e32 v22, v29
	v_mov_b32_e32 v24, v27
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, weave@rel32@lo+4
	s_addc_u32 s1, s1, weave@rel32@hi+12
	v_mov_b32_e32 v19, 0x2000
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel sieveBenchmark
		.amdhsa_group_segment_fixed_size 16384
		.amdhsa_private_segment_fixed_size 2268
		.amdhsa_kernarg_size 320
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 38
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end26:
	.size	sieveBenchmark, .Lfunc_end26-sieveBenchmark
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 1968
; NumSgprs: 36
; NumVgprs: 38
; ScratchSize: 2268
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 16384 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 4
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 38
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.p2align	2                               ; -- Begin function _Z13convert_uint4Dv4_i
	.type	_Z13convert_uint4Dv4_i,@function
_Z13convert_uint4Dv4_i:                 ; @_Z13convert_uint4Dv4_i
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v6, v2
                                        ; kill: def $vgpr7 killed $vgpr3 killed $exec
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	s_mov_b32 s33, s4
	s_setpc_b64 s[30:31]
.Lfunc_end27:
	.size	_Z13convert_uint4Dv4_i, .Lfunc_end27-_Z13convert_uint4Dv4_i
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 32
; NumSgprs: 34
; NumVgprs: 8
; ScratchSize: 0
; MemoryBound: 0
	.text
	.hidden	add128                          ; -- Begin function add128
	.globl	add128
	.p2align	2
	.type	add128,@function
add128:                                 ; @add128
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v13, s33 offset:52 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 64
	v_writelane_b32 v13, s30, 0
	v_writelane_b32 v13, s31, 1
	v_mov_b32_e32 v5, v4
	v_mov_b32_e32 v6, v3
	v_mov_b32_e32 v7, v2
	scratch_store_b32 off, v1, s33 offset:48 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:48 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v4, s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_load_b128 v[0:3], off, s33 offset:16
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_add_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_add_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s0, v6, v7
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cmp_lt_u32_e64 s2, v2, v3
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s3
	v_cndmask_b32_e64 v1, 0, -1, s2
	v_cndmask_b32_e64 v2, 0, -1, s1
	v_cndmask_b32_e64 v3, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint4Dv4_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint4Dv4_i@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_sub_nc_u32_e64 v4, s0, v3
	v_sub_nc_u32_e64 v5, s0, v2
	v_sub_nc_u32_e64 v6, s0, v1
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v6, off, s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v6, off, s33 offset:36
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v6, off, s33 offset:40
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[2:5], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	scratch_load_b32 v1, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_load_b32 v1, v1, off
	v_mov_b32_e32 v2, v4
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v1, v2
	v_cndmask_b32_e64 v1, 0, 1, s0
	v_add_nc_u32_e64 v0, v0, v1
	v_readlane_b32 s30, v13, 0
	v_readlane_b32 s31, v13, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v13, off, s33 offset:52 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffc0
	s_mov_b32 s33, s16
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end28:
	.size	add128, .Lfunc_end28-add128
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 916
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 64
; MemoryBound: 0
	.text
	.hidden	add128Carry                     ; -- Begin function add128Carry
	.globl	add128Carry
	.p2align	2
	.type	add128Carry,@function
add128Carry:                            ; @add128Carry
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v13, s33 offset:68 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x50
	v_writelane_b32 v13, s30, 0
	v_writelane_b32 v13, s31, 1
	v_mov_b32_e32 v6, v4
	v_mov_b32_e32 v7, v3
	v_mov_b32_e32 v8, v2
	scratch_store_b32 off, v1, s33 offset:64 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:64 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v6
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v4, s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_store_b32 off, v5, s33 offset:32
	scratch_load_b128 v[0:3], off, s33 offset:16
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_add_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_add_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_add_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s0, v6, v7
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cmp_lt_u32_e64 s2, v2, v3
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s3
	v_cndmask_b32_e64 v1, 0, -1, s2
	v_cndmask_b32_e64 v2, 0, -1, s1
	v_cndmask_b32_e64 v3, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint4Dv4_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint4Dv4_i@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_sub_nc_u32_e64 v4, s0, v3
	v_sub_nc_u32_e64 v5, s0, v2
	v_sub_nc_u32_e64 v6, s0, v1
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s0
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:48
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:52
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:56
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[2:5], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	scratch_load_b32 v1, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_load_b32 v1, v1, off
	v_mov_b32_e32 v2, v4
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v1, v2
	v_cndmask_b32_e64 v1, 0, 1, s0
	v_add_nc_u32_e64 v0, v0, v1
	v_readlane_b32 s30, v13, 0
	v_readlane_b32 s31, v13, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v13, off, s33 offset:68 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffb0
	s_mov_b32 s33, s16
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end29:
	.size	add128Carry, .Lfunc_end29-add128Carry
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1068
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 80
; MemoryBound: 0
	.text
	.hidden	add256                          ; -- Begin function add256
	.globl	add256
	.p2align	2
	.type	add256,@function
add256:                                 ; @add256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v14, s33 offset:84 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:88 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x60
	v_writelane_b32 v14, s30, 0
	v_writelane_b32 v14, s31, 1
	scratch_store_b32 off, v31, s33 offset:68 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr15 : SGPR spill to VGPR lane
	v_writelane_b32 v15, s6, 0
	v_writelane_b32 v15, s7, 1
	scratch_store_b32 off, v9, s33 offset:76 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:80 ; 4-byte Folded Spill
	v_mov_b32_e32 v8, v6
	scratch_load_b32 v6, off, s33 offset:80 ; 4-byte Folded Reload
	scratch_store_b32 off, v8, s33 offset:72 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v5
	scratch_load_b32 v5, off, s33 offset:76 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v0
	scratch_load_b32 v0, off, s33 offset:72 ; 4-byte Folded Reload
	v_writelane_b32 v15, s15, 2
	v_writelane_b32 v15, s14, 3
	v_writelane_b32 v15, s13, 4
	v_writelane_b32 v15, s12, 5
	v_writelane_b32 v15, s10, 6
	v_writelane_b32 v15, s11, 7
	v_writelane_b32 v15, s8, 8
	v_writelane_b32 v15, s9, 9
	v_writelane_b32 v15, s4, 10
	v_writelane_b32 v15, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v12
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v7, v10
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v9, s33
	scratch_store_b32 off, v8, s33 offset:4
	scratch_store_b128 off, v[4:7], s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:48 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:52 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33
	scratch_load_b128 v[4:7], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add128@rel32@lo+4
	s_addc_u32 s1, s1, add128@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:68 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:52 ; 16-byte Folded Reload
	v_readlane_b32 s15, v15, 2
	v_readlane_b32 s14, v15, 3
	v_readlane_b32 s13, v15, 4
	v_readlane_b32 s12, v15, 5
	v_readlane_b32 s10, v15, 6
	v_readlane_b32 s11, v15, 7
	v_readlane_b32 s8, v15, 8
	v_readlane_b32 s9, v15, 9
	v_readlane_b32 s6, v15, 0
	v_readlane_b32 s7, v15, 1
	v_readlane_b32 s4, v15, 10
	v_readlane_b32 s5, v15, 11
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:48 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add128Carry@rel32@lo+4
	s_addc_u32 s1, s1, add128Carry@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v14, 0
	v_readlane_b32 s31, v14, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v14, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:88 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffa0
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end30:
	.size	add256, .Lfunc_end30-add256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 636
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 176
; MemoryBound: 0
	.text
	.hidden	add384                          ; -- Begin function add384
	.globl	add384
	.p2align	2
	.type	add384,@function
add384:                                 ; @add384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v18, s33 offset:128 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:132 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x90
	v_writelane_b32 v18, s30, 0
	v_writelane_b32 v18, s31, 1
	scratch_store_b32 off, v31, s33 offset:84 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr19 : SGPR spill to VGPR lane
	v_writelane_b32 v19, s6, 0
	v_writelane_b32 v19, s7, 1
	scratch_store_b32 off, v14, s33 offset:116 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:120 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:124 ; 4-byte Folded Spill
	scratch_store_b32 off, v11, s33 offset:108 ; 4-byte Folded Spill
	v_mov_b32_e32 v11, v8
	v_mov_b32_e32 v8, v7
	scratch_load_b32 v7, off, s33 offset:124 ; 4-byte Folded Reload
	scratch_store_b32 off, v8, s33 offset:112 ; 4-byte Folded Spill
	v_mov_b32_e32 v15, v6
	scratch_load_b32 v6, off, s33 offset:120 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v5
	scratch_load_b32 v5, off, s33 offset:116 ; 4-byte Folded Reload
	v_mov_b32_e32 v17, v4
	scratch_load_b32 v4, off, s33 offset:112 ; 4-byte Folded Reload
	v_mov_b32_e32 v8, v3
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v1
	v_mov_b32_e32 v14, v0
	scratch_load_b32 v0, off, s33 offset:108 ; 4-byte Folded Reload
	v_writelane_b32 v19, s15, 2
	v_writelane_b32 v19, s14, 3
	v_writelane_b32 v19, s13, 4
	v_writelane_b32 v19, s12, 5
	v_writelane_b32 v19, s10, 6
	v_writelane_b32 v19, s11, 7
	v_writelane_b32 v19, s8, 8
	v_writelane_b32 v19, s9, 9
	v_writelane_b32 v19, s4, 10
	v_writelane_b32 v19, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v17
	v_mov_b32_e32 v10, v16
	v_mov_b32_e32 v11, v15
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v14, s33
	scratch_store_b32 off, v13, s33 offset:4
	scratch_store_b32 off, v12, s33 offset:8
	scratch_store_b128 off, v[8:11], s33 offset:16
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:64 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:68 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:88 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:92 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33
	scratch_load_b128 v[4:7], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add128@rel32@lo+4
	s_addc_u32 s1, s1, add128@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:92 ; 16-byte Folded Reload
	v_readlane_b32 s15, v19, 2
	v_readlane_b32 s14, v19, 3
	v_readlane_b32 s13, v19, 4
	v_readlane_b32 s12, v19, 5
	v_readlane_b32 s10, v19, 6
	v_readlane_b32 s11, v19, 7
	v_readlane_b32 s8, v19, 8
	v_readlane_b32 s9, v19, 9
	v_readlane_b32 s6, v19, 0
	v_readlane_b32 s7, v19, 1
	v_readlane_b32 s4, v19, 10
	v_readlane_b32 s5, v19, 11
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:88 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add128Carry@rel32@lo+4
	s_addc_u32 s1, s1, add128Carry@rel32@hi+12
	v_writelane_b32 v19, s0, 12
	v_writelane_b32 v19, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:68 ; 16-byte Folded Reload
	v_readlane_b32 s15, v19, 2
	v_readlane_b32 s14, v19, 3
	v_readlane_b32 s13, v19, 4
	v_readlane_b32 s12, v19, 5
	v_readlane_b32 s10, v19, 6
	v_readlane_b32 s11, v19, 7
	v_readlane_b32 s8, v19, 8
	v_readlane_b32 s9, v19, 9
	v_readlane_b32 s6, v19, 0
	v_readlane_b32 s7, v19, 1
	v_readlane_b32 s4, v19, 10
	v_readlane_b32 s5, v19, 11
	v_readlane_b32 s0, v19, 12
	v_readlane_b32 s1, v19, 13
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:64 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v18, 0
	v_readlane_b32 s31, v18, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v18, off, s33 offset:128 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:132 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff70
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end31:
	.size	add384, .Lfunc_end31-add384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 932
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 224
; MemoryBound: 0
	.text
	.hidden	add512                          ; -- Begin function add512
	.globl	add512
	.p2align	2
	.type	add512,@function
add512:                                 ; @add512
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v23, s33 offset:176 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xc0
	v_writelane_b32 v23, s30, 0
	v_writelane_b32 v23, s31, 1
	scratch_store_b32 off, v31, s33 offset:100 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr24 : SGPR spill to VGPR lane
	v_writelane_b32 v24, s6, 0
	v_writelane_b32 v24, s7, 1
	scratch_store_b32 off, v19, s33 offset:152 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:156 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:160 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:144 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:164 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:168 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:172 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:148 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v11
	scratch_load_b32 v11, off, s33 offset:172 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v10
	scratch_load_b32 v10, off, s33 offset:168 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v9
	scratch_load_b32 v9, off, s33 offset:164 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v7
	scratch_load_b32 v7, off, s33 offset:160 ; 4-byte Folded Reload
	v_mov_b32_e32 v21, v6
	scratch_load_b32 v6, off, s33 offset:156 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v5
	scratch_load_b32 v5, off, s33 offset:152 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v4
	scratch_load_b32 v4, off, s33 offset:148 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v3
	v_mov_b32_e32 v17, v2
	v_mov_b32_e32 v18, v1
	v_mov_b32_e32 v19, v0
	scratch_load_b32 v0, off, s33 offset:144 ; 4-byte Folded Reload
	v_writelane_b32 v24, s15, 2
	v_writelane_b32 v24, s14, 3
	v_writelane_b32 v24, s13, 4
	v_writelane_b32 v24, s12, 5
	v_writelane_b32 v24, s10, 6
	v_writelane_b32 v24, s11, 7
	v_writelane_b32 v24, s8, 8
	v_writelane_b32 v24, s9, 9
	v_writelane_b32 v24, s4, 10
	v_writelane_b32 v24, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v22
	v_mov_b32_e32 v14, v21
	v_mov_b32_e32 v15, v20
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v19, s33
	scratch_store_b32 off, v18, s33 offset:4
	scratch_store_b32 off, v17, s33 offset:8
	scratch_store_b32 off, v16, s33 offset:12
	scratch_store_b128 off, v[12:15], s33 offset:16
	scratch_store_b128 off, v[8:11], s33 offset:32
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:80 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:84 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:104 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:108 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:124 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33
	scratch_load_b128 v[4:7], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add128@rel32@lo+4
	s_addc_u32 s1, s1, add128@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:100 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:128 ; 16-byte Folded Reload
	v_readlane_b32 s15, v24, 2
	v_readlane_b32 s14, v24, 3
	v_readlane_b32 s13, v24, 4
	v_readlane_b32 s12, v24, 5
	v_readlane_b32 s10, v24, 6
	v_readlane_b32 s11, v24, 7
	v_readlane_b32 s8, v24, 8
	v_readlane_b32 s9, v24, 9
	v_readlane_b32 s6, v24, 0
	v_readlane_b32 s7, v24, 1
	v_readlane_b32 s4, v24, 10
	v_readlane_b32 s5, v24, 11
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:124 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add128Carry@rel32@lo+4
	s_addc_u32 s1, s1, add128Carry@rel32@hi+12
	v_writelane_b32 v24, s0, 12
	v_writelane_b32 v24, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:100 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:108 ; 16-byte Folded Reload
	v_readlane_b32 s15, v24, 2
	v_readlane_b32 s14, v24, 3
	v_readlane_b32 s13, v24, 4
	v_readlane_b32 s12, v24, 5
	v_readlane_b32 s10, v24, 6
	v_readlane_b32 s11, v24, 7
	v_readlane_b32 s8, v24, 8
	v_readlane_b32 s9, v24, 9
	v_readlane_b32 s6, v24, 0
	v_readlane_b32 s7, v24, 1
	v_readlane_b32 s4, v24, 10
	v_readlane_b32 s5, v24, 11
	v_readlane_b32 s0, v24, 12
	v_readlane_b32 s1, v24, 13
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:104 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:100 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:84 ; 16-byte Folded Reload
	v_readlane_b32 s15, v24, 2
	v_readlane_b32 s14, v24, 3
	v_readlane_b32 s13, v24, 4
	v_readlane_b32 s12, v24, 5
	v_readlane_b32 s10, v24, 6
	v_readlane_b32 s11, v24, 7
	v_readlane_b32 s8, v24, 8
	v_readlane_b32 s9, v24, 9
	v_readlane_b32 s6, v24, 0
	v_readlane_b32 s7, v24, 1
	v_readlane_b32 s4, v24, 10
	v_readlane_b32 s5, v24, 11
	v_readlane_b32 s0, v24, 12
	v_readlane_b32 s1, v24, 13
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:80 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v23, 0
	v_readlane_b32 s31, v23, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v23, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff40
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end32:
	.size	add512, .Lfunc_end32-add512
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1220
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 272
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z13convert_uint2Dv2_i
	.type	_Z13convert_uint2Dv2_i,@function
_Z13convert_uint2Dv2_i:                 ; @_Z13convert_uint2Dv2_i
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, v0
                                        ; kill: def $vgpr3 killed $vgpr1 killed $exec
                                        ; implicit-def: $sgpr0_sgpr1
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end33:
	.size	_Z13convert_uint2Dv2_i, .Lfunc_end33-_Z13convert_uint2Dv2_i
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 24
; NumSgprs: 34
; NumVgprs: 4
; ScratchSize: 0
; MemoryBound: 0
	.text
	.hidden	sub64Borrow                     ; -- Begin function sub64Borrow
	.globl	sub64Borrow
	.p2align	2
	.type	sub64Borrow,@function
sub64Borrow:                            ; @sub64Borrow
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s3, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v7, s33 offset:36 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 48
	v_writelane_b32 v7, s30, 0
	v_writelane_b32 v7, s31, 1
	v_mov_b32_e32 v4, v2
	scratch_store_b32 off, v1, s33 offset:32 ; 4-byte Folded Spill
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:32 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v4
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b32 off, v2, s33
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:8
	scratch_store_b32 off, v3, s33 offset:16
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[2:3], v0, off
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v4, v3
	v_cmp_lt_u32_e64 s0, v4, v5
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v2
	v_cmp_lt_u32_e64 s1, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s1
	v_cndmask_b32_e64 v1, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint2Dv2_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint2Dv2_i@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_sub_nc_u32_e64 v2, s0, v1
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:24
	scratch_load_b64 v[0:1], off, s33 offset:8
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[4:5], v2, off
	v_mov_b32_e32 v6, v1
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v5
	v_sub_nc_u32_e64 v3, v3, v6
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v4
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
	v_cndmask_b32_e64 v3, 0, 1, s0
	scratch_load_b64 v[1:2], off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_add_nc_u32_e64 v0, v0, v3
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr1_vgpr2 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:24
	scratch_load_b32 v1, off, s33 offset:16
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[3:4], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v3, v4
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v1, v0, off
	scratch_load_b64 v[3:4], off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_cmp_lt_u32_e64 s0, v1, v0
	v_cndmask_b32_e64 v2, 0, 1, s0
	v_mov_b32_e32 v1, v4
	v_add_nc_u32_e64 v2, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:24
	scratch_load_b32 v4, off, s33 offset:24
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[0:1], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v1
	v_sub_nc_u32_e64 v3, v3, v4
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:28
	v_readlane_b32 s30, v7, 0
	v_readlane_b32 s31, v7, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v7, off, s33 offset:36 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffd0
	s_mov_b32 s33, s3
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end34:
	.size	sub64Borrow, .Lfunc_end34-sub64Borrow
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 664
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 48
; MemoryBound: 0
	.text
	.hidden	sub128                          ; -- Begin function sub128
	.globl	sub128
	.p2align	2
	.type	sub128,@function
sub128:                                 ; @sub128
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v13, s33 offset:52 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 64
	v_writelane_b32 v13, s30, 0
	v_writelane_b32 v13, s31, 1
	v_mov_b32_e32 v5, v4
	v_mov_b32_e32 v6, v3
	v_mov_b32_e32 v7, v2
	scratch_store_b32 off, v1, s33 offset:48 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:48 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v4, s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s0, v6, v7
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cmp_lt_u32_e64 s2, v2, v3
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s3
	v_cndmask_b32_e64 v1, 0, -1, s2
	v_cndmask_b32_e64 v2, 0, -1, s1
	v_cndmask_b32_e64 v3, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint4Dv4_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint4Dv4_i@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_sub_nc_u32_e64 v4, s0, v3
	v_sub_nc_u32_e64 v5, s0, v2
	v_sub_nc_u32_e64 v6, s0, v1
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b128 v[0:3], off, s33 offset:16
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v6, off, s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v6, off, s33 offset:36
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v6, off, s33 offset:40
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:44
	v_readlane_b32 s30, v13, 0
	v_readlane_b32 s31, v13, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v13, off, s33 offset:52 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffc0
	s_mov_b32 s33, s16
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end35:
	.size	sub128, .Lfunc_end35-sub128
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 932
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 64
; MemoryBound: 0
	.text
	.hidden	sub128Borrow                    ; -- Begin function sub128Borrow
	.globl	sub128Borrow
	.p2align	2
	.type	sub128Borrow,@function
sub128Borrow:                           ; @sub128Borrow
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v13, s33 offset:68 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x50
	v_writelane_b32 v13, s30, 0
	v_writelane_b32 v13, s31, 1
	v_mov_b32_e32 v6, v4
	v_mov_b32_e32 v7, v3
	v_mov_b32_e32 v8, v2
	scratch_store_b32 off, v1, s33 offset:64 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:64 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v6
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v4, s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_store_b32 off, v5, s33 offset:32
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s0, v6, v7
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cmp_lt_u32_e64 s2, v2, v3
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s3
	v_cndmask_b32_e64 v1, 0, -1, s2
	v_cndmask_b32_e64 v2, 0, -1, s1
	v_cndmask_b32_e64 v3, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint4Dv4_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint4Dv4_i@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_sub_nc_u32_e64 v4, s0, v3
	v_sub_nc_u32_e64 v5, s0, v2
	v_sub_nc_u32_e64 v6, s0, v1
	v_sub_nc_u32_e64 v0, s0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b128 v[0:3], off, s33 offset:16
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s0
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:48
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:52
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v6, off, s33 offset:56
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:60
	v_readlane_b32 s30, v13, 0
	v_readlane_b32 s31, v13, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v13, off, s33 offset:68 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffb0
	s_mov_b32 s33, s16
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end36:
	.size	sub128Borrow, .Lfunc_end36-sub128Borrow
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1084
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 80
; MemoryBound: 0
	.text
	.hidden	sub256                          ; -- Begin function sub256
	.globl	sub256
	.p2align	2
	.type	sub256,@function
sub256:                                 ; @sub256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v14, s33 offset:84 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:88 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x60
	v_writelane_b32 v14, s30, 0
	v_writelane_b32 v14, s31, 1
	scratch_store_b32 off, v31, s33 offset:68 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr15 : SGPR spill to VGPR lane
	v_writelane_b32 v15, s6, 0
	v_writelane_b32 v15, s7, 1
	scratch_store_b32 off, v9, s33 offset:76 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:80 ; 4-byte Folded Spill
	v_mov_b32_e32 v8, v6
	scratch_load_b32 v6, off, s33 offset:80 ; 4-byte Folded Reload
	scratch_store_b32 off, v8, s33 offset:72 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v5
	scratch_load_b32 v5, off, s33 offset:76 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v4
	v_mov_b32_e32 v12, v3
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v0
	scratch_load_b32 v0, off, s33 offset:72 ; 4-byte Folded Reload
	v_writelane_b32 v15, s15, 2
	v_writelane_b32 v15, s14, 3
	v_writelane_b32 v15, s13, 4
	v_writelane_b32 v15, s12, 5
	v_writelane_b32 v15, s10, 6
	v_writelane_b32 v15, s11, 7
	v_writelane_b32 v15, s8, 8
	v_writelane_b32 v15, s9, 9
	v_writelane_b32 v15, s4, 10
	v_writelane_b32 v15, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v12
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v7, v10
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v9, s33
	scratch_store_b32 off, v8, s33 offset:4
	scratch_store_b128 off, v[4:7], s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:48 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:52 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33
	scratch_load_b128 v[4:7], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub128@rel32@lo+4
	s_addc_u32 s1, s1, sub128@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:68 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:52 ; 16-byte Folded Reload
	v_readlane_b32 s15, v15, 2
	v_readlane_b32 s14, v15, 3
	v_readlane_b32 s13, v15, 4
	v_readlane_b32 s12, v15, 5
	v_readlane_b32 s10, v15, 6
	v_readlane_b32 s11, v15, 7
	v_readlane_b32 s8, v15, 8
	v_readlane_b32 s9, v15, 9
	v_readlane_b32 s6, v15, 0
	v_readlane_b32 s7, v15, 1
	v_readlane_b32 s4, v15, 10
	v_readlane_b32 s5, v15, 11
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:48 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub128Borrow@rel32@lo+4
	s_addc_u32 s1, s1, sub128Borrow@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v14, 0
	v_readlane_b32 s31, v14, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v14, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:88 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffa0
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end37:
	.size	sub256, .Lfunc_end37-sub256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 636
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 176
; MemoryBound: 0
	.text
	.hidden	sub384                          ; -- Begin function sub384
	.globl	sub384
	.p2align	2
	.type	sub384,@function
sub384:                                 ; @sub384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v18, s33 offset:128 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:132 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x90
	v_writelane_b32 v18, s30, 0
	v_writelane_b32 v18, s31, 1
	scratch_store_b32 off, v31, s33 offset:84 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr19 : SGPR spill to VGPR lane
	v_writelane_b32 v19, s6, 0
	v_writelane_b32 v19, s7, 1
	scratch_store_b32 off, v14, s33 offset:116 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:120 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:124 ; 4-byte Folded Spill
	scratch_store_b32 off, v11, s33 offset:108 ; 4-byte Folded Spill
	v_mov_b32_e32 v11, v8
	v_mov_b32_e32 v8, v7
	scratch_load_b32 v7, off, s33 offset:124 ; 4-byte Folded Reload
	scratch_store_b32 off, v8, s33 offset:112 ; 4-byte Folded Spill
	v_mov_b32_e32 v15, v6
	scratch_load_b32 v6, off, s33 offset:120 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v5
	scratch_load_b32 v5, off, s33 offset:116 ; 4-byte Folded Reload
	v_mov_b32_e32 v17, v4
	scratch_load_b32 v4, off, s33 offset:112 ; 4-byte Folded Reload
	v_mov_b32_e32 v8, v3
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v13, v1
	v_mov_b32_e32 v14, v0
	scratch_load_b32 v0, off, s33 offset:108 ; 4-byte Folded Reload
	v_writelane_b32 v19, s15, 2
	v_writelane_b32 v19, s14, 3
	v_writelane_b32 v19, s13, 4
	v_writelane_b32 v19, s12, 5
	v_writelane_b32 v19, s10, 6
	v_writelane_b32 v19, s11, 7
	v_writelane_b32 v19, s8, 8
	v_writelane_b32 v19, s9, 9
	v_writelane_b32 v19, s4, 10
	v_writelane_b32 v19, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v17
	v_mov_b32_e32 v10, v16
	v_mov_b32_e32 v11, v15
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v14, s33
	scratch_store_b32 off, v13, s33 offset:4
	scratch_store_b32 off, v12, s33 offset:8
	scratch_store_b128 off, v[8:11], s33 offset:16
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:64 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:68 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:88 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:92 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33
	scratch_load_b128 v[4:7], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub128@rel32@lo+4
	s_addc_u32 s1, s1, sub128@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:92 ; 16-byte Folded Reload
	v_readlane_b32 s15, v19, 2
	v_readlane_b32 s14, v19, 3
	v_readlane_b32 s13, v19, 4
	v_readlane_b32 s12, v19, 5
	v_readlane_b32 s10, v19, 6
	v_readlane_b32 s11, v19, 7
	v_readlane_b32 s8, v19, 8
	v_readlane_b32 s9, v19, 9
	v_readlane_b32 s6, v19, 0
	v_readlane_b32 s7, v19, 1
	v_readlane_b32 s4, v19, 10
	v_readlane_b32 s5, v19, 11
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:88 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub128Borrow@rel32@lo+4
	s_addc_u32 s1, s1, sub128Borrow@rel32@hi+12
	v_writelane_b32 v19, s0, 12
	v_writelane_b32 v19, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:68 ; 16-byte Folded Reload
	v_readlane_b32 s15, v19, 2
	v_readlane_b32 s14, v19, 3
	v_readlane_b32 s13, v19, 4
	v_readlane_b32 s12, v19, 5
	v_readlane_b32 s10, v19, 6
	v_readlane_b32 s11, v19, 7
	v_readlane_b32 s8, v19, 8
	v_readlane_b32 s9, v19, 9
	v_readlane_b32 s6, v19, 0
	v_readlane_b32 s7, v19, 1
	v_readlane_b32 s4, v19, 10
	v_readlane_b32 s5, v19, 11
	v_readlane_b32 s0, v19, 12
	v_readlane_b32 s1, v19, 13
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:64 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v18, 0
	v_readlane_b32 s31, v18, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v18, off, s33 offset:128 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:132 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff70
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end38:
	.size	sub384, .Lfunc_end38-sub384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 932
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 224
; MemoryBound: 0
	.text
	.hidden	sub448                          ; -- Begin function sub448
	.globl	sub448
	.p2align	2
	.type	sub448,@function
sub448:                                 ; @sub448
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v21, s33 offset:156 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xb0
	v_writelane_b32 v21, s30, 0
	v_writelane_b32 v21, s31, 1
	scratch_store_b32 off, v31, s33 offset:84 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr22 : SGPR spill to VGPR lane
	v_writelane_b32 v22, s6, 0
	v_writelane_b32 v22, s7, 1
	v_mov_b32_e32 v18, v17
	scratch_store_b32 off, v16, s33 offset:128 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:144 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:148 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:152 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:136 ; 4-byte Folded Spill
	v_mov_b32_e32 v12, v10
	v_mov_b32_e32 v13, v9
	scratch_load_b32 v9, off, s33 offset:152 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v8
	scratch_load_b32 v8, off, s33 offset:148 ; 4-byte Folded Reload
	scratch_store_b32 off, v10, s33 offset:140 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v7
	scratch_load_b32 v7, off, s33 offset:144 ; 4-byte Folded Reload
	scratch_store_b32 off, v10, s33 offset:132 ; 4-byte Folded Spill
	v_mov_b32_e32 v19, v6
	scratch_load_b32 v6, off, s33 offset:140 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v5
	v_mov_b32_e32 v10, v4
	v_mov_b32_e32 v14, v3
	v_mov_b32_e32 v15, v2
	scratch_load_b32 v2, off, s33 offset:136 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v1
	scratch_load_b32 v1, off, s33 offset:132 ; 4-byte Folded Reload
	v_mov_b32_e32 v17, v0
	scratch_load_b32 v0, off, s33 offset:128 ; 4-byte Folded Reload
	v_writelane_b32 v22, s15, 2
	v_writelane_b32 v22, s14, 3
	v_writelane_b32 v22, s13, 4
	v_writelane_b32 v22, s12, 5
	v_writelane_b32 v22, s10, 6
	v_writelane_b32 v22, s11, 7
	v_writelane_b32 v22, s8, 8
	v_writelane_b32 v22, s9, 9
	v_writelane_b32 v22, s4, 10
	v_writelane_b32 v22, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v3, v9
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v4, v8
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v7, v13
	v_mov_b32_e32 v8, v12
	v_mov_b32_e32 v9, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v20
	v_mov_b32_e32 v12, v19
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v13, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v18
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v17, s33
	scratch_store_b32 off, v16, s33 offset:4
	scratch_store_b32 off, v15, s33 offset:8
	scratch_store_b32 off, v14, s33 offset:12
	scratch_store_b128 off, v[10:13], s33 offset:16
	scratch_store_b128 off, v[6:9], s33 offset:32
	scratch_store_b128 off, v[2:5], s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:64
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:72 ; 4-byte Folded Spill
	scratch_load_b64 v[0:1], off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:76 ; 8-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:88 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:92 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:108 ; 4-byte Folded Spill
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112 ; 16-byte Folded Spill
	scratch_load_b32 v0, off, s33
	scratch_load_b128 v[4:7], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub128@rel32@lo+4
	s_addc_u32 s1, s1, sub128@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:112 ; 16-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:108 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub128Borrow@rel32@lo+4
	s_addc_u32 s1, s1, sub128Borrow@rel32@hi+12
	v_writelane_b32 v22, s0, 12
	v_writelane_b32 v22, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:92 ; 16-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:88 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v9
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:84 ; 4-byte Folded Reload
	scratch_load_b64 v[4:5], off, s33 offset:76 ; 8-byte Folded Reload
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:72 ; 4-byte Folded Reload
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub64Borrow@rel32@lo+4
	s_addc_u32 s1, s1, sub64Borrow@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v21, 0
	v_readlane_b32 s31, v21, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v21, off, s33 offset:156 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff50
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end39:
	.size	sub448, .Lfunc_end39-sub448
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1196
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 256
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __ockl_mul_hi_u32
	.type	__ockl_mul_hi_u32,@function
__ockl_mul_hi_u32:                      ; @__ockl_mul_hi_u32
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s0, s33
	s_mov_b32 s33, s32
	v_mul_hi_u32 v0, v1, v0
	s_mov_b32 s33, s0
	s_setpc_b64 s[30:31]
.Lfunc_end40:
	.size	__ockl_mul_hi_u32, .Lfunc_end40-__ockl_mul_hi_u32
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 28
; NumSgprs: 34
; NumVgprs: 2
; ScratchSize: 0
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z6mul_hiDv4_jS_
	.type	_Z6mul_hiDv4_jS_,@function
_Z6mul_hiDv4_jS_:                       ; @_Z6mul_hiDv4_jS_
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s17, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:40 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:44 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 64
	v_writelane_b32 v12, s30, 0
	v_writelane_b32 v12, s31, 1
	scratch_store_b32 off, v31, s33 offset:12 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr13 : SGPR spill to VGPR lane
	v_writelane_b32 v13, s6, 0
	v_writelane_b32 v13, s7, 1
	v_mov_b32_e32 v9, v7
	scratch_store_b32 off, v9, s33 offset:16 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v6
	scratch_store_b32 off, v10, s33 offset:24 ; 4-byte Folded Spill
	v_mov_b32_e32 v11, v5
	scratch_store_b32 off, v11, s33 offset:32 ; 4-byte Folded Spill
	scratch_store_b32 off, v4, s33 offset:36 ; 4-byte Folded Spill
	v_mov_b32_e32 v6, v3
	scratch_store_b32 off, v6, s33 offset:8 ; 4-byte Folded Spill
	v_mov_b32_e32 v7, v2
	scratch_store_b32 off, v7, s33 offset:20 ; 4-byte Folded Spill
	v_mov_b32_e32 v8, v1
	scratch_load_b32 v1, off, s33 offset:36 ; 4-byte Folded Reload
	scratch_store_b32 off, v8, s33 offset:28 ; 4-byte Folded Spill
	v_writelane_b32 v13, s15, 2
	v_writelane_b32 v13, s14, 3
	v_writelane_b32 v13, s13, 4
	v_writelane_b32 v13, s12, 5
	v_writelane_b32 v13, s10, 6
	v_writelane_b32 v13, s11, 7
	v_writelane_b32 v13, s8, 8
	v_writelane_b32 v13, s9, 9
	v_writelane_b32 v13, s4, 10
	v_writelane_b32 v13, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v1
	v_mov_b32_e32 v3, v11
	v_mov_b32_e32 v4, v10
                                        ; kill: def $vgpr5 killed $vgpr9 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
                                        ; kill: def $vgpr5 killed $vgpr6 killed $exec
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_mul_hi_u32@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_mul_hi_u32@rel32@hi+12
	v_writelane_b32 v13, s0, 12
	v_writelane_b32 v13, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:32 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:12 ; 4-byte Folded Reload
	v_readlane_b32 s15, v13, 2
	v_readlane_b32 s14, v13, 3
	v_readlane_b32 s13, v13, 4
	v_readlane_b32 s12, v13, 5
	v_readlane_b32 s10, v13, 6
	v_readlane_b32 s11, v13, 7
	v_readlane_b32 s8, v13, 8
	v_readlane_b32 s9, v13, 9
	v_readlane_b32 s6, v13, 0
	v_readlane_b32 s7, v13, 1
	v_readlane_b32 s4, v13, 10
	v_readlane_b32 s5, v13, 11
	v_readlane_b32 s0, v13, 12
	v_readlane_b32 s1, v13, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:28 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:24 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:12 ; 4-byte Folded Reload
	v_readlane_b32 s15, v13, 2
	v_readlane_b32 s14, v13, 3
	v_readlane_b32 s13, v13, 4
	v_readlane_b32 s12, v13, 5
	v_readlane_b32 s10, v13, 6
	v_readlane_b32 s11, v13, 7
	v_readlane_b32 s8, v13, 8
	v_readlane_b32 s9, v13, 9
	v_readlane_b32 s6, v13, 0
	v_readlane_b32 s7, v13, 1
	v_readlane_b32 s4, v13, 10
	v_readlane_b32 s5, v13, 11
	v_readlane_b32 s0, v13, 12
	v_readlane_b32 s1, v13, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:20 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:4 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:16 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:12 ; 4-byte Folded Reload
	v_readlane_b32 s15, v13, 2
	v_readlane_b32 s14, v13, 3
	v_readlane_b32 s13, v13, 4
	v_readlane_b32 s12, v13, 5
	v_readlane_b32 s10, v13, 6
	v_readlane_b32 s11, v13, 7
	v_readlane_b32 s8, v13, 8
	v_readlane_b32 s9, v13, 9
	v_readlane_b32 s6, v13, 0
	v_readlane_b32 s7, v13, 1
	v_readlane_b32 s4, v13, 10
	v_readlane_b32 s5, v13, 11
	v_readlane_b32 s0, v13, 12
	v_readlane_b32 s1, v13, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:4  ; 4-byte Folded Reload
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33           ; 4-byte Folded Reload
	v_readlane_b32 s30, v12, 0
	v_readlane_b32 s31, v12, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:40 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:44 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffc0
	s_mov_b32 s33, s17
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end41:
	.size	_Z6mul_hiDv4_jS_, .Lfunc_end41-_Z6mul_hiDv4_jS_
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 844
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 64
; MemoryBound: 0
	.text
	.hidden	mul128round                     ; -- Begin function mul128round
	.globl	mul128round
	.p2align	2
	.type	mul128round,@function
mul128round:                            ; @mul128round
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v14, s33 offset:80 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x60
	v_writelane_b32 v14, s30, 0
	v_writelane_b32 v14, s31, 1
	v_mov_b32_e32 v10, v3
	v_mov_b32_e32 v11, v2
	v_mov_b32_e32 v12, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v12
	v_mov_b32_e32 v2, v11
	v_mov_b32_e32 v3, v10
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[0:3], s33
	scratch_store_b32 off, v4, s33 offset:16
	scratch_store_b32 off, v5, s33 offset:20
	scratch_store_b32 off, v6, s33 offset:24
	scratch_store_b32 off, v7, s33 offset:28
	scratch_store_b32 off, v8, s33 offset:32
	scratch_store_b32 off, v9, s33 offset:36
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v5, off, s33 offset:48
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:64
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:52
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_load_b32 v5, v0, off offset:4
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:56
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:72
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:60
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:76
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	v_readlane_b32 s30, v14, 0
	v_readlane_b32 s31, v14, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v14, off, s33 offset:80 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffa0
	s_mov_b32 s33, s16
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end42:
	.size	mul128round, .Lfunc_end42-mul128round
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1156
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 160
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z6mul_hijj
	.type	_Z6mul_hijj,@function
_Z6mul_hijj:                            ; @_Z6mul_hijj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_mul_hi_u32@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_mul_hi_u32@rel32@hi+12
	s_mov_b32 s33, s2
	s_setpc_b64 s[0:1]
.Lfunc_end43:
	.size	_Z6mul_hijj, .Lfunc_end43-_Z6mul_hijj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 0
; MemoryBound: 0
	.text
	.hidden	mul128schoolBook_v3             ; -- Begin function mul128schoolBook_v3
	.globl	mul128schoolBook_v3
	.p2align	2
	.type	mul128schoolBook_v3,@function
mul128schoolBook_v3:                    ; @mul128schoolBook_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v15, s33 offset:168 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:172 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xc0
	v_writelane_b32 v15, s30, 0
	v_writelane_b32 v15, s31, 1
	scratch_store_b32 off, v31, s33 offset:156 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr16 : SGPR spill to VGPR lane
	v_writelane_b32 v16, s6, 0
	v_writelane_b32 v16, s7, 1
	scratch_store_b32 off, v4, s33 offset:164 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v3
	v_mov_b32_e32 v11, v2
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:164 ; 4-byte Folded Reload
	v_writelane_b32 v16, s15, 2
	v_writelane_b32 v16, s14, 3
	v_writelane_b32 v16, s13, 4
	v_writelane_b32 v16, s12, 5
	v_writelane_b32 v16, s10, 6
	v_writelane_b32 v16, s11, 7
	v_writelane_b32 v16, s8, 8
	v_writelane_b32 v16, s9, 9
	v_writelane_b32 v16, s4, 10
	v_writelane_b32 v16, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v12
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v7, v10
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[4:7], s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_store_b32 off, v8, s33 offset:32
	scratch_store_b32 off, v9, s33 offset:36
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	s_mov_b32 s0, 0
	v_writelane_b32 v16, s0, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b32 v0, off, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:56
	scratch_load_b32 v0, off, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:64
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:28
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hijj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hijj@rel32@hi+12
	v_writelane_b32 v16, s0, 13
	v_writelane_b32 v16, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:156 ; 4-byte Folded Reload
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s0, v16, 13
	v_readlane_b32 s1, v16, 14
	v_readlane_b32 s2, v16, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b32 v0, off, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:28
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:156 ; 4-byte Folded Reload
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s0, v16, 13
	v_readlane_b32 s1, v16, 14
	v_readlane_b32 s2, v16, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:28
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:156 ; 4-byte Folded Reload
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s0, v16, 13
	v_readlane_b32 s1, v16, 14
	v_readlane_b32 s2, v16, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:88
	scratch_load_b32 v0, off, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:28
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:156 ; 4-byte Folded Reload
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s0, v16, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b128 v[10:13], off, s33
	scratch_load_b128 v[0:3], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v5, v1
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v6, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 56
	v_mov_b32_e32 v7, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v7, s33 offset:160 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v8, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v8, s33 offset:152 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x48
	v_mov_b32_e32 v9, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v9, s33 offset:148 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v2, v12
	v_mov_b32_e32 v3, v13
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul128round@rel32@lo+4
	s_addc_u32 s1, s1, mul128round@rel32@hi+12
	v_writelane_b32 v16, s0, 15
	v_writelane_b32 v16, s1, 16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v6, off, s33 offset:160 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:156 ; 4-byte Folded Reload
	scratch_load_b32 v7, off, s33 offset:152 ; 4-byte Folded Reload
	scratch_load_b32 v8, off, s33 offset:148 ; 4-byte Folded Reload
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s0, v16, 15
	v_readlane_b32 s1, v16, 16
	scratch_load_b128 v[10:13], off, s33
	scratch_load_b128 v[0:3], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v5, v2
	s_add_i32 s2, s33, 0x50
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v9, s33 offset:144 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v2, v12
	v_mov_b32_e32 v3, v13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:156 ; 4-byte Folded Reload
	scratch_load_b32 v6, off, s33 offset:152 ; 4-byte Folded Reload
	scratch_load_b32 v7, off, s33 offset:148 ; 4-byte Folded Reload
	scratch_load_b32 v8, off, s33 offset:144 ; 4-byte Folded Reload
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s0, v16, 15
	v_readlane_b32 s1, v16, 16
	scratch_load_b128 v[10:13], off, s33
	scratch_load_b128 v[0:3], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v5, v3
	s_add_i32 s2, s33, 0x58
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v2, v12
	v_mov_b32_e32 v3, v13
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v16, 12
	scratch_load_b32 v4, off, s33 offset:76
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:80
	scratch_load_b32 v4, off, s33 offset:84
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:88
	scratch_load_b32 v4, off, s33 offset:92
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:40
	scratch_load_b32 v6, off, s33 offset:48
	scratch_load_b32 v5, off, s33 offset:56
	scratch_load_b32 v4, off, s33 offset:64
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[0:3], off, s33 offset:112
	scratch_load_b32 v4, off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:72
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b32 v5, off, s33 offset:88
	scratch_load_b32 v4, off, s33 offset:96
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[0:3], off, s33 offset:128
	scratch_load_b32 v4, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v15, 0
	v_readlane_b32 s31, v15, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v15, off, s33 offset:168 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:172 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff40
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end44:
	.size	mul128schoolBook_v3, .Lfunc_end44-mul128schoolBook_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 2148
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 352
; MemoryBound: 0
	.text
	.hidden	mul256round_v3                  ; -- Begin function mul256round_v3
	.globl	mul256round_v3
	.p2align	2
	.type	mul256round_v3,@function
mul256round_v3:                         ; @mul256round_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v21, s33 offset:160 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:164 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xb0
	v_writelane_b32 v21, s30, 0
	v_writelane_b32 v21, s31, 1
	scratch_store_b32 off, v31, s33 offset:152 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr22 : SGPR spill to VGPR lane
	v_writelane_b32 v22, s6, 0
	v_writelane_b32 v22, s7, 1
	scratch_store_b32 off, v4, s33 offset:156 ; 4-byte Folded Spill
	v_mov_b32_e32 v18, v3
	v_mov_b32_e32 v19, v2
	v_mov_b32_e32 v20, v1
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:156 ; 4-byte Folded Reload
	v_writelane_b32 v22, s15, 2
	v_writelane_b32 v22, s14, 3
	v_writelane_b32 v22, s13, 4
	v_writelane_b32 v22, s12, 5
	v_writelane_b32 v22, s10, 6
	v_writelane_b32 v22, s11, 7
	v_writelane_b32 v22, s8, 8
	v_writelane_b32 v22, s9, 9
	v_writelane_b32 v22, s4, 10
	v_writelane_b32 v22, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v19
	v_mov_b32_e32 v7, v18
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[4:7], s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_store_b32 off, v8, s33 offset:32
	scratch_store_b32 off, v9, s33 offset:36
	scratch_store_b32 off, v10, s33 offset:40
	scratch_store_b32 off, v11, s33 offset:44
	scratch_store_b32 off, v12, s33 offset:48
	scratch_store_b32 off, v13, s33 offset:52
	scratch_store_b32 off, v14, s33 offset:56
	scratch_store_b32 off, v15, s33 offset:60
	scratch_store_b32 off, v16, s33 offset:64
	scratch_store_b32 off, v17, s33 offset:68
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v22, s0, 12
	v_writelane_b32 v22, s1, 13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:152 ; 4-byte Folded Reload
	v_readlane_b32 s4, v22, 10
	v_readlane_b32 s5, v22, 11
	v_readlane_b32 s6, v22, 0
	v_readlane_b32 s7, v22, 1
	v_readlane_b32 s8, v22, 8
	v_readlane_b32 s9, v22, 9
	v_readlane_b32 s10, v22, 6
	v_readlane_b32 s11, v22, 7
	v_readlane_b32 s12, v22, 5
	v_readlane_b32 s13, v22, 4
	v_readlane_b32 s14, v22, 3
	v_readlane_b32 s15, v22, 2
	v_readlane_b32 s0, v22, 12
	v_readlane_b32 s1, v22, 13
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v1, off, s33 offset:36
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:36
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b32 v5, off, s33 offset:80
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:40
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:112
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:40
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:84
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:116
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:40
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[0:1], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b32 v5, off, s33 offset:148
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:88
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:120
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:92
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:124
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:96
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:128
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:100
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:104
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:108
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	v_readlane_b32 s30, v21, 0
	v_readlane_b32 s31, v21, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v21, off, s33 offset:160 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:164 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff50
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end45:
	.size	mul256round_v3, .Lfunc_end45-mul256round_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 2360
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 240
; MemoryBound: 0
	.text
	.hidden	mul384round_v3                  ; -- Begin function mul384round_v3
	.globl	mul384round_v3
	.p2align	2
	.type	mul384round_v3,@function
mul384round_v3:                         ; @mul384round_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v29, s33 offset:236 ; 4-byte Folded Spill
	scratch_store_b32 off, v30, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x100
	v_writelane_b32 v29, s30, 0
	v_writelane_b32 v29, s31, 1
	scratch_store_b32 off, v31, s33 offset:216 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr30 : SGPR spill to VGPR lane
	v_writelane_b32 v30, s6, 0
	v_writelane_b32 v30, s7, 1
	scratch_store_b32 off, v11, s33 offset:224 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:228 ; 4-byte Folded Spill
	scratch_store_b32 off, v9, s33 offset:232 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:220 ; 4-byte Folded Spill
	v_mov_b32_e32 v9, v7
	scratch_load_b32 v7, off, s33 offset:232 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v6
	scratch_load_b32 v6, off, s33 offset:228 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v5
	scratch_load_b32 v5, off, s33 offset:224 ; 4-byte Folded Reload
	v_mov_b32_e32 v26, v3
	v_mov_b32_e32 v27, v2
	v_mov_b32_e32 v28, v1
	v_mov_b32_e32 v8, v0
	scratch_load_b32 v0, off, s33 offset:220 ; 4-byte Folded Reload
	v_writelane_b32 v30, s15, 2
	v_writelane_b32 v30, s14, 3
	v_writelane_b32 v30, s13, 4
	v_writelane_b32 v30, s12, 5
	v_writelane_b32 v30, s10, 6
	v_writelane_b32 v30, s11, 7
	v_writelane_b32 v30, s8, 8
	v_writelane_b32 v30, s9, 9
	v_writelane_b32 v30, s4, 10
	v_writelane_b32 v30, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v27
	v_mov_b32_e32 v11, v26
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[8:11], s33
	scratch_store_b128 off, v[4:7], s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_store_b32 off, v12, s33 offset:48
	scratch_store_b32 off, v13, s33 offset:52
	scratch_store_b32 off, v14, s33 offset:56
	scratch_store_b32 off, v15, s33 offset:60
	scratch_store_b32 off, v16, s33 offset:64
	scratch_store_b32 off, v17, s33 offset:68
	scratch_store_b32 off, v18, s33 offset:72
	scratch_store_b32 off, v19, s33 offset:76
	scratch_store_b32 off, v20, s33 offset:80
	scratch_store_b32 off, v21, s33 offset:84
	scratch_store_b32 off, v22, s33 offset:88
	scratch_store_b32 off, v23, s33 offset:92
	scratch_store_b32 off, v24, s33 offset:96
	scratch_store_b32 off, v25, s33 offset:100
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v30, s0, 12
	v_writelane_b32 v30, s1, 13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s4, v30, 10
	v_readlane_b32 s5, v30, 11
	v_readlane_b32 s6, v30, 0
	v_readlane_b32 s7, v30, 1
	v_readlane_b32 s8, v30, 8
	v_readlane_b32 s9, v30, 9
	v_readlane_b32 s10, v30, 6
	v_readlane_b32 s11, v30, 7
	v_readlane_b32 s12, v30, 5
	v_readlane_b32 s13, v30, 4
	v_readlane_b32 s14, v30, 3
	v_readlane_b32 s15, v30, 2
	v_readlane_b32 s0, v30, 12
	v_readlane_b32 s1, v30, 13
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s4, v30, 10
	v_readlane_b32 s5, v30, 11
	v_readlane_b32 s6, v30, 0
	v_readlane_b32 s7, v30, 1
	v_readlane_b32 s8, v30, 8
	v_readlane_b32 s9, v30, 9
	v_readlane_b32 s10, v30, 6
	v_readlane_b32 s11, v30, 7
	v_readlane_b32 s12, v30, 5
	v_readlane_b32 s13, v30, 4
	v_readlane_b32 s14, v30, 3
	v_readlane_b32 s15, v30, 2
	v_readlane_b32 s0, v30, 12
	v_readlane_b32 s1, v30, 13
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v1, off, s33 offset:52
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:52
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b32 v1, off, s33 offset:52
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b32 v5, off, s33 offset:112
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:160
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:116
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:164
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[0:1], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v5, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:120
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:168
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:124
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:172
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:128
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:176
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:180
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:184
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:188
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:144
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:192
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:148
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:196
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:152
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:200
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:156
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:204
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	v_readlane_b32 s30, v29, 0
	v_readlane_b32 s31, v29, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v29, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v30, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff00
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end46:
	.size	mul384round_v3, .Lfunc_end46-mul384round_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 3456
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 320
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z6mul_hiDv2_jS_
	.type	_Z6mul_hiDv2_jS_,@function
_Z6mul_hiDv2_jS_:                       ; @_Z6mul_hiDv2_jS_
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s3, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v6, s33 offset:20 ; 4-byte Folded Spill
	scratch_store_b32 off, v7, s33 offset:24 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 32
	v_writelane_b32 v6, s30, 0
	v_writelane_b32 v6, s31, 1
	scratch_store_b32 off, v31, s33 offset:8 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr7 : SGPR spill to VGPR lane
	v_writelane_b32 v7, s6, 0
	v_writelane_b32 v7, s7, 1
	v_mov_b32_e32 v5, v3
	scratch_store_b32 off, v5, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v2, s33 offset:16 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v1
	scratch_load_b32 v1, off, s33 offset:16 ; 4-byte Folded Reload
	scratch_store_b32 off, v4, s33 offset:4 ; 4-byte Folded Spill
	v_writelane_b32 v7, s15, 2
	v_writelane_b32 v7, s14, 3
	v_writelane_b32 v7, s13, 4
	v_writelane_b32 v7, s12, 5
	v_writelane_b32 v7, s10, 6
	v_writelane_b32 v7, s11, 7
	v_writelane_b32 v7, s8, 8
	v_writelane_b32 v7, s9, 9
	v_writelane_b32 v7, s4, 10
	v_writelane_b32 v7, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v1
                                        ; kill: def $vgpr3 killed $vgpr5 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, v0
                                        ; kill: def $vgpr3 killed $vgpr4 killed $exec
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_mul_hi_u32@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_mul_hi_u32@rel32@hi+12
	v_writelane_b32 v7, s0, 12
	v_writelane_b32 v7, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:12 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:8 ; 4-byte Folded Reload
	v_readlane_b32 s15, v7, 2
	v_readlane_b32 s14, v7, 3
	v_readlane_b32 s13, v7, 4
	v_readlane_b32 s12, v7, 5
	v_readlane_b32 s10, v7, 6
	v_readlane_b32 s11, v7, 7
	v_readlane_b32 s8, v7, 8
	v_readlane_b32 s9, v7, 9
	v_readlane_b32 s6, v7, 0
	v_readlane_b32 s7, v7, 1
	v_readlane_b32 s4, v7, 10
	v_readlane_b32 s5, v7, 11
	v_readlane_b32 s0, v7, 12
	v_readlane_b32 s1, v7, 13
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33           ; 4-byte Folded Reload
	v_readlane_b32 s30, v6, 0
	v_readlane_b32 s31, v6, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v6, off, s33 offset:20 ; 4-byte Folded Reload
	scratch_load_b32 v7, off, s33 offset:24 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffe0
	s_mov_b32 s33, s3
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end47:
	.size	_Z6mul_hiDv2_jS_, .Lfunc_end47-_Z6mul_hiDv2_jS_
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 476
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 32
; MemoryBound: 0
	.text
	.hidden	mul448round_v3                  ; -- Begin function mul448round_v3
	.globl	mul448round_v3
	.p2align	2
	.type	mul448round_v3,@function
mul448round_v3:                         ; @mul448round_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v34, s33 offset:280 ; 4-byte Folded Spill
	scratch_store_b32 off, v35, s33 offset:284 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x130
	v_writelane_b32 v34, s30, 0
	v_writelane_b32 v34, s31, 1
	scratch_store_b32 off, v31, s33 offset:256 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr35 : SGPR spill to VGPR lane
	v_writelane_b32 v35, s6, 0
	v_writelane_b32 v35, s7, 1
	v_mov_b32_e32 v30, v13
	scratch_store_b32 off, v12, s33 offset:260 ; 4-byte Folded Spill
	scratch_store_b32 off, v11, s33 offset:272 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:276 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v8
	scratch_load_b32 v8, off, s33 offset:276 ; 4-byte Folded Reload
	scratch_store_b32 off, v10, s33 offset:268 ; 4-byte Folded Spill
	v_mov_b32_e32 v11, v7
	scratch_load_b32 v7, off, s33 offset:272 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v6
	v_mov_b32_e32 v13, v5
	v_mov_b32_e32 v6, v4
	scratch_store_b32 off, v3, s33 offset:264 ; 4-byte Folded Spill
	v_mov_b32_e32 v32, v2
	scratch_load_b32 v2, off, s33 offset:268 ; 4-byte Folded Reload
	v_mov_b32_e32 v33, v1
	scratch_load_b32 v1, off, s33 offset:264 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v0
	scratch_load_b32 v0, off, s33 offset:260 ; 4-byte Folded Reload
	v_writelane_b32 v35, s15, 2
	v_writelane_b32 v35, s14, 3
	v_writelane_b32 v35, s13, 4
	v_writelane_b32 v35, s12, 5
	v_writelane_b32 v35, s10, 6
	v_writelane_b32 v35, s11, 7
	v_writelane_b32 v35, s8, 8
	v_writelane_b32 v35, s9, 9
	v_writelane_b32 v35, s4, 10
	v_writelane_b32 v35, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v9
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v8
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v7, v13
	v_mov_b32_e32 v8, v12
	v_mov_b32_e32 v9, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v33
	v_mov_b32_e32 v12, v32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v13, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v30
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[10:13], s33
	scratch_store_b128 off, v[6:9], s33 offset:16
	scratch_store_b128 off, v[2:5], s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_store_b32 off, v14, s33 offset:56
	scratch_store_b32 off, v15, s33 offset:60
	scratch_store_b32 off, v16, s33 offset:64
	scratch_store_b32 off, v17, s33 offset:68
	scratch_store_b32 off, v18, s33 offset:72
	scratch_store_b32 off, v19, s33 offset:76
	scratch_store_b32 off, v20, s33 offset:80
	scratch_store_b32 off, v21, s33 offset:84
	scratch_store_b32 off, v22, s33 offset:88
	scratch_store_b32 off, v23, s33 offset:92
	scratch_store_b32 off, v24, s33 offset:96
	scratch_store_b32 off, v25, s33 offset:100
	scratch_store_b32 off, v26, s33 offset:104
	scratch_store_b32 off, v27, s33 offset:108
	scratch_store_b32 off, v28, s33 offset:112
	scratch_store_b32 off, v29, s33 offset:116
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v35, s0, 12
	v_writelane_b32 v35, s1, 13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s0, v35, 12
	v_readlane_b32 s1, v35, 13
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b32 v7, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s0, v35, 12
	v_readlane_b32 s1, v35, 13
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b32 v7, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v3, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v2
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv2_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv2_jS_@rel32@hi+12
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v1, off, s33 offset:60
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:60
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:208
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b32 v1, off, s33 offset:60
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:224
	scratch_load_b64 v[3:4], off, s33 offset:48
	scratch_load_b32 v1, off, s33 offset:60
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v4
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v2, v0, v1
	v_mov_b32_e32 v0, v3
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v5, off, s33 offset:128
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:192
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:196
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[0:1], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v5, off, s33 offset:252
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:200
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:204
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:144
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:208
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:148
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:152
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:216
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:156
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:220
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:160
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:224
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:164
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:228
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:168
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:232
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:172
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:236
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:176
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:240
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:180
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:244
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	v_readlane_b32 s30, v34, 0
	v_readlane_b32 s31, v34, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v34, off, s33 offset:280 ; 4-byte Folded Reload
	scratch_load_b32 v35, off, s33 offset:284 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffed0
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end48:
	.size	mul448round_v3, .Lfunc_end48-mul448round_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 4084
; NumSgprs: 34
; NumVgprs: 36
; ScratchSize: 368
; MemoryBound: 0
	.text
	.hidden	mul256schoolBook_v3             ; -- Begin function mul256schoolBook_v3
	.globl	mul256schoolBook_v3
	.p2align	2
	.type	mul256schoolBook_v3,@function
mul256schoolBook_v3:                    ; @mul256schoolBook_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v26, s33 offset:360 ; 4-byte Folded Spill
	scratch_store_b32 off, v27, s33 offset:364 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x180
	v_writelane_b32 v26, s30, 0
	v_writelane_b32 v26, s31, 1
	scratch_store_b32 off, v31, s33 offset:304 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr27 : SGPR spill to VGPR lane
	v_writelane_b32 v27, s6, 0
	v_writelane_b32 v27, s7, 1
	scratch_store_b32 off, v15, s33 offset:348 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:352 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:356 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:340 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:344 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v7
	scratch_load_b32 v7, off, s33 offset:356 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v6
	scratch_load_b32 v6, off, s33 offset:352 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v5
	scratch_load_b32 v5, off, s33 offset:348 ; 4-byte Folded Reload
	v_mov_b32_e32 v8, v4
	scratch_load_b32 v4, off, s33 offset:344 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v3
	v_mov_b32_e32 v21, v2
	v_mov_b32_e32 v22, v1
	v_mov_b32_e32 v12, v0
	scratch_load_b32 v0, off, s33 offset:340 ; 4-byte Folded Reload
	v_writelane_b32 v27, s15, 2
	v_writelane_b32 v27, s14, 3
	v_writelane_b32 v27, s13, 4
	v_writelane_b32 v27, s12, 5
	v_writelane_b32 v27, s10, 6
	v_writelane_b32 v27, s11, 7
	v_writelane_b32 v27, s8, 8
	v_writelane_b32 v27, s9, 9
	v_writelane_b32 v27, s4, 10
	v_writelane_b32 v27, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v22
	v_mov_b32_e32 v14, v21
	v_mov_b32_e32 v15, v20
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[12:15], s33
	scratch_store_b128 off, v[8:11], s33 offset:16
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_store_b32 off, v16, s33 offset:64
	scratch_store_b32 off, v17, s33 offset:68
	scratch_store_b32 off, v18, s33 offset:72
	scratch_store_b32 off, v19, s33 offset:76
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	s_mov_b32 s0, 0
	v_writelane_b32 v27, s0, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:80
	scratch_load_b32 v0, off, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:88
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:104
	scratch_load_b32 v0, off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:112
	scratch_load_b32 v0, off, s33 offset:20
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:28
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:136
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:60
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hijj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hijj@rel32@hi+12
	v_writelane_b32 v27, s0, 13
	v_writelane_b32 v27, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 13
	v_readlane_b32 s1, v27, 14
	v_readlane_b32 s2, v27, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:60
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 13
	v_readlane_b32 s1, v27, 14
	v_readlane_b32 s2, v27, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:60
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 13
	v_readlane_b32 s1, v27, 14
	v_readlane_b32 s2, v27, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:60
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 13
	v_readlane_b32 s1, v27, 14
	v_readlane_b32 s2, v27, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b32 v0, off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:60
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 13
	v_readlane_b32 s1, v27, 14
	v_readlane_b32 s2, v27, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b32 v0, off, s33 offset:20
	scratch_load_b32 v1, off, s33 offset:60
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 13
	v_readlane_b32 s1, v27, 14
	v_readlane_b32 s2, v27, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:60
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 13
	v_readlane_b32 s1, v27, 14
	v_readlane_b32 s2, v27, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b32 v0, off, s33 offset:28
	scratch_load_b32 v1, off, s33 offset:60
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s0, v27, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[9:12], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v9
	v_mov_b32_e32 v9, v10
	s_add_i32 s0, s33, 0x58
	v_mov_b32_e32 v10, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v11, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v11, s33 offset:336 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x68
	v_mov_b32_e32 v12, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v12, s33 offset:332 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v13, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v13, s33 offset:328 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x78
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v14, s33 offset:324 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v15, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v15, s33 offset:320 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x88
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v16, s33 offset:300 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v17, s33 offset:296 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v21
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul256round_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul256round_v3@rel32@hi+12
	v_writelane_b32 v27, s0, 15
	v_writelane_b32 v27, s1, 16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v16, off, s33 offset:296 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v10, off, s33 offset:336 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:332 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:328 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:324 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s0, v27, 15
	v_readlane_b32 s1, v27, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[22:25], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v23
	v_mov_b32_e32 v9, v24
	s_add_i32 s2, s33, 0x98
	v_mov_b32_e32 v17, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v17, s33 offset:292 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v21
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v16, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:296 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v10, off, s33 offset:332 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:328 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:324 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s0, v27, 15
	v_readlane_b32 s1, v27, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[22:25], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v24
	v_mov_b32_e32 v9, v25
	s_add_i32 s2, s33, 0xa0
	v_mov_b32_e32 v17, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v17, s33 offset:288 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v21
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v16, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:296 ; 4-byte Folded Reload
	scratch_load_b32 v10, off, s33 offset:328 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:324 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:300 ; 4-byte Folded Reload
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s0, v27, 15
	v_readlane_b32 s1, v27, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b32 v8, off, s33 offset:44
	scratch_load_b32 v9, off, s33 offset:48
	s_add_i32 s2, s33, 0xa8
	v_mov_b32_e32 v17, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v17, s33 offset:308 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v21
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v16, off, s33 offset:308 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v10, off, s33 offset:324 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:296 ; 4-byte Folded Reload
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s0, v27, 15
	v_readlane_b32 s1, v27, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[22:25], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v22
	v_mov_b32_e32 v9, v23
	s_add_i32 s2, s33, 0xb0
	v_mov_b32_e32 v17, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v17, s33 offset:312 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v21
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v16, off, s33 offset:312 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:308 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_load_b32 v10, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:296 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:292 ; 4-byte Folded Reload
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s0, v27, 15
	v_readlane_b32 s1, v27, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[22:25], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v23
	v_mov_b32_e32 v9, v24
	s_add_i32 s2, s33, 0xb8
	v_mov_b32_e32 v17, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v17, s33 offset:316 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v21
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v16, off, s33 offset:316 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:312 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:308 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:304 ; 4-byte Folded Reload
	scratch_load_b32 v10, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:296 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:288 ; 4-byte Folded Reload
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s0, v27, 15
	v_readlane_b32 s1, v27, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[22:25], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v24
	v_mov_b32_e32 v9, v25
	s_add_i32 s2, s33, 0xc0
	v_mov_b32_e32 v17, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v18
	v_mov_b32_e32 v5, v19
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v21
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v27, 12
	scratch_load_b64 v[0:1], off, s33 offset:144
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b64 v[0:1], off, s33 offset:152
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b64 v[0:1], off, s33 offset:160
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b64 v[0:1], off, s33 offset:168
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b64 v[0:1], off, s33 offset:176
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:184
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b64 v[0:1], off, s33 offset:184
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b64 v[0:1], off, s33 offset:192
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:200
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b32 v0, off, s33 offset:80
	scratch_load_b32 v6, off, s33 offset:88
	scratch_load_b32 v5, off, s33 offset:96
	scratch_load_b32 v4, off, s33 offset:104
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:224
	scratch_load_b128 v[0:3], off, s33 offset:224
	scratch_load_b32 v4, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:112
	scratch_load_b32 v6, off, s33 offset:120
	scratch_load_b32 v5, off, s33 offset:128
	scratch_load_b32 v4, off, s33 offset:136
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:240
	scratch_load_b128 v[0:3], off, s33 offset:240
	scratch_load_b32 v4, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:144
	scratch_load_b32 v6, off, s33 offset:152
	scratch_load_b32 v5, off, s33 offset:160
	scratch_load_b32 v4, off, s33 offset:168
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:256
	scratch_load_b128 v[0:3], off, s33 offset:256
	scratch_load_b32 v4, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:176
	scratch_load_b32 v6, off, s33 offset:184
	scratch_load_b32 v5, off, s33 offset:192
	scratch_load_b32 v4, off, s33 offset:200
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:272
	scratch_load_b128 v[0:3], off, s33 offset:272
	scratch_load_b32 v4, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v26, 0
	v_readlane_b32 s31, v26, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v26, off, s33 offset:360 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:364 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffe80
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end49:
	.size	mul256schoolBook_v3, .Lfunc_end49-mul256schoolBook_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 5048
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 624
; MemoryBound: 0
	.text
	.hidden	mul384schoolBook_v3             ; -- Begin function mul384schoolBook_v3
	.globl	mul384schoolBook_v3
	.p2align	2
	.type	mul384schoolBook_v3,@function
mul384schoolBook_v3:                    ; @mul384schoolBook_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v36, s33 offset:536 ; 4-byte Folded Spill
	scratch_store_b32 off, v37, s33 offset:540 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x230
	v_writelane_b32 v36, s30, 0
	v_writelane_b32 v36, s31, 1
	scratch_store_b32 off, v31, s33 offset:416 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr37 : SGPR spill to VGPR lane
	v_writelane_b32 v37, s6, 0
	v_writelane_b32 v37, s7, 1
	scratch_store_b32 off, v23, s33 offset:508 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:512 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:516 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:500 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:524 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:528 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:532 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:504 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:520 ; 4-byte Folded Spill
	v_mov_b32_e32 v17, v11
	scratch_load_b32 v11, off, s33 offset:532 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v10
	scratch_load_b32 v10, off, s33 offset:528 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v9
	scratch_load_b32 v9, off, s33 offset:524 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v8
	scratch_load_b32 v8, off, s33 offset:520 ; 4-byte Folded Reload
	v_mov_b32_e32 v21, v7
	scratch_load_b32 v7, off, s33 offset:516 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v6
	scratch_load_b32 v6, off, s33 offset:512 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v5
	scratch_load_b32 v5, off, s33 offset:508 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v4
	scratch_load_b32 v4, off, s33 offset:504 ; 4-byte Folded Reload
	v_mov_b32_e32 v30, v3
	v_mov_b32_e32 v32, v2
	v_mov_b32_e32 v33, v1
	v_mov_b32_e32 v20, v0
	scratch_load_b32 v0, off, s33 offset:500 ; 4-byte Folded Reload
	v_writelane_b32 v37, s15, 2
	v_writelane_b32 v37, s14, 3
	v_writelane_b32 v37, s13, 4
	v_writelane_b32 v37, s12, 5
	v_writelane_b32 v37, s10, 6
	v_writelane_b32 v37, s11, 7
	v_writelane_b32 v37, s8, 8
	v_writelane_b32 v37, s9, 9
	v_writelane_b32 v37, s4, 10
	v_writelane_b32 v37, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v13
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v15
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v19
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v33
	v_mov_b32_e32 v22, v32
	v_mov_b32_e32 v23, v30
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[20:23], s33
	scratch_store_b128 off, v[16:19], s33 offset:16
	scratch_store_b128 off, v[12:15], s33 offset:32
	scratch_store_b128 off, v[8:11], s33 offset:48
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_store_b32 off, v24, s33 offset:96
	scratch_store_b32 off, v25, s33 offset:100
	scratch_store_b32 off, v26, s33 offset:104
	scratch_store_b32 off, v27, s33 offset:108
	scratch_store_b32 off, v28, s33 offset:112
	scratch_store_b32 off, v29, s33 offset:116
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	s_mov_b32 s0, 0
	v_writelane_b32 v37, s0, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_load_b32 v0, off, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:136
	scratch_load_b32 v0, off, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b32 v0, off, s33 offset:20
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b32 v0, off, s33 offset:28
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b32 v0, off, s33 offset:32
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b32 v0, off, s33 offset:36
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b32 v0, off, s33 offset:40
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b32 v0, off, s33 offset:44
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:92
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hijj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hijj@rel32@hi+12
	v_writelane_b32 v37, s0, 13
	v_writelane_b32 v37, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b32 v0, off, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b32 v0, off, s33 offset:8
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v0, off, s33 offset:12
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v0, off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v0, off, s33 offset:20
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b32 v0, off, s33 offset:28
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v0, off, s33 offset:32
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b32 v0, off, s33 offset:36
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b32 v0, off, s33 offset:40
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s2, v37, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b32 v0, off, s33 offset:44
	scratch_load_b32 v1, off, s33 offset:92
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s0, v37, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[13:16], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v13
	v_mov_b32_e32 v13, v14
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x88
	v_mov_b32_e32 v15, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v15, s33 offset:496 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v16, s33 offset:492 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x98
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v17, s33 offset:488 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v18, s33 offset:484 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xa8
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v19, s33 offset:480 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v20, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v20, s33 offset:476 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xb8
	v_mov_b32_e32 v21, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v21, s33 offset:472 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v22, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v22, s33 offset:468 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xc8
	v_mov_b32_e32 v23, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v23, s33 offset:464 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v24, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v24, s33 offset:420 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xd8
	v_mov_b32_e32 v25, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v25, s33 offset:424 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul384round_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul384round_v3@rel32@hi+12
	v_writelane_b32 v37, s0, 15
	v_writelane_b32 v37, s1, 16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:492 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:496 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v33
	v_mov_b32_e32 v13, v34
	s_add_i32 s2, s33, 0xe0
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:428 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:492 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v34
	v_mov_b32_e32 v13, v35
	s_add_i32 s2, s33, 0xe8
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:432 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b32 v12, off, s33 offset:60
	scratch_load_b32 v13, off, s33 offset:64
	s_add_i32 s2, s33, 0xf0
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:436 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_add_i32 s2, s33, 0xf8
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:440 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:440 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v33
	v_mov_b32_e32 v13, v34
	s_add_i32 s2, s33, 0x100
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:444 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:444 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:440 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v34
	v_mov_b32_e32 v13, v35
	s_add_i32 s2, s33, 0x108
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:448 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:448 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:444 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:440 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b32 v12, off, s33 offset:76
	scratch_load_b32 v13, off, s33 offset:80
	s_add_i32 s2, s33, 0x110
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:452 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:452 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:448 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:444 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:440 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_add_i32 s2, s33, 0x118
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:456 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:452 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:448 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:444 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:440 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:464 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v33
	v_mov_b32_e32 v13, v34
	s_add_i32 s2, s33, 0x120
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v25, s33 offset:460 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v24, off, s33 offset:460 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:452 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:448 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:444 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:440 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:428 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:420 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:416 ; 4-byte Folded Reload
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s0, v37, 15
	v_readlane_b32 s1, v37, 16
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[26:29], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v34
	v_mov_b32_e32 v13, v35
	s_add_i32 s2, s33, 0x128
	v_mov_b32_e32 v25, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v26
	v_mov_b32_e32 v9, v27
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v29
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v37, 12
	scratch_load_b64 v[0:1], off, s33 offset:216
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b64 v[0:1], off, s33 offset:224
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b64 v[0:1], off, s33 offset:232
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b64 v[0:1], off, s33 offset:240
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:248
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b64 v[0:1], off, s33 offset:248
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:256
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b64 v[0:1], off, s33 offset:256
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:264
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b64 v[0:1], off, s33 offset:264
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:272
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b64 v[0:1], off, s33 offset:272
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:280
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b64 v[0:1], off, s33 offset:280
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:288
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b64 v[0:1], off, s33 offset:288
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:296
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b64 v[0:1], off, s33 offset:296
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b32 v0, off, s33 offset:120
	scratch_load_b32 v6, off, s33 offset:128
	scratch_load_b32 v5, off, s33 offset:136
	scratch_load_b32 v4, off, s33 offset:144
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:320
	scratch_load_b128 v[0:3], off, s33 offset:320
	scratch_load_b32 v4, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:152
	scratch_load_b32 v6, off, s33 offset:160
	scratch_load_b32 v5, off, s33 offset:168
	scratch_load_b32 v4, off, s33 offset:176
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:336
	scratch_load_b128 v[0:3], off, s33 offset:336
	scratch_load_b32 v4, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:184
	scratch_load_b32 v6, off, s33 offset:192
	scratch_load_b32 v5, off, s33 offset:200
	scratch_load_b32 v4, off, s33 offset:208
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:352
	scratch_load_b128 v[0:3], off, s33 offset:352
	scratch_load_b32 v4, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:216
	scratch_load_b32 v6, off, s33 offset:224
	scratch_load_b32 v5, off, s33 offset:232
	scratch_load_b32 v4, off, s33 offset:240
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:368
	scratch_load_b128 v[0:3], off, s33 offset:368
	scratch_load_b32 v4, off, s33 offset:108
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:248
	scratch_load_b32 v6, off, s33 offset:256
	scratch_load_b32 v5, off, s33 offset:264
	scratch_load_b32 v4, off, s33 offset:272
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:384
	scratch_load_b128 v[0:3], off, s33 offset:384
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:280
	scratch_load_b32 v6, off, s33 offset:288
	scratch_load_b32 v5, off, s33 offset:296
	scratch_load_b32 v4, off, s33 offset:304
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:400
	scratch_load_b128 v[0:3], off, s33 offset:400
	scratch_load_b32 v4, off, s33 offset:116
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v36, 0
	v_readlane_b32 s31, v36, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v36, off, s33 offset:536 ; 4-byte Folded Reload
	scratch_load_b32 v37, off, s33 offset:540 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffdd0
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end50:
	.size	mul384schoolBook_v3, .Lfunc_end50-mul384schoolBook_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 8316
; NumSgprs: 34
; NumVgprs: 38
; ScratchSize: 880
; MemoryBound: 0
	.text
	.hidden	mul448schoolBook_v3             ; -- Begin function mul448schoolBook_v3
	.globl	mul448schoolBook_v3
	.p2align	2
	.type	mul448schoolBook_v3,@function
mul448schoolBook_v3:                    ; @mul448schoolBook_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v38, s33 offset:644 ; 4-byte Folded Spill
	scratch_store_b32 off, v39, s33 offset:648 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x290
	v_writelane_b32 v38, s30, 0
	v_writelane_b32 v38, s31, 1
	scratch_store_b32 off, v31, s33 offset:496 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr39 : SGPR spill to VGPR lane
	v_writelane_b32 v39, s6, 0
	v_writelane_b32 v39, s7, 1
	scratch_store_b32 off, v27, s33 offset:640 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:596 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:612 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:616 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:620 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:604 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:628 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:632 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:636 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:608 ; 4-byte Folded Spill
	v_mov_b32_e32 v18, v16
	v_mov_b32_e32 v19, v15
	scratch_load_b32 v15, off, s33 offset:640 ; 4-byte Folded Reload
	scratch_store_b32 off, v14, s33 offset:624 ; 4-byte Folded Spill
	v_mov_b32_e32 v32, v13
	scratch_load_b32 v13, off, s33 offset:636 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v12
	scratch_load_b32 v12, off, s33 offset:632 ; 4-byte Folded Reload
	v_mov_b32_e32 v21, v11
	scratch_load_b32 v11, off, s33 offset:628 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v10
	scratch_load_b32 v10, off, s33 offset:624 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v9
	scratch_load_b32 v9, off, s33 offset:620 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v8
	scratch_load_b32 v8, off, s33 offset:616 ; 4-byte Folded Reload
	v_mov_b32_e32 v25, v7
	scratch_load_b32 v7, off, s33 offset:612 ; 4-byte Folded Reload
	v_mov_b32_e32 v26, v6
	scratch_load_b32 v6, off, s33 offset:608 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v5
	v_mov_b32_e32 v20, v4
	scratch_store_b32 off, v3, s33 offset:600 ; 4-byte Folded Spill
	v_mov_b32_e32 v33, v2
	scratch_load_b32 v2, off, s33 offset:604 ; 4-byte Folded Reload
	v_mov_b32_e32 v34, v1
	scratch_load_b32 v1, off, s33 offset:600 ; 4-byte Folded Reload
	v_mov_b32_e32 v24, v0
	scratch_load_b32 v0, off, s33 offset:596 ; 4-byte Folded Reload
	v_writelane_b32 v39, s15, 2
	v_writelane_b32 v39, s14, 3
	v_writelane_b32 v39, s13, 4
	v_writelane_b32 v39, s12, 5
	v_writelane_b32 v39, s10, 6
	v_writelane_b32 v39, s11, 7
	v_writelane_b32 v39, s8, 8
	v_writelane_b32 v39, s9, 9
	v_writelane_b32 v39, s4, 10
	v_writelane_b32 v39, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v3, v9
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v4, v8
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v7, v13
	v_mov_b32_e32 v8, v12
	v_mov_b32_e32 v9, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v19
	v_mov_b32_e32 v12, v18
	v_mov_b32_e32 v13, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v27
	v_mov_b32_e32 v22, v26
	v_mov_b32_e32 v23, v25
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr24 killed $vgpr24 def $vgpr24_vgpr25_vgpr26_vgpr27 killed $exec
	v_mov_b32_e32 v25, v34
	v_mov_b32_e32 v26, v33
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v27, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v15
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v32
	scratch_load_b32 v32, off, s33 offset:12
	scratch_load_b32 v32, off, s33 offset:8
	scratch_load_b32 v32, off, s33 offset:4
	scratch_load_b32 v32, off, s33
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[24:27], s33 offset:16
	scratch_store_b128 off, v[20:23], s33 offset:32
	scratch_store_b128 off, v[16:19], s33 offset:48
	scratch_store_b64 off, v[14:15], s33 offset:64
	scratch_store_b128 off, v[10:13], s33 offset:80
	scratch_store_b128 off, v[6:9], s33 offset:96
	scratch_store_b128 off, v[2:5], s33 offset:112
	s_waitcnt vmcnt(4)
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_store_b32 off, v28, s33 offset:136
	scratch_store_b32 off, v29, s33 offset:140
	scratch_store_b32 off, v30, s33 offset:144
	scratch_load_b32 v0, off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	s_mov_b32 s0, 0
	v_writelane_b32 v39, s0, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b32 v0, off, s33 offset:20
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b32 v0, off, s33 offset:28
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b32 v0, off, s33 offset:32
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b32 v0, off, s33 offset:36
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b32 v0, off, s33 offset:40
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b32 v0, off, s33 offset:44
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v0, off, s33 offset:48
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b32 v0, off, s33 offset:52
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b32 v0, off, s33 offset:56
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v0, off, s33 offset:60
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v0, off, s33 offset:64
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v0, off, s33 offset:68
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b32 v0, off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:132
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hijj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hijj@rel32@hi+12
	v_writelane_b32 v39, s0, 13
	v_writelane_b32 v39, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b32 v0, off, s33 offset:20
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b32 v0, off, s33 offset:28
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b32 v0, off, s33 offset:32
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b32 v0, off, s33 offset:36
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b32 v0, off, s33 offset:40
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v0, off, s33 offset:44
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:320
	scratch_load_b32 v0, off, s33 offset:48
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:328
	scratch_load_b32 v0, off, s33 offset:52
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:336
	scratch_load_b32 v0, off, s33 offset:56
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:344
	scratch_load_b32 v0, off, s33 offset:60
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b32 v0, off, s33 offset:64
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 13
	v_readlane_b32 s1, v39, 14
	v_readlane_b32 s2, v39, 12
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b32 v0, off, s33 offset:68
	scratch_load_b32 v1, off, s33 offset:132
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s0, v39, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[15:18], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v15
	v_mov_b32_e32 v15, v16
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xa8
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v17, s33 offset:592 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v18, s33 offset:588 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xb8
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v19, s33 offset:584 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v20, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v20, s33 offset:580 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xc8
	v_mov_b32_e32 v21, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v21, s33 offset:576 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v22, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v22, s33 offset:572 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xd8
	v_mov_b32_e32 v23, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v23, s33 offset:568 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xe0
	v_mov_b32_e32 v24, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v24, s33 offset:564 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xe8
	v_mov_b32_e32 v25, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v25, s33 offset:560 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xf0
	v_mov_b32_e32 v26, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v26, s33 offset:556 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xf8
	v_mov_b32_e32 v27, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v27, s33 offset:552 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x100
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v28, s33 offset:500 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x108
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v29, s33 offset:504 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul448round_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul448round_v3@rel32@hi+12
	v_writelane_b32 v39, s0, 15
	v_writelane_b32 v39, s1, 16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:572 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:576 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:580 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:584 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:588 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:592 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v49
	v_mov_b32_e32 v15, v50
	s_add_i32 s2, s33, 0x110
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:508 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:572 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:576 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:580 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:584 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:588 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v50
	v_mov_b32_e32 v15, v51
	s_add_i32 s2, s33, 0x118
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:512 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:572 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:576 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:580 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:584 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b32 v14, off, s33 offset:92
	scratch_load_b32 v15, off, s33 offset:96
	s_add_i32 s2, s33, 0x120
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:516 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:572 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:576 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:580 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v48
	v_mov_b32_e32 v15, v49
	s_add_i32 s2, s33, 0x128
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:520 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:572 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:576 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v49
	v_mov_b32_e32 v15, v50
	s_add_i32 s2, s33, 0x130
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:524 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:524 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:572 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v50
	v_mov_b32_e32 v15, v51
	s_add_i32 s2, s33, 0x138
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:528 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:524 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:568 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b32 v14, off, s33 offset:108
	scratch_load_b32 v15, off, s33 offset:112
	s_add_i32 s2, s33, 0x140
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:532 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:532 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:524 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:564 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v48
	v_mov_b32_e32 v15, v49
	s_add_i32 s2, s33, 0x148
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:536 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:536 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:532 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:524 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:560 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v49
	v_mov_b32_e32 v15, v50
	s_add_i32 s2, s33, 0x150
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:540 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:540 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:536 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:532 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:524 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:556 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b128 v[48:51], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v50
	v_mov_b32_e32 v15, v51
	s_add_i32 s2, s33, 0x158
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:544 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:544 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:540 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:536 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:532 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:524 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:552 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b32 v14, off, s33 offset:124
	scratch_load_b32 v15, off, s33 offset:128
	s_add_i32 s2, s33, 0x160
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v29, s33 offset:548 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v28, off, s33 offset:548 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:544 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:540 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:536 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:532 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:528 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:524 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:520 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:496 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 10
	v_readlane_b32 s5, v39, 11
	v_readlane_b32 s6, v39, 0
	v_readlane_b32 s7, v39, 1
	v_readlane_b32 s8, v39, 8
	v_readlane_b32 s9, v39, 9
	v_readlane_b32 s10, v39, 6
	v_readlane_b32 s11, v39, 7
	v_readlane_b32 s12, v39, 5
	v_readlane_b32 s13, v39, 4
	v_readlane_b32 s14, v39, 3
	v_readlane_b32 s15, v39, 2
	v_readlane_b32 s0, v39, 15
	v_readlane_b32 s1, v39, 16
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b64 v[0:1], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v0
	v_mov_b32_e32 v15, v1
	s_add_i32 s2, s33, 0x168
	v_mov_b32_e32 v29, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v39, 12
	scratch_load_b64 v[0:1], off, s33 offset:264
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:272
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b64 v[0:1], off, s33 offset:272
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:280
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b64 v[0:1], off, s33 offset:280
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:288
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b64 v[0:1], off, s33 offset:288
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:296
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b64 v[0:1], off, s33 offset:296
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b64 v[0:1], off, s33 offset:304
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:312
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b64 v[0:1], off, s33 offset:312
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:320
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:320
	scratch_load_b64 v[0:1], off, s33 offset:320
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:328
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:328
	scratch_load_b64 v[0:1], off, s33 offset:328
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:336
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:336
	scratch_load_b64 v[0:1], off, s33 offset:336
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:344
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:344
	scratch_load_b64 v[0:1], off, s33 offset:344
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b64 v[0:1], off, s33 offset:352
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:360
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b64 v[0:1], off, s33 offset:360
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:380
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:368
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b32 v0, off, s33 offset:152
	scratch_load_b32 v6, off, s33 offset:160
	scratch_load_b32 v5, off, s33 offset:168
	scratch_load_b32 v4, off, s33 offset:176
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:384
	scratch_load_b128 v[0:3], off, s33 offset:384
	scratch_load_b32 v4, off, s33 offset:136
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:184
	scratch_load_b32 v6, off, s33 offset:192
	scratch_load_b32 v5, off, s33 offset:200
	scratch_load_b32 v4, off, s33 offset:208
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:400
	scratch_load_b128 v[0:3], off, s33 offset:400
	scratch_load_b32 v4, off, s33 offset:140
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:216
	scratch_load_b32 v6, off, s33 offset:224
	scratch_load_b32 v5, off, s33 offset:232
	scratch_load_b32 v4, off, s33 offset:240
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:416
	scratch_load_b128 v[0:3], off, s33 offset:416
	scratch_load_b32 v4, off, s33 offset:144
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:248
	scratch_load_b32 v6, off, s33 offset:256
	scratch_load_b32 v5, off, s33 offset:264
	scratch_load_b32 v4, off, s33 offset:272
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:432
	scratch_load_b128 v[0:3], off, s33 offset:432
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:280
	scratch_load_b32 v6, off, s33 offset:288
	scratch_load_b32 v5, off, s33 offset:296
	scratch_load_b32 v4, off, s33 offset:304
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:448
	scratch_load_b128 v[0:3], off, s33 offset:448
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:312
	scratch_load_b32 v6, off, s33 offset:320
	scratch_load_b32 v5, off, s33 offset:328
	scratch_load_b32 v4, off, s33 offset:336
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:464
	scratch_load_b128 v[0:3], off, s33 offset:464
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:344
	scratch_load_b32 v6, off, s33 offset:352
	scratch_load_b32 v5, off, s33 offset:360
	scratch_load_b32 v4, off, s33 offset:368
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:480
	scratch_load_b128 v[0:3], off, s33 offset:480
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v38, 0
	v_readlane_b32 s31, v38, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v38, off, s33 offset:644 ; 4-byte Folded Reload
	scratch_load_b32 v39, off, s33 offset:648 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffd70
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end51:
	.size	mul448schoolBook_v3, .Lfunc_end51-mul448schoolBook_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 10208
; NumSgprs: 34
; NumVgprs: 52
; ScratchSize: 1024
; MemoryBound: 0
	.text
	.hidden	mul512schoolBook_v3             ; -- Begin function mul512schoolBook_v3
	.globl	mul512schoolBook_v3
	.p2align	2
	.type	mul512schoolBook_v3,@function
mul512schoolBook_v3:                    ; @mul512schoolBook_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 0xf0
	scratch_store_b32 off, v30, s33 offset:184 ; 4-byte Folded Spill
	scratch_store_b32 off, v29, s33 offset:188 ; 4-byte Folded Spill
	scratch_store_b32 off, v28, s33 offset:176 ; 4-byte Folded Spill
	scratch_store_b32 off, v27, s33 offset:196 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:200 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:204 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:180 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:212 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:216 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:220 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:192 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:208 ; 4-byte Folded Spill
	v_mov_b32_e32 v21, v15
	scratch_load_b32 v15, off, s33 offset:220 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v14
	scratch_load_b32 v14, off, s33 offset:216 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v13
	scratch_load_b32 v13, off, s33 offset:212 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v12
	scratch_load_b32 v12, off, s33 offset:208 ; 4-byte Folded Reload
	v_mov_b32_e32 v25, v11
	scratch_load_b32 v11, off, s33 offset:204 ; 4-byte Folded Reload
	v_mov_b32_e32 v26, v10
	scratch_load_b32 v10, off, s33 offset:200 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v9
	scratch_load_b32 v9, off, s33 offset:196 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v8
	scratch_load_b32 v8, off, s33 offset:192 ; 4-byte Folded Reload
	v_mov_b32_e32 v29, v7
	scratch_load_b32 v7, off, s33 offset:188 ; 4-byte Folded Reload
	v_mov_b32_e32 v30, v6
	scratch_load_b32 v6, off, s33 offset:184 ; 4-byte Folded Reload
	v_mov_b32_e32 v31, v5
	v_mov_b32_e32 v24, v4
	scratch_load_b32 v4, off, s33 offset:180 ; 4-byte Folded Reload
	v_mov_b32_e32 v32, v3
	v_mov_b32_e32 v33, v2
	v_mov_b32_e32 v34, v1
	v_mov_b32_e32 v28, v0
	scratch_load_b32 v0, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v5, off, s33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v17
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v19
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v27
	v_mov_b32_e32 v22, v26
	v_mov_b32_e32 v23, v25
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr24 killed $vgpr24 def $vgpr24_vgpr25_vgpr26_vgpr27 killed $exec
	v_mov_b32_e32 v25, v31
	v_mov_b32_e32 v26, v30
	v_mov_b32_e32 v27, v29
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr28 killed $vgpr28 def $vgpr28_vgpr29_vgpr30_vgpr31 killed $exec
	v_mov_b32_e32 v29, v34
	v_mov_b32_e32 v30, v33
	v_mov_b32_e32 v31, v32
	scratch_load_b32 v32, off, s33 offset:32
	scratch_load_b32 v32, off, s33 offset:28
	scratch_load_b32 v32, off, s33 offset:24
	scratch_load_b32 v32, off, s33 offset:20
	scratch_load_b32 v32, off, s33 offset:16
	scratch_load_b32 v32, off, s33 offset:12
	scratch_load_b32 v32, off, s33 offset:8
	scratch_load_b32 v32, off, s33 offset:4
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[28:31], s33 offset:48
	scratch_store_b128 off, v[24:27], s33 offset:64
	scratch_store_b128 off, v[20:23], s33 offset:80
	scratch_store_b128 off, v[16:19], s33 offset:96
	scratch_store_b128 off, v[12:15], s33 offset:112
	scratch_store_b128 off, v[8:11], s33 offset:128
	scratch_store_b128 off, v[4:7], s33 offset:144
	scratch_store_b128 off, v[0:3], s33 offset:160
	s_add_i32 s32, s32, 0xffffff10
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end52:
	.size	mul512schoolBook_v3, .Lfunc_end52-mul512schoolBook_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 540
; NumSgprs: 34
; NumVgprs: 35
; ScratchSize: 240
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __ockl_get_global_size
	.type	__ockl_get_global_size,@function
__ockl_get_global_size:                 ; @__ockl_get_global_size
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s10, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v2, s33 offset:56 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 64
	scratch_store_b32 off, v0, s33 offset:4 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr2 : SGPR spill to VGPR lane
	v_writelane_b32 v2, s8, 0
	v_writelane_b32 v2, s9, 1
	v_writelane_b32 v2, s4, 2
	v_writelane_b32 v2, s5, 3
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
; %bb.1:                                ; %NodeBlock3
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:8 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v2, s1, 4
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB53_4
; %bb.2:                                ; %NodeBlock
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v2, s1, 5
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB53_10
; %bb.3:                                ; %LeafBlock1
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, 1
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v2, s0, 6
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB53_20
	s_branch .LBB53_15
.LBB53_4:                               ; %Flow14
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 4
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v2, s0, 7
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB53_25
; %bb.5:                                ; %LeafBlock
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	scratch_load_b32 v0, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, 1
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:24 ; 4-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v2, s0, 8
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB53_24
; %bb.6:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s1, s1, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s2, s[0:1], 0x0
	s_mov_b32 s0, -1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s3, 0x1f3
	s_waitcnt lgkmcnt(0)
	s_cmp_gt_i32 s2, s3
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_writelane_b32 v2, s0, 9
	s_mov_b32 s7, exec_lo
	s_mov_b32 exec_lo, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_cbranch_scc1 .LBB53_9
.LBB53_7:                               ; %Flow11
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 9
	scratch_load_b32 v0, off, s33 offset:28 ; 4-byte Folded Reload
	v_cndmask_b32_e64 v1, 0, 1, s0
	s_mov_b32 s0, 1
                                        ; implicit-def: $sgpr1
	v_cmp_ne_u32_e64 s0, v1, s0
	s_and_b32 vcc_lo, exec_lo, s0
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:32 ; 4-byte Folded Spill
	s_cbranch_vccnz .LBB53_23
; %bb.8:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 2
	v_readlane_b32 s1, v2, 3
	s_load_b32 s0, s[0:1], 0xc
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:32 ; 4-byte Folded Spill
	s_branch .LBB53_23
.LBB53_9:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 0
	v_readlane_b32 s1, v2, 1
	v_mov_b32_e32 v1, 0
	s_load_b32 s2, s[0:1], 0x0
	global_load_u16 v0, v1, s[0:1] offset:12
                                        ; implicit-def: $sgpr3
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_mul_lo_u32 v0, s2, v0
	global_load_u16 v1, v1, s[0:1] offset:18
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	v_writelane_b32 v2, s0, 9
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_branch .LBB53_7
.LBB53_10:                              ; %Flow9
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 5
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:36 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v2, s0, 10
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB53_22
; %bb.11:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s1, s1, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s2, s[0:1], 0x0
	s_mov_b32 s0, -1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s3, 0x1f3
	s_waitcnt lgkmcnt(0)
	s_cmp_gt_i32 s2, s3
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:40 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_writelane_b32 v2, s0, 11
	s_mov_b32 s7, exec_lo
	s_mov_b32 exec_lo, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_cbranch_scc1 .LBB53_14
.LBB53_12:                              ; %Flow7
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 11
	scratch_load_b32 v0, off, s33 offset:40 ; 4-byte Folded Reload
	v_cndmask_b32_e64 v1, 0, 1, s0
	s_mov_b32 s0, 1
                                        ; implicit-def: $sgpr1
	v_cmp_ne_u32_e64 s0, v1, s0
	s_and_b32 vcc_lo, exec_lo, s0
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:44 ; 4-byte Folded Spill
	s_cbranch_vccnz .LBB53_21
; %bb.13:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 2
	v_readlane_b32 s1, v2, 3
	s_load_b32 s0, s[0:1], 0x10
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:44 ; 4-byte Folded Spill
	s_branch .LBB53_21
.LBB53_14:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 0
	v_readlane_b32 s1, v2, 1
	v_mov_b32_e32 v1, 0
	s_load_b32 s2, s[0:1], 0x4
	global_load_u16 v0, v1, s[0:1] offset:14
                                        ; implicit-def: $sgpr3
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_mul_lo_u32 v0, s2, v0
	global_load_u16 v1, v1, s[0:1] offset:20
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	scratch_store_b32 off, v0, s33 offset:40 ; 4-byte Folded Spill
	v_writelane_b32 v2, s0, 11
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_branch .LBB53_12
.LBB53_15:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s1, s1, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s2, s[0:1], 0x0
	s_mov_b32 s0, -1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s3, 0x1f3
	s_waitcnt lgkmcnt(0)
	s_cmp_gt_i32 s2, s3
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:48 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_writelane_b32 v2, s0, 12
	s_mov_b32 s7, exec_lo
	s_mov_b32 exec_lo, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_cbranch_scc1 .LBB53_18
.LBB53_16:                              ; %Flow
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 12
	scratch_load_b32 v0, off, s33 offset:48 ; 4-byte Folded Reload
	v_cndmask_b32_e64 v1, 0, 1, s0
	s_mov_b32 s0, 1
                                        ; implicit-def: $sgpr1
	v_cmp_ne_u32_e64 s0, v1, s0
	s_and_b32 vcc_lo, exec_lo, s0
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:52 ; 4-byte Folded Spill
	s_cbranch_vccnz .LBB53_19
; %bb.17:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 2
	v_readlane_b32 s1, v2, 3
	s_load_b32 s0, s[0:1], 0x14
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:52 ; 4-byte Folded Spill
	s_branch .LBB53_19
.LBB53_18:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 0
	v_readlane_b32 s1, v2, 1
	v_mov_b32_e32 v1, 0
	s_load_b32 s2, s[0:1], 0x8
	global_load_u16 v0, v1, s[0:1] offset:16
                                        ; implicit-def: $sgpr3
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_mul_lo_u32 v0, s2, v0
	global_load_u16 v1, v1, s[0:1] offset:22
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	scratch_store_b32 off, v0, s33 offset:48 ; 4-byte Folded Spill
	v_writelane_b32 v2, s0, 12
	s_or_saveexec_b32 s7, -1
	scratch_store_b32 off, v2, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s7
	s_branch .LBB53_16
.LBB53_19:                              ; %Flow5
	scratch_load_b32 v0, off, s33 offset:52 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
.LBB53_20:                              ; %Flow6
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 6
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:16 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_branch .LBB53_10
.LBB53_21:                              ; %Flow8
	scratch_load_b32 v0, off, s33 offset:44 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:36 ; 4-byte Folded Spill
.LBB53_22:                              ; %Flow10
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 10
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:36 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:8 ; 4-byte Folded Spill
	s_branch .LBB53_4
.LBB53_23:                              ; %Flow12
	scratch_load_b32 v0, off, s33 offset:32 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:24 ; 4-byte Folded Spill
.LBB53_24:                              ; %Flow13
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 8
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:24 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:20 ; 4-byte Folded Spill
.LBB53_25:
	s_or_saveexec_b32 s7, -1
	scratch_load_b32 v2, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s7
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 7
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:20 ; 4-byte Folded Reload
	v_mov_b32_e32 v1, 0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v2, off, s33 offset:56 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffc0
	s_mov_b32 s33, s10
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end53:
	.size	__ockl_get_global_size, .Lfunc_end53-__ockl_get_global_size
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 2096
; NumSgprs: 36
; NumVgprs: 3
; ScratchSize: 64
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z15get_global_sizej
	.type	_Z15get_global_sizej,@function
_Z15get_global_sizej:                   ; @_Z15get_global_sizej
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s16, s33
	s_mov_b32 s33, s32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_get_global_size@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_get_global_size@rel32@hi+12
	s_mov_b32 s33, s16
	s_setpc_b64 s[0:1]
.Lfunc_end54:
	.size	_Z15get_global_sizej, .Lfunc_end54-_Z15get_global_sizej
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 36
; NumVgprs: 32
; ScratchSize: 64
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function __ockl_get_global_id
	.type	__ockl_get_global_id,@function
__ockl_get_global_id:                   ; @__ockl_get_global_id
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s17, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v6, s33 offset:92 ; 4-byte Folded Spill
	scratch_store_b32 off, v7, s33 offset:96 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x68
	scratch_store_b32 off, v31, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s33 offset:8 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr7 : SGPR spill to VGPR lane
	v_writelane_b32 v7, s14, 0
	v_writelane_b32 v7, s13, 1
	v_writelane_b32 v7, s12, 2
	v_writelane_b32 v7, s8, 3
	v_writelane_b32 v7, s9, 4
	v_writelane_b32 v7, s4, 5
	v_writelane_b32 v7, s5, 6
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
; %bb.1:                                ; %NodeBlock3
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr2_sgpr3
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v2, s4
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	v_writelane_b32 v7, s1, 7
	scratch_store_b32 off, v2, s33 offset:24 ; 4-byte Folded Spill
	scratch_store_b64 off, v[0:1], s33 offset:16 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr2_sgpr3
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v7, s1, 8
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB55_3
; %bb.2:                                ; %NodeBlock
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_i32_e64 s0, v0, s0
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s2
	v_writelane_b32 v7, s1, 9
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr2_sgpr3
                                        ; implicit-def: $sgpr2_sgpr3
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v7, s1, 10
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
                                        ; implicit-def: $vgpr7 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB55_11
	s_branch .LBB55_4
.LBB55_3:                               ; %Flow
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 8
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s2, v7, 11
	v_readlane_b32 s3, v7, 12
	v_readlane_b32 s1, v7, 7
	scratch_load_b32 v4, off, s33 offset:24 ; 4-byte Folded Reload
	scratch_load_b64 v[2:3], off, s33 offset:16 ; 8-byte Folded Reload
	v_writelane_b32 v7, s1, 13
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	v_writelane_b32 v7, s1, 14
	s_waitcnt vmcnt(1)
	scratch_store_b32 off, v4, s33 offset:48 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[2:3], s33 offset:40 ; 8-byte Folded Spill
	scratch_store_b64 off, v[0:1], s33 offset:32 ; 8-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v7, s0, 15
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB55_7
	s_branch .LBB55_6
.LBB55_4:                               ; %LeafBlock1
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s2
	v_writelane_b32 v7, s0, 16
	scratch_store_b32 off, v0, s33 offset:52 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr2_sgpr3
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v7, s0, 17
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB55_9
	s_branch .LBB55_12
.LBB55_5:                               ; %Flow7
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s3, v7, 18
	s_or_b32 exec_lo, exec_lo, s3
	v_readlane_b32 s0, v7, 19
	v_readlane_b32 s1, v7, 20
	v_readlane_b32 s2, v7, 21
	scratch_load_b32 v2, off, s33 offset:56 ; 4-byte Folded Reload
	scratch_load_b64 v[0:1], off, s33 offset:60 ; 8-byte Folded Reload
	s_and_b32 s2, s2, exec_lo
	v_writelane_b32 v7, s2, 7
	s_waitcnt vmcnt(1)
	scratch_store_b32 off, v2, s33 offset:24 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:16 ; 8-byte Folded Spill
	v_writelane_b32 v7, s0, 11
	v_writelane_b32 v7, s1, 12
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_branch .LBB55_3
.LBB55_6:                               ; %LeafBlock
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 13
	scratch_load_b32 v0, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s1
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s2
	v_writelane_b32 v7, s0, 22
	scratch_store_b32 off, v0, s33 offset:68 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr2_sgpr3
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v7, s0, 23
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB55_13
	s_branch .LBB55_8
.LBB55_7:                               ; %Flow8
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 15
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v7, 14
	scratch_load_b32 v2, off, s33 offset:48 ; 4-byte Folded Reload
	scratch_load_b64 v[3:4], off, s33 offset:40 ; 8-byte Folded Reload
	scratch_load_b64 v[0:1], off, s33 offset:32 ; 8-byte Folded Reload
	s_waitcnt vmcnt(1)
	scratch_store_b64 off, v[3:4], s33 offset:84 ; 8-byte Folded Spill
	scratch_store_b32 off, v2, s33 offset:80 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:72 ; 8-byte Folded Spill
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v7, s0, 24
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB55_15
	s_branch .LBB55_14
.LBB55_8:
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v7, 13
	v_readlane_b32 s4, v7, 3
	v_readlane_b32 s5, v7, 4
	v_readlane_b32 s0, v7, 2
	v_readlane_b32 s8, v7, 5
	v_readlane_b32 s9, v7, 6
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_getpc_b64 s[6:7]
	s_add_u32 s6, s6, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s7, s7, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s1, s[6:7], 0x0
	s_mov_b64 s[10:11], 4
	s_mov_b32 s7, s8
	s_mov_b32 s3, s9
	s_mov_b32 s8, s10
	s_mov_b32 s6, s11
	s_add_u32 s8, s7, s8
	s_addc_u32 s3, s3, s6
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s3
	s_mov_b64 s[12:13], 12
	s_mov_b32 s6, s4
	s_mov_b32 s3, s5
	s_mov_b32 s10, s12
	s_mov_b32 s7, s13
	s_add_u32 s6, s6, s10
	s_addc_u32 s3, s3, s7
                                        ; kill: def $sgpr6 killed $sgpr6 def $sgpr6_sgpr7
	s_mov_b32 s7, s3
	s_mov_b32 s3, 0x1f4
	s_waitcnt lgkmcnt(0)
	s_cmp_lt_i32 s1, s3
	s_mov_b32 s3, s7
	s_mov_b32 s1, s9
	s_cselect_b32 s1, s1, s3
                                        ; kill: def $sgpr6 killed $sgpr6 killed $sgpr6_sgpr7
	s_mov_b32 s3, s8
	s_cselect_b32 s6, s3, s6
                                        ; kill: def $sgpr6 killed $sgpr6 def $sgpr6_sgpr7
	s_mov_b32 s7, s1
	v_mov_b32_e32 v1, 0
	global_load_u16 v2, v1, s[6:7]
	s_mov_b32 s1, 0x3ff
	s_waitcnt vmcnt(1)
	v_and_b32_e64 v3, v0, s1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s0, s0, v2, v[3:4]
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s1, 40
	s_mov_b32 s0, 0
	s_cselect_b32 s6, s0, s1
	s_mov_b32 s0, 0
                                        ; kill: def $sgpr6 killed $sgpr6 def $sgpr6_sgpr7
	s_mov_b32 s7, s0
	s_mov_b32 s0, s4
	s_mov_b32 s1, s5
	s_mov_b32 s4, s6
	s_mov_b32 s3, s7
	s_add_u32 s0, s0, s4
	s_addc_u32 s3, s1, s3
                                        ; kill: def $sgpr0 killed $sgpr0 def $sgpr0_sgpr1
	s_mov_b32 s1, s3
	s_mov_b32 s3, -1
	s_or_b32 s2, s2, exec_lo
	v_writelane_b32 v7, s2, 22
	scratch_store_b32 off, v0, s33 offset:68 ; 4-byte Folded Spill
	v_writelane_b32 v7, s0, 25
	v_writelane_b32 v7, s1, 26
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_branch .LBB55_13
.LBB55_9:                               ; %Flow6
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v6, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v6, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s4, v6, 16
	v_readlane_b32 s2, v6, 27
	v_readlane_b32 s3, v6, 28
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	scratch_load_b32 v0, off, s33 offset:52 ; 4-byte Folded Reload
	s_mov_b64 s[0:1], 0
	s_and_b32 s4, s4, exec_lo
	v_writelane_b32 v6, s4, 9
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:28 ; 4-byte Folded Spill
	v_writelane_b32 v6, s2, 29
	v_writelane_b32 v6, s3, 30
	v_writelane_b32 v6, s0, 31
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v6, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	v_writelane_b32 v7, s1, 0
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_branch .LBB55_11
.LBB55_10:
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v6, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(1)
	v_readlane_b32 s0, v6, 1
	s_waitcnt vmcnt(0)
	v_readlane_b32 s4, v7, 3
	v_readlane_b32 s5, v7, 4
	v_readlane_b32 s1, v7, 1
	v_readlane_b32 s2, v7, 5
	v_readlane_b32 s3, v7, 6
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_getpc_b64 s[6:7]
	s_add_u32 s6, s6, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s7, s7, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s6, s[6:7], 0x0
	s_mov_b64 s[10:11], 6
	s_mov_b32 s7, s2
	s_mov_b32 s2, s3
	s_mov_b32 s8, s10
	s_mov_b32 s3, s11
	s_add_u32 s8, s7, s8
	s_addc_u32 s2, s2, s3
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s2
	s_mov_b64 s[12:13], 14
	s_mov_b32 s2, s4
	s_mov_b32 s3, s5
	s_mov_b32 s10, s12
	s_mov_b32 s7, s13
	s_add_u32 s2, s2, s10
	s_addc_u32 s7, s3, s7
                                        ; kill: def $sgpr2 killed $sgpr2 def $sgpr2_sgpr3
	s_mov_b32 s3, s7
	s_mov_b32 s7, 0x1f4
	s_waitcnt lgkmcnt(0)
	s_cmp_lt_i32 s6, s7
	s_mov_b32 s7, s3
	s_mov_b32 s6, s9
	s_cselect_b32 s6, s6, s7
	s_mov_b32 s3, s2
	s_mov_b32 s2, s8
	s_cselect_b32 s2, s2, s3
                                        ; kill: def $sgpr2 killed $sgpr2 def $sgpr2_sgpr3
	s_mov_b32 s3, s6
	v_mov_b32_e32 v1, 0
	global_load_u16 v2, v1, s[2:3]
	s_waitcnt vmcnt(1)
	v_bfe_u32 v3, v0, 10, 10
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s1, s1, v2, v[3:4]
	v_mov_b32_e32 v2, v0
	s_mov_b32 s2, 48
	s_mov_b32 s1, 8
	s_cselect_b32 s6, s1, s2
	s_mov_b32 s1, 0
                                        ; kill: def $sgpr6 killed $sgpr6 def $sgpr6_sgpr7
	s_mov_b32 s7, s1
	s_mov_b32 s2, s4
	s_mov_b32 s1, s5
	s_mov_b32 s4, s6
	s_mov_b32 s3, s7
	s_add_u32 s2, s2, s4
	s_addc_u32 s1, s1, s3
                                        ; kill: def $sgpr2 killed $sgpr2 def $sgpr2_sgpr3
	s_mov_b32 s3, s1
	s_mov_b32 s1, -1
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v7, s0, 21
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	scratch_store_b32 off, v2, s33 offset:56 ; 4-byte Folded Spill
	scratch_store_b64 off, v[0:1], s33 offset:60 ; 8-byte Folded Spill
	s_branch .LBB55_5
.LBB55_11:                              ; %Flow5
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v6, off, s33 offset:4  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 10
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v7, 9
	v_readlane_b32 s2, v7, 29
	v_readlane_b32 s3, v7, 30
	v_readlane_b32 s4, v7, 31
	v_readlane_b32 s5, v6, 0
	v_writelane_b32 v7, s4, 19
	v_writelane_b32 v7, s5, 20
	scratch_load_b32 v2, off, s33 offset:28 ; 4-byte Folded Reload
	v_writelane_b32 v6, s1, 1
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v6, s33 offset:4 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	v_writelane_b32 v7, s1, 21
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v2, s33 offset:56 ; 4-byte Folded Spill
	scratch_store_b64 off, v[0:1], s33 offset:60 ; 8-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v7, s0, 18
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB55_5
	s_branch .LBB55_10
.LBB55_12:
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v7, 3
	v_readlane_b32 s3, v7, 4
	v_readlane_b32 s0, v7, 0
	v_readlane_b32 s4, v7, 5
	v_readlane_b32 s5, v7, 6
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_getpc_b64 s[6:7]
	s_add_u32 s6, s6, __oclc_ABI_version@rel32@lo+4
	s_addc_u32 s7, s7, __oclc_ABI_version@rel32@hi+12
	s_load_b32 s1, s[6:7], 0x0
	s_mov_b64 s[8:9], 8
	s_mov_b32 s6, s4
	s_mov_b32 s4, s5
	s_mov_b32 s7, s8
	s_mov_b32 s5, s9
	s_add_u32 s6, s6, s7
	s_addc_u32 s4, s4, s5
                                        ; kill: def $sgpr6 killed $sgpr6 def $sgpr6_sgpr7
	s_mov_b32 s7, s4
	s_mov_b64 s[10:11], 16
	s_mov_b32 s4, s2
	s_mov_b32 s5, s3
	s_mov_b32 s9, s10
	s_mov_b32 s8, s11
	s_add_u32 s4, s4, s9
	s_addc_u32 s8, s5, s8
                                        ; kill: def $sgpr4 killed $sgpr4 def $sgpr4_sgpr5
	s_mov_b32 s5, s8
	s_mov_b32 s8, 0x1f4
	s_waitcnt lgkmcnt(0)
	s_cmp_lt_i32 s1, s8
	s_mov_b32 s8, s5
	s_mov_b32 s1, s7
	s_cselect_b32 s1, s1, s8
	s_mov_b32 s5, s4
	s_mov_b32 s4, s6
	s_cselect_b32 s4, s4, s5
                                        ; kill: def $sgpr4 killed $sgpr4 def $sgpr4_sgpr5
	s_mov_b32 s5, s1
	v_mov_b32_e32 v1, 0
	global_load_u16 v2, v1, s[4:5]
	s_waitcnt vmcnt(1)
	v_bfe_u32 v3, v0, 20, 10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s0, s0, v2, v[3:4]
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s1, 56
	s_mov_b32 s0, 16
	s_cselect_b32 s4, s0, s1
	s_mov_b32 s0, 0
                                        ; kill: def $sgpr4 killed $sgpr4 def $sgpr4_sgpr5
	s_mov_b32 s5, s0
	s_mov_b32 s0, s2
	s_mov_b32 s1, s3
	s_mov_b32 s3, s4
	s_mov_b32 s2, s5
	s_add_u32 s0, s0, s3
	s_addc_u32 s2, s1, s2
                                        ; kill: def $sgpr0 killed $sgpr0 def $sgpr0_sgpr1
	s_mov_b32 s1, s2
	s_mov_b32 s2, -1
	s_mov_b32 s2, exec_lo
	v_writelane_b32 v7, s2, 16
	scratch_store_b32 off, v0, s33 offset:52 ; 4-byte Folded Spill
	v_writelane_b32 v7, s0, 27
	v_writelane_b32 v7, s1, 28
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_branch .LBB55_9
.LBB55_13:                              ; %Flow9
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s4, v7, 23
	s_or_b32 exec_lo, exec_lo, s4
	v_readlane_b32 s0, v7, 13
	v_readlane_b32 s1, v7, 22
	v_readlane_b32 s2, v7, 25
	v_readlane_b32 s3, v7, 26
	scratch_load_b32 v4, off, s33 offset:68 ; 4-byte Folded Reload
	s_mov_b64 s[4:5], 0
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v1, 0
	s_and_not1_b32 s0, s0, exec_lo
	s_and_b32 s1, s1, exec_lo
	s_or_b32 s0, s0, s1
	v_writelane_b32 v7, s0, 14
	s_or_saveexec_b32 s16, -1
	scratch_store_b32 off, v7, s33          ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v4, s33 offset:48 ; 4-byte Folded Spill
	scratch_store_b64 off, v[2:3], s33 offset:40 ; 8-byte Folded Spill
	scratch_store_b64 off, v[0:1], s33 offset:32 ; 8-byte Folded Spill
	s_branch .LBB55_7
.LBB55_14:
	scratch_load_b64 v[0:1], off, s33 offset:84 ; 8-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:80 ; 4-byte Folded Reload
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, 0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v2
	s_waitcnt vmcnt(1)
	global_load_b64 v[1:2], v[0:1], off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72 ; 8-byte Folded Spill
.LBB55_15:
	s_or_saveexec_b32 s16, -1
	scratch_load_b32 v7, off, s33           ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s16
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v7, 24
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b64 v[2:3], off, s33 offset:72 ; 8-byte Folded Reload
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[0:1], s0, v[2:3]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v2
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v6, off, s33 offset:92 ; 4-byte Folded Reload
	scratch_load_b32 v7, off, s33 offset:96 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff98
	s_mov_b32 s33, s17
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end55:
	.size	__ockl_get_global_id, .Lfunc_end55-__ockl_get_global_id
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 2900
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 104
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z13get_global_idj
	.type	_Z13get_global_idj,@function
_Z13get_global_idj:                     ; @_Z13get_global_idj
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, __ockl_get_global_id@rel32@lo+4
	s_addc_u32 s1, s1, __ockl_get_global_id@rel32@hi+12
	s_mov_b32 s33, s18
	s_setpc_b64 s[0:1]
.Lfunc_end56:
	.size	_Z13get_global_idj, .Lfunc_end56-_Z13get_global_idj
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 40
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 104
; MemoryBound: 0
	.text
	.protected	multiplyBenchmark128    ; -- Begin function multiplyBenchmark128
	.globl	multiplyBenchmark128
	.p2align	8
	.type	multiplyBenchmark128,@function
multiplyBenchmark128:                   ; @multiplyBenchmark128
; %bb.0:
	s_mov_b32 s32, 0xa0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr17 : SGPR spill to VGPR lane
	v_writelane_b32 v17, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v17, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v17, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v17, s10, 3
	v_writelane_b32 v17, s11, 4
	v_writelane_b32 v17, s2, 5
	v_writelane_b32 v17, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v17, 5
	v_readlane_b32 s1, v17, 6
	v_writelane_b32 v17, s4, 7
	v_writelane_b32 v17, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:152 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v17, s8, 9
	v_writelane_b32 v17, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v17, s2, 11
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:152 ; 4-byte Folded Reload
	v_readlane_b32 s14, v17, 0
	v_readlane_b32 s13, v17, 1
	v_readlane_b32 s12, v17, 2
	v_readlane_b32 s4, v17, 7
	v_readlane_b32 s5, v17, 8
	v_readlane_b32 s8, v17, 9
	v_readlane_b32 s9, v17, 10
	v_readlane_b32 s10, v17, 3
	v_readlane_b32 s11, v17, 4
	v_readlane_b32 s2, v17, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:64
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v17, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v17, s0, 12
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
.LBB57_1:                               ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB57_4 Depth 2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 13
	v_readlane_b32 s1, v17, 12
	v_writelane_b32 v17, s1, 14
	scratch_load_b32 v0, off, s33 offset:68
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v17, s0, 15
	v_writelane_b32 v17, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v17, s0, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB57_3
; %bb.2:                                ;   in Loop: Header=BB57_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	scratch_load_b64 v[1:2], off, s33 offset:40
	s_mov_b32 s1, 0
	scratch_load_b32 v3, off, s33 offset:68
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v3, off, s33 offset:68
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:144
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v17, s0, 18
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB57_4
.LBB57_3:                               ; %Flow7
                                        ;   in Loop: Header=BB57_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v17, 14
	v_readlane_b32 s1, v17, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v17, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v17, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v17, s1, 19
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB57_1
	s_branch .LBB57_11
.LBB57_4:                               ;   Parent Loop BB57_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 20
	v_readlane_b32 s1, v17, 18
	v_writelane_b32 v17, s1, 21
	scratch_load_b32 v0, off, s33 offset:144
	s_mov_b32 s1, 0x200
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v17, s0, 22
	v_writelane_b32 v17, s0, 23
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v17, s0, 24
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB57_6
; %bb.5:                                ;   in Loop: Header=BB57_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v17, 0
	v_readlane_b32 s13, v17, 1
	v_readlane_b32 s12, v17, 2
	v_readlane_b32 s10, v17, 3
	v_readlane_b32 s11, v17, 4
	v_readlane_b32 s4, v17, 7
	v_readlane_b32 s5, v17, 8
	v_readlane_b32 s0, v17, 5
	v_readlane_b32 s1, v17, 6
	scratch_load_b32 v31, off, s33 offset:152 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v8, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v9, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul128schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul128schoolBook_v3@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	s_branch .LBB57_7
.LBB57_6:                               ; %Flow
                                        ;   in Loop: Header=BB57_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v17, 21
	v_readlane_b32 s1, v17, 23
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v17, s1, 20
	s_mov_b32 s1, s0
	v_writelane_b32 v17, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v17, s1, 25
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB57_4
	s_branch .LBB57_8
.LBB57_7:                               ;   in Loop: Header=BB57_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 22
	scratch_load_b32 v0, off, s33 offset:144
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:144
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v17, s0, 23
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB57_6
.LBB57_8:                               ;   in Loop: Header=BB57_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB57_1 Depth=1
	scratch_load_b128 v[2:5], off, s33 offset:112
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 1
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:128
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
; %bb.10:                               ;   in Loop: Header=BB57_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 15
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v17, s0, 16
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v17, s33 offset:148 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB57_3
.LBB57_11:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v17, off, s33 offset:148 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v17, 19
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel multiplyBenchmark128
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 512
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 32
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end57:
	.size	multiplyBenchmark128, .Lfunc_end57-multiplyBenchmark128
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2048
; NumSgprs: 36
; NumVgprs: 32
; ScratchSize: 512
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 3
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 32
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	multiplyBenchmark256    ; -- Begin function multiplyBenchmark256
	.globl	multiplyBenchmark256
	.p2align	8
	.type	multiplyBenchmark256,@function
multiplyBenchmark256:                   ; @multiplyBenchmark256
; %bb.0:
	s_mov_b32 s32, 0xe0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr28 : SGPR spill to VGPR lane
	v_writelane_b32 v28, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v28, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v28, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v28, s10, 3
	v_writelane_b32 v28, s11, 4
	v_writelane_b32 v28, s2, 5
	v_writelane_b32 v28, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v28, 5
	v_readlane_b32 s1, v28, 6
	v_writelane_b32 v28, s4, 7
	v_writelane_b32 v28, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:216 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v28, s8, 9
	v_writelane_b32 v28, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v28, s2, 11
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s14, v28, 0
	v_readlane_b32 s13, v28, 1
	v_readlane_b32 s12, v28, 2
	v_readlane_b32 s4, v28, 7
	v_readlane_b32 s5, v28, 8
	v_readlane_b32 s8, v28, 9
	v_readlane_b32 s9, v28, 10
	v_readlane_b32 s10, v28, 3
	v_readlane_b32 s11, v28, 4
	v_readlane_b32 s2, v28, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:64
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v28, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v28, s0, 12
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
.LBB58_1:                               ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB58_4 Depth 2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 13
	v_readlane_b32 s1, v28, 12
	v_writelane_b32 v28, s1, 14
	scratch_load_b32 v0, off, s33 offset:68
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 15
	v_writelane_b32 v28, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v28, s0, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB58_3
; %bb.2:                                ;   in Loop: Header=BB58_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 1
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s2, v0
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s2, v0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:208
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v28, s0, 18
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB58_4
.LBB58_3:                               ; %Flow7
                                        ;   in Loop: Header=BB58_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v28, 14
	v_readlane_b32 s1, v28, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v28, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 19
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB58_1
	s_branch .LBB58_11
.LBB58_4:                               ;   Parent Loop BB58_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 20
	v_readlane_b32 s1, v28, 18
	v_writelane_b32 v28, s1, 21
	scratch_load_b32 v0, off, s33 offset:208
	s_mov_b32 s1, 0x200
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 22
	v_writelane_b32 v28, s0, 23
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v28, s0, 24
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB58_6
; %bb.5:                                ;   in Loop: Header=BB58_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v28, 0
	v_readlane_b32 s13, v28, 1
	v_readlane_b32 s12, v28, 2
	v_readlane_b32 s10, v28, 3
	v_readlane_b32 s11, v28, 4
	v_readlane_b32 s4, v28, 7
	v_readlane_b32 s5, v28, 8
	v_readlane_b32 s0, v28, 5
	v_readlane_b32 s1, v28, 6
	scratch_load_b32 v31, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	scratch_load_b128 v[11:14], off, s33 offset:112
	scratch_load_b128 v[15:18], off, s33 offset:128
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul256schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul256schoolBook_v3@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	s_branch .LBB58_7
.LBB58_6:                               ; %Flow
                                        ;   in Loop: Header=BB58_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v28, 21
	v_readlane_b32 s1, v28, 23
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v28, s1, 20
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 25
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB58_4
	s_branch .LBB58_8
.LBB58_7:                               ;   in Loop: Header=BB58_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 22
	scratch_load_b32 v0, off, s33 offset:208
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:208
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 23
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB58_6
.LBB58_8:                               ;   in Loop: Header=BB58_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB58_1 Depth=1
	scratch_load_b128 v[2:5], off, s33 offset:144
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:160
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 1
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:176
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:192
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 3
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
; %bb.10:                               ;   in Loop: Header=BB58_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 15
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 16
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:212 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB58_3
.LBB58_11:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:212 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 19
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel multiplyBenchmark256
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 848
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 32
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end58:
	.size	multiplyBenchmark256, .Lfunc_end58-multiplyBenchmark256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2568
; NumSgprs: 36
; NumVgprs: 32
; ScratchSize: 848
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 3
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 32
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	multiplyBenchmark384    ; -- Begin function multiplyBenchmark384
	.globl	multiplyBenchmark384
	.p2align	8
	.type	multiplyBenchmark384,@function
multiplyBenchmark384:                   ; @multiplyBenchmark384
; %bb.0:
	s_mov_b32 s32, 0x120
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr38 : SGPR spill to VGPR lane
	v_writelane_b32 v38, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v38, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v38, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v38, s10, 3
	v_writelane_b32 v38, s11, 4
	v_writelane_b32 v38, s2, 5
	v_writelane_b32 v38, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v38, 5
	v_readlane_b32 s1, v38, 6
	v_writelane_b32 v38, s4, 7
	v_writelane_b32 v38, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:280 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v38, s8, 9
	v_writelane_b32 v38, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v38, s2, 11
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	v_readlane_b32 s14, v38, 0
	v_readlane_b32 s13, v38, 1
	v_readlane_b32 s12, v38, 2
	v_readlane_b32 s4, v38, 7
	v_readlane_b32 s5, v38, 8
	v_readlane_b32 s8, v38, 9
	v_readlane_b32 s9, v38, 10
	v_readlane_b32 s10, v38, 3
	v_readlane_b32 s11, v38, 4
	v_readlane_b32 s2, v38, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:64
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v38, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v38, s0, 12
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
.LBB59_1:                               ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB59_4 Depth 2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 13
	v_readlane_b32 s1, v38, 12
	v_writelane_b32 v38, s1, 14
	scratch_load_b32 v0, off, s33 offset:68
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 15
	v_writelane_b32 v38, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB59_3
; %bb.2:                                ;   in Loop: Header=BB59_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 1, v0
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s3, v0, s2, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s3, v0, s2, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 1, v0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s3, v0, s2, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s2, v0, s2, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:272
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v38, s0, 18
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB59_4
.LBB59_3:                               ; %Flow7
                                        ;   in Loop: Header=BB59_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v38, 14
	v_readlane_b32 s1, v38, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v38, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 19
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB59_1
	s_branch .LBB59_11
.LBB59_4:                               ;   Parent Loop BB59_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 20
	v_readlane_b32 s1, v38, 18
	v_writelane_b32 v38, s1, 21
	scratch_load_b32 v0, off, s33 offset:272
	s_mov_b32 s1, 0x200
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 22
	v_writelane_b32 v38, s0, 23
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 24
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB59_6
; %bb.5:                                ;   in Loop: Header=BB59_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v38, 0
	v_readlane_b32 s13, v38, 1
	v_readlane_b32 s12, v38, 2
	v_readlane_b32 s10, v38, 3
	v_readlane_b32 s11, v38, 4
	v_readlane_b32 s4, v38, 7
	v_readlane_b32 s5, v38, 8
	v_readlane_b32 s0, v38, 5
	v_readlane_b32 s1, v38, 6
	scratch_load_b32 v31, off, s33 offset:280 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	scratch_load_b128 v[11:14], off, s33 offset:112
	scratch_load_b128 v[15:18], off, s33 offset:128
	scratch_load_b128 v[19:22], off, s33 offset:144
	scratch_load_b128 v[23:26], off, s33 offset:160
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v24, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v25, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v26, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xe0
	v_mov_b32_e32 v27, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xf0
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x100
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul384schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul384schoolBook_v3@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:192
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[0:3], off, s33 offset:208
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	s_branch .LBB59_7
.LBB59_6:                               ; %Flow
                                        ;   in Loop: Header=BB59_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v38, 21
	v_readlane_b32 s1, v38, 23
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v38, s1, 20
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 25
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB59_4
	s_branch .LBB59_8
.LBB59_7:                               ;   in Loop: Header=BB59_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 22
	scratch_load_b32 v0, off, s33 offset:272
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:272
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 23
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB59_6
.LBB59_8:                               ;   in Loop: Header=BB59_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB59_1 Depth=1
	scratch_load_b128 v[2:5], off, s33 offset:176
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 6
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, s2
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:192
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, s2
	s_mov_b32 s3, 1
	v_or_b32_e64 v0, v0, s3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:208
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:224
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 3
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:240
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 4
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:256
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s2, v6, s2, 5
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
; %bb.10:                               ;   in Loop: Header=BB59_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 15
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 16
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v38, s33 offset:276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB59_3
.LBB59_11:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v38, off, s33 offset:276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 19
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel multiplyBenchmark384
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 1168
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 39
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end59:
	.size	multiplyBenchmark384, .Lfunc_end59-multiplyBenchmark384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 3064
; NumSgprs: 36
; NumVgprs: 39
; ScratchSize: 1168
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 4
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 39
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	multiplyBenchmark448    ; -- Begin function multiplyBenchmark448
	.globl	multiplyBenchmark448
	.p2align	8
	.type	multiplyBenchmark448,@function
multiplyBenchmark448:                   ; @multiplyBenchmark448
; %bb.0:
	s_mov_b32 s32, 0x150
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr40 : SGPR spill to VGPR lane
	v_writelane_b32 v40, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v40, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v40, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v40, s10, 3
	v_writelane_b32 v40, s11, 4
	v_writelane_b32 v40, s2, 5
	v_writelane_b32 v40, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	v_writelane_b32 v40, s4, 7
	v_writelane_b32 v40, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:328 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v40, s8, 9
	v_writelane_b32 v40, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v40, s2, 11
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:328 ; 4-byte Folded Reload
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s8, v40, 9
	v_readlane_b32 s9, v40, 10
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s2, v40, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:64
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v40, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 12
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
.LBB60_1:                               ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB60_4 Depth 2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 13
	v_readlane_b32 s1, v40, 12
	v_writelane_b32 v40, s1, 14
	scratch_load_b32 v0, off, s33 offset:68
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 15
	v_writelane_b32 v40, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB60_3
; %bb.2:                                ;   in Loop: Header=BB60_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	scratch_load_b64 v[1:2], off, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 14
	s_waitcnt vmcnt(2)
	v_writelane_b32 v40, s2, 18
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
	s_mov_b32 s1, 0
	v_writelane_b32 v40, s1, 19
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 2
	v_writelane_b32 v40, s0, 20
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b64 v[0:1], v[0:1], off offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b64 v[0:1], v[0:1], off offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:192
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:320
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 21
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB60_4
.LBB60_3:                               ; %Flow7
                                        ;   in Loop: Header=BB60_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 14
	v_readlane_b32 s1, v40, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v40, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 22
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB60_1
	s_branch .LBB60_11
.LBB60_4:                               ;   Parent Loop BB60_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 23
	v_readlane_b32 s1, v40, 21
	v_writelane_b32 v40, s1, 24
	scratch_load_b32 v0, off, s33 offset:320
	s_mov_b32 s1, 0x200
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 25
	v_writelane_b32 v40, s0, 26
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 27
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB60_6
; %bb.5:                                ;   in Loop: Header=BB60_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:328 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	scratch_load_b128 v[36:39], off, s33 offset:112
	scratch_load_b64 v[13:14], off, s33 offset:128
	scratch_load_b128 v[17:20], off, s33 offset:144
	scratch_load_b128 v[21:24], off, s33 offset:160
	scratch_load_b128 v[32:35], off, s33 offset:176
	scratch_load_b64 v[27:28], off, s33 offset:192
	s_mov_b32 s2, s32
	s_add_i32 s3, s33, 0x100
	v_mov_b32_e32 v0, s3
	scratch_store_b32 off, v0, s2
	s_mov_b32 s3, 12
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0x130
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 8
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0x120
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 4
	s_add_i32 s2, s2, s3
	s_add_i32 s3, s33, 0x110
	v_mov_b32_e32 v0, s3
	scratch_store_b32 off, v0, s2
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_waitcnt vmcnt(7)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v8, v36
	v_mov_b32_e32 v9, v37
	v_mov_b32_e32 v10, v38
	v_mov_b32_e32 v11, v39
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v12, v13
	v_mov_b32_e32 v13, v14
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v22, v32
	v_mov_b32_e32 v23, v33
	v_mov_b32_e32 v24, v34
	v_mov_b32_e32 v25, v35
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v26, v27
	v_mov_b32_e32 v27, v28
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xe0
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xf0
	v_mov_b32_e32 v30, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul448schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul448schoolBook_v3@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:208
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:224
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[0:3], off, s33 offset:240
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[3:6], off, s33 offset:256
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v0, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:128
	s_branch .LBB60_7
.LBB60_6:                               ; %Flow
                                        ;   in Loop: Header=BB60_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 27
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 24
	v_readlane_b32 s1, v40, 26
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v40, s1, 23
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 21
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 28
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB60_4
	s_branch .LBB60_8
.LBB60_7:                               ;   in Loop: Header=BB60_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 25
	scratch_load_b32 v0, off, s33 offset:320
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:320
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 26
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB60_6
.LBB60_8:                               ;   in Loop: Header=BB60_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 28
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB60_1 Depth=1
	scratch_load_b128 v[2:5], off, s33 offset:208
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 7
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, s2
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:224
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:240
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:256
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 3
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:272
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 4
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:288
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 5
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:304
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s2, v6, s2, 6
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
; %bb.10:                               ;   in Loop: Header=BB60_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 15
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 16
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v40, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB60_3
.LBB60_11:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v40, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 22
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel multiplyBenchmark448
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 1360
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 52
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end60:
	.size	multiplyBenchmark448, .Lfunc_end60-multiplyBenchmark448
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 3520
; NumSgprs: 36
; NumVgprs: 52
; ScratchSize: 1360
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 6
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 52
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	multiplyBenchmark512    ; -- Begin function multiplyBenchmark512
	.globl	multiplyBenchmark512
	.p2align	8
	.type	multiplyBenchmark512,@function
multiplyBenchmark512:                   ; @multiplyBenchmark512
; %bb.0:
	s_mov_b32 s32, 0x160
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v36, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v36, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v36, s10, 3
	v_writelane_b32 v36, s11, 4
	v_writelane_b32 v36, s2, 5
	v_writelane_b32 v36, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v36, 5
	v_readlane_b32 s1, v36, 6
	v_writelane_b32 v36, s4, 7
	v_writelane_b32 v36, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:344 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v36, s8, 9
	v_writelane_b32 v36, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v36, s2, 11
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:344 ; 4-byte Folded Reload
	v_readlane_b32 s14, v36, 0
	v_readlane_b32 s13, v36, 1
	v_readlane_b32 s12, v36, 2
	v_readlane_b32 s4, v36, 7
	v_readlane_b32 s5, v36, 8
	v_readlane_b32 s8, v36, 9
	v_readlane_b32 s9, v36, 10
	v_readlane_b32 s10, v36, 3
	v_readlane_b32 s11, v36, 4
	v_readlane_b32 s2, v36, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:64
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v36, 11
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 12
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
.LBB61_1:                               ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB61_4 Depth 2
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 13
	v_readlane_b32 s1, v36, 12
	v_writelane_b32 v36, s1, 14
	scratch_load_b32 v0, off, s33 offset:68
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 15
	v_writelane_b32 v36, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 17
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB61_3
; %bb.2:                                ;   in Loop: Header=BB61_1 Depth=1
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 2
	s_waitcnt vmcnt(2)
	v_writelane_b32 v36, s2, 18
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s2, v0
	s_mov_b32 s1, 0
	v_writelane_b32 v36, s1, 19
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 4
	v_writelane_b32 v36, s0, 20
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s4, 1
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s4
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 3
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s3
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s5, v0, v3
	v_add_co_ci_u32_e64 v2, s5, v1, v2, s5
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s2, v0
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s5, v0, v3
	v_add_co_ci_u32_e64 v2, s5, v1, v2, s5
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s4, v0, v3
	v_add_co_ci_u32_e64 v2, s4, v1, v2, s4
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s2
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s4, v0, v3
	v_add_co_ci_u32_e64 v2, s4, v1, v2, s4
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s2, s3
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:192
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:336
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 21
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	s_branch .LBB61_4
.LBB61_3:                               ; %Flow7
                                        ;   in Loop: Header=BB61_1 Depth=1
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 14
	v_readlane_b32 s1, v36, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 22
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB61_1
	s_branch .LBB61_11
.LBB61_4:                               ;   Parent Loop BB61_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 23
	v_readlane_b32 s1, v36, 21
	v_writelane_b32 v36, s1, 24
	scratch_load_b32 v0, off, s33 offset:336
	s_mov_b32 s1, 0x200
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 25
	v_writelane_b32 v36, s0, 26
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 27
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB61_6
; %bb.5:                                ;   in Loop: Header=BB61_4 Depth=2
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v36, 0
	v_readlane_b32 s13, v36, 1
	v_readlane_b32 s12, v36, 2
	v_readlane_b32 s10, v36, 3
	v_readlane_b32 s11, v36, 4
	v_readlane_b32 s4, v36, 7
	v_readlane_b32 s5, v36, 8
	v_readlane_b32 s0, v36, 5
	v_readlane_b32 s1, v36, 6
	scratch_load_b32 v31, off, s33 offset:344 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	scratch_load_b128 v[11:14], off, s33 offset:112
	scratch_load_b128 v[15:18], off, s33 offset:128
	scratch_load_b128 v[19:22], off, s33 offset:144
	scratch_load_b128 v[23:26], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b128 v[32:35], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v35
	s_mov_b32 s2, s32
	v_writelane_b32 v36, s2, 28
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	scratch_store_b32 off, v0, s2
	s_mov_b32 s3, 32
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0x140
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 28
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0x130
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 24
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0x120
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 20
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0x110
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 16
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0x100
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 12
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0xf0
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 8
	s_add_i32 s3, s2, s3
	s_add_i32 s6, s33, 0xe0
	v_mov_b32_e32 v0, s6
	scratch_store_b32 off, v0, s3
	s_mov_b32 s3, 4
	s_add_i32 s2, s2, s3
	s_add_i32 s3, s33, 0xd0
	v_mov_b32_e32 v0, s3
	scratch_store_b32 off, v0, s2
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v29
	v_mov_b32_e32 v27, v30
	v_mov_b32_e32 v28, v32
	v_mov_b32_e32 v29, v33
	v_mov_b32_e32 v30, v34
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul512schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul512schoolBook_v3@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:208
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:224
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[0:3], off, s33 offset:240
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[0:3], off, s33 offset:256
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	s_branch .LBB61_7
.LBB61_6:                               ; %Flow
                                        ;   in Loop: Header=BB61_4 Depth=2
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 27
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 24
	v_readlane_b32 s1, v36, 26
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 23
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 21
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 29
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB61_4
	s_branch .LBB61_8
.LBB61_7:                               ;   in Loop: Header=BB61_4 Depth=2
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 25
	scratch_load_b32 v0, off, s33 offset:336
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:336
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 26
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	s_branch .LBB61_6
.LBB61_8:                               ;   in Loop: Header=BB61_1 Depth=1
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 29
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB61_1 Depth=1
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	scratch_load_b128 v[2:5], off, s33 offset:208
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s2, 3
	s_waitcnt vmcnt(3)
	v_writelane_b32 v36, s2, 30
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
	s_mov_b32 s1, 0
	v_writelane_b32 v36, s1, 31
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s0, 4
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s0, 0
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:224
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 1
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:240
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 2
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:256
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s2
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:272
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:288
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 5
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:304
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 6
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:320
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s3, 7
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
; %bb.10:                               ;   in Loop: Header=BB61_1 Depth=1
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 15
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 16
	s_or_saveexec_b32 s19, -1
	scratch_store_b32 off, v36, s33 offset:340 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s19
	s_branch .LBB61_3
.LBB61_11:
	s_or_saveexec_b32 s19, -1
	scratch_load_b32 v36, off, s33 offset:340 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s19
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 22
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel multiplyBenchmark512
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 592
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 37
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end61:
	.size	multiplyBenchmark512, .Lfunc_end61-multiplyBenchmark512
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 3796
; NumSgprs: 36
; NumVgprs: 37
; ScratchSize: 592
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 4
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 37
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.hidden	lshiftByLimb2                   ; -- Begin function lshiftByLimb2
	.globl	lshiftByLimb2
	.p2align	2
	.type	lshiftByLimb2,@function
lshiftByLimb2:                          ; @lshiftByLimb2
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s1, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 12
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v1, off, s33
	v_mov_b32_e32 v0, 0
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, -12
	s_mov_b32 s33, s1
	s_setpc_b64 s[30:31]
.Lfunc_end62:
	.size	lshiftByLimb2, .Lfunc_end62-lshiftByLimb2
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 240
; NumSgprs: 34
; NumVgprs: 8
; ScratchSize: 12
; MemoryBound: 0
	.text
	.hidden	rshiftByLimb2                   ; -- Begin function rshiftByLimb2
	.globl	rshiftByLimb2
	.p2align	2
	.type	rshiftByLimb2,@function
rshiftByLimb2:                          ; @rshiftByLimb2
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 12
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v0, s0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, -12
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end63:
	.size	rshiftByLimb2, .Lfunc_end63-rshiftByLimb2
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 240
; NumSgprs: 34
; NumVgprs: 11
; ScratchSize: 12
; MemoryBound: 0
	.text
	.hidden	lshiftByLimb3                   ; -- Begin function lshiftByLimb3
	.globl	lshiftByLimb3
	.p2align	2
	.type	lshiftByLimb3,@function
lshiftByLimb3:                          ; @lshiftByLimb3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 16
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v1, off, s33
	v_mov_b32_e32 v0, 0
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, -16
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end64:
	.size	lshiftByLimb3, .Lfunc_end64-lshiftByLimb3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 356
; NumSgprs: 34
; NumVgprs: 8
; ScratchSize: 16
; MemoryBound: 0
	.text
	.hidden	rshiftByLimb3                   ; -- Begin function rshiftByLimb3
	.globl	rshiftByLimb3
	.p2align	2
	.type	rshiftByLimb3,@function
rshiftByLimb3:                          ; @rshiftByLimb3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 16
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v0, s0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, -16
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end65:
	.size	rshiftByLimb3, .Lfunc_end65-rshiftByLimb3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 352
; NumSgprs: 34
; NumVgprs: 11
; ScratchSize: 16
; MemoryBound: 0
	.text
	.hidden	lshiftByLimb4                   ; -- Begin function lshiftByLimb4
	.globl	lshiftByLimb4
	.p2align	2
	.type	lshiftByLimb4,@function
lshiftByLimb4:                          ; @lshiftByLimb4
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 20
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v1, off, s33
	v_mov_b32_e32 v0, 0
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, 0xffffffec
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end66:
	.size	lshiftByLimb4, .Lfunc_end66-lshiftByLimb4
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 476
; NumSgprs: 34
; NumVgprs: 8
; ScratchSize: 20
; MemoryBound: 0
	.text
	.hidden	rshiftByLimb4                   ; -- Begin function rshiftByLimb4
	.globl	rshiftByLimb4
	.p2align	2
	.type	rshiftByLimb4,@function
rshiftByLimb4:                          ; @rshiftByLimb4
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 20
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v0, s0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, 0xffffffec
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end67:
	.size	rshiftByLimb4, .Lfunc_end67-rshiftByLimb4
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 468
; NumSgprs: 34
; NumVgprs: 11
; ScratchSize: 20
; MemoryBound: 0
	.text
	.hidden	lshiftByLimb5                   ; -- Begin function lshiftByLimb5
	.globl	lshiftByLimb5
	.p2align	2
	.type	lshiftByLimb5,@function
lshiftByLimb5:                          ; @lshiftByLimb5
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 24
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_store_b32 off, v4, s33 offset:16
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v7, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v1, off, s33
	v_mov_b32_e32 v0, 0
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, 0xffffffe8
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end68:
	.size	lshiftByLimb5, .Lfunc_end68-lshiftByLimb5
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 592
; NumSgprs: 34
; NumVgprs: 8
; ScratchSize: 24
; MemoryBound: 0
	.text
	.hidden	rshiftByLimb5                   ; -- Begin function rshiftByLimb5
	.globl	rshiftByLimb5
	.p2align	2
	.type	rshiftByLimb5,@function
rshiftByLimb5:                          ; @rshiftByLimb5
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 24
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_store_b32 off, v4, s33 offset:16
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v0, s0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, 0xffffffe8
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end69:
	.size	rshiftByLimb5, .Lfunc_end69-rshiftByLimb5
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 580
; NumSgprs: 34
; NumVgprs: 11
; ScratchSize: 24
; MemoryBound: 0
	.text
	.hidden	rshiftByLimb6                   ; -- Begin function rshiftByLimb6
	.globl	rshiftByLimb6
	.p2align	2
	.type	rshiftByLimb6,@function
rshiftByLimb6:                          ; @rshiftByLimb6
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 28
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_store_b32 off, v4, s33 offset:16
	scratch_store_b32 off, v5, s33 offset:20
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:20
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s0
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v4, off, s33 offset:20
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v5, v10
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v0, s0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 v1, v0, off
	s_add_i32 s32, s32, 0xffffffe4
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end70:
	.size	rshiftByLimb6, .Lfunc_end70-rshiftByLimb6
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 692
; NumSgprs: 34
; NumVgprs: 11
; ScratchSize: 28
; MemoryBound: 0
	.text
	.hidden	lshift2                         ; -- Begin function lshift2
	.globl	lshift2
	.p2align	2
	.type	lshift2,@function
lshift2:                                ; @lshift2
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:52 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 64
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:8
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:48 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB71_2
; %bb.1:
.LBB71_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:48 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:48 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB71_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:8
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:12
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v6, v0, v5
	v_mov_b32_e32 v5, v2
	v_lshrrev_b32_e64 v5, v0, v5
	v_mov_b32_e32 v1, v3
	v_lshrrev_b32_e64 v4, v0, v1
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:8
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB71_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:48 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:52 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffc0
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end71:
	.size	lshift2, .Lfunc_end71-lshift2
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 780
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 64
; MemoryBound: 0
	.text
	.hidden	rshift2                         ; -- Begin function rshift2
	.globl	rshift2
	.p2align	2
	.type	rshift2,@function
rshift2:                                ; @rshift2
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:52 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 64
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:8
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:48 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB72_2
; %bb.1:
.LBB72_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:48 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:48 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB72_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:8
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:12
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:8
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:8
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB72_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:48 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:52 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffc0
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end72:
	.size	rshift2, .Lfunc_end72-rshift2
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 844
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 64
; MemoryBound: 0
	.text
	.hidden	lshift3                         ; -- Begin function lshift3
	.globl	lshift3
	.p2align	2
	.type	lshift3,@function
lshift3:                                ; @lshift3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:84 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x60
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_load_b32 v0, off, s33 offset:12
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:80 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB73_2
; %bb.1:
.LBB73_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:80 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:80 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB73_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:12
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v6, v0, v5
	v_mov_b32_e32 v5, v2
	v_lshrrev_b32_e64 v5, v0, v5
	v_mov_b32_e32 v1, v3
	v_lshrrev_b32_e64 v4, v0, v1
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB73_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:80 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:84 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffa0
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end73:
	.size	lshift3, .Lfunc_end73-lshift3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1048
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 96
; MemoryBound: 0
	.text
	.hidden	rshift3                         ; -- Begin function rshift3
	.globl	rshift3
	.p2align	2
	.type	rshift3,@function
rshift3:                                ; @rshift3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:84 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x60
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_load_b32 v0, off, s33 offset:12
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:80 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB74_2
; %bb.1:
.LBB74_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:80 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:80 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB74_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:12
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:16
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB74_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:80 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:84 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffa0
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end74:
	.size	rshift3, .Lfunc_end74-rshift3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1144
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 96
; MemoryBound: 0
	.text
	.hidden	lshift4                         ; -- Begin function lshift4
	.globl	lshift4
	.p2align	2
	.type	lshift4,@function
lshift4:                                ; @lshift4
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:100 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x70
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_store_b32 off, v4, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:16
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:96 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB75_2
; %bb.1:
.LBB75_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:96 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:96 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB75_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:16
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:20
	scratch_load_b32 v0, off, s33 offset:8
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	scratch_load_b32 v0, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v6, v0, v5
	v_mov_b32_e32 v5, v2
	v_lshrrev_b32_e64 v5, v0, v5
	v_mov_b32_e32 v1, v3
	v_lshrrev_b32_e64 v4, v0, v1
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB75_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:96 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff90
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end75:
	.size	lshift4, .Lfunc_end75-lshift4
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1312
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 112
; MemoryBound: 0
	.text
	.hidden	lshift5                         ; -- Begin function lshift5
	.globl	lshift5
	.p2align	2
	.type	lshift5,@function
lshift5:                                ; @lshift5
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:116 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x80
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_store_b32 off, v4, s33 offset:16
	scratch_store_b32 off, v5, s33 offset:20
	scratch_load_b32 v0, off, s33 offset:20
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:112 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB76_2
; %bb.1:
.LBB76_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:112 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:112 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB76_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:20
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:12
	s_mov_b32 s0, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v1, v0
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v6, v1, v2
	v_mov_b32_e32 v2, v8
	v_lshrrev_b32_e64 v5, v1, v2
	v_mov_b32_e32 v2, v9
	v_lshrrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[1:4], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	scratch_load_b32 v0, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v6, v0, v5
	v_mov_b32_e32 v5, v2
	v_lshrrev_b32_e64 v5, v0, v5
	v_mov_b32_e32 v1, v3
	v_lshrrev_b32_e64 v4, v0, v1
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	scratch_load_b128 v[8:11], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v11
	v_lshl_or_b32 v5, v5, v1, v6
	v_mov_b32_e32 v6, v10
	v_lshl_or_b32 v6, v3, v1, v6
	v_mov_b32_e32 v3, v9
	v_lshl_or_b32 v7, v2, v1, v3
	v_mov_b32_e32 v2, v8
	v_lshl_or_b32 v0, v0, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB76_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:112 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:116 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff80
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end76:
	.size	lshift5, .Lfunc_end76-lshift5
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1576
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 128
; MemoryBound: 0
	.text
	.hidden	rshift4                         ; -- Begin function rshift4
	.globl	rshift4
	.p2align	2
	.type	rshift4,@function
rshift4:                                ; @rshift4
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:100 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x70
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_store_b32 off, v4, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:16
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:96 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB77_2
; %bb.1:
.LBB77_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:96 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:96 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB77_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:16
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:20
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB77_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:96 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:100 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff90
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end77:
	.size	rshift4, .Lfunc_end77-rshift4
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1440
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 112
; MemoryBound: 0
	.text
	.hidden	rshift5                         ; -- Begin function rshift5
	.globl	rshift5
	.p2align	2
	.type	rshift5,@function
rshift5:                                ; @rshift5
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v12, s33 offset:116 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x80
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_store_b32 off, v3, s33 offset:12
	scratch_store_b32 off, v4, s33 offset:16
	scratch_store_b32 off, v5, s33 offset:20
	scratch_load_b32 v0, off, s33 offset:20
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr12 : SGPR spill to VGPR lane
	v_writelane_b32 v12, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:112 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB78_2
; %bb.1:
.LBB78_2:                               ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:112 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 0
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v12, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v12, s33 offset:112 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB78_4
; %bb.3:
	scratch_load_b32 v0, off, s33 offset:20
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:24
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	scratch_load_b32 v2, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b32 v2, v2, off
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v1, v2
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v1, v0
	v_mov_b32_e32 v6, v4
	v_lshlrev_b32_e64 v6, v1, v6
	v_mov_b32_e32 v2, v5
	v_lshlrev_b32_e64 v5, v1, v2
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v4, off
	scratch_load_b32 v3, off, s33 offset:20
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v5
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, v3, v0
	v_mov_b32_e32 v1, v6
	v_lshrrev_b32_e64 v1, v3, v1
	v_mov_b32_e32 v2, v7
	v_lshrrev_b32_e64 v2, v3, v2
	v_mov_b32_e32 v5, v8
	v_lshrrev_b32_e64 v3, v3, v5
	scratch_load_b128 v[8:11], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v3, v5
	v_mov_b32_e32 v3, v10
	v_or_b32_e64 v6, v2, v3
	v_mov_b32_e32 v2, v9
	v_or_b32_e64 v7, v1, v2
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
.LBB78_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v12, off, s33 offset:112 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v12, 1
	s_or_b32 exec_lo, exec_lo, s0
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v12, off, s33 offset:116 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff80
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end78:
	.size	rshift5, .Lfunc_end78-rshift5
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1736
; NumSgprs: 34
; NumVgprs: 13
; ScratchSize: 128
; MemoryBound: 0
	.text
	.p2align	2                               ; -- Begin function _Z13convert_uint3Dv3_i
	.type	_Z13convert_uint3Dv3_i,@function
_Z13convert_uint3Dv3_i:                 ; @_Z13convert_uint3Dv3_i
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s3, s33
	s_mov_b32 s33, s32
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v1
                                        ; kill: def $vgpr5 killed $vgpr2 killed $exec
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2
	s_mov_b32 s33, s3
	s_setpc_b64 s[30:31]
.Lfunc_end79:
	.size	_Z13convert_uint3Dv3_i, .Lfunc_end79-_Z13convert_uint3Dv3_i
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 28
; NumSgprs: 34
; NumVgprs: 6
; ScratchSize: 0
; MemoryBound: 0
	.text
	.hidden	subMul1_v2                      ; -- Begin function subMul1_v2
	.globl	subMul1_v2
	.p2align	2
	.type	subMul1_v2,@function
subMul1_v2:                             ; @subMul1_v2
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v15, s33 offset:236 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x100
	v_writelane_b32 v15, s30, 0
	v_writelane_b32 v15, s31, 1
	scratch_store_b32 off, v31, s33 offset:204 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr16 : SGPR spill to VGPR lane
	v_writelane_b32 v16, s6, 0
	v_writelane_b32 v16, s7, 1
	scratch_store_b32 off, v10, s33 offset:224 ; 4-byte Folded Spill
	scratch_store_b32 off, v9, s33 offset:228 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:232 ; 4-byte Folded Spill
	v_mov_b32_e32 v8, v7
	scratch_load_b32 v7, off, s33 offset:232 ; 4-byte Folded Reload
	scratch_store_b32 off, v8, s33 offset:220 ; 4-byte Folded Spill
	v_mov_b32_e32 v12, v6
	scratch_load_b32 v6, off, s33 offset:228 ; 4-byte Folded Reload
	v_mov_b32_e32 v13, v5
	scratch_load_b32 v5, off, s33 offset:224 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v4
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v8, v2
	v_mov_b32_e32 v9, v1
	v_mov_b32_e32 v10, v0
	scratch_load_b32 v0, off, s33 offset:220 ; 4-byte Folded Reload
	v_writelane_b32 v16, s15, 2
	v_writelane_b32 v16, s14, 3
	v_writelane_b32 v16, s13, 4
	v_writelane_b32 v16, s12, 5
	v_writelane_b32 v16, s10, 6
	v_writelane_b32 v16, s11, 7
	v_writelane_b32 v16, s8, 8
	v_writelane_b32 v16, s9, 9
	v_writelane_b32 v16, s4, 10
	v_writelane_b32 v16, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v14
	v_mov_b32_e32 v6, v13
	v_mov_b32_e32 v7, v12
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v10, s33
	scratch_store_b32 off, v9, s33 offset:4
	scratch_store_b32 off, v8, s33 offset:8
	scratch_store_b128 off, v[4:7], s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_store_b32 off, v11, s33 offset:48
	scratch_load_b32 v4, off, s33 offset:48
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	s_mov_b32 s16, 0
	s_mov_b32 s0, s16
	s_mov_b32 s1, s16
	s_mov_b32 s2, s16
	s_mov_b32 s3, s16
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:96
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:64
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v16, s0, 12
	v_writelane_b32 v16, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s15, v16, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 12
	v_writelane_b32 v16, s0, 14
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
	v_cndmask_b32_e64 v0, 0, 1, s0
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b32 v6, off, s33 offset:128
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cmp_lt_u32_e64 s1, v2, v3
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s2
	v_cndmask_b32_e64 v1, 0, -1, s1
	v_cndmask_b32_e64 v2, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint3Dv3_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint3Dv3_i@rel32@hi+12
	v_writelane_b32 v16, s0, 15
	v_writelane_b32 v16, s1, 16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[4:7], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s0, v6, v7
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cmp_lt_u32_e64 s2, v2, v3
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s3
	v_cndmask_b32_e64 v1, 0, -1, s2
	v_cndmask_b32_e64 v2, 0, -1, s1
	v_cndmask_b32_e64 v3, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint4Dv4_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint4Dv4_i@rel32@hi+12
	v_writelane_b32 v16, s0, 17
	v_writelane_b32 v16, s1, 18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s0, v16, 12
	v_readlane_b32 s1, v16, 13
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	scratch_store_b32 off, v0, s33 offset:216 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:216 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:212 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:212 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:208 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:208 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[0:3], off, s33 offset:144
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b128 v[7:10], off, s33 offset:64
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s0, v16, 15
	v_readlane_b32 s1, v16, 16
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s2, v16, 14
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s2
	scratch_load_b128 v[0:3], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:160
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cmp_lt_u32_e64 s3, v2, v3
	v_cmp_lt_u32_e64 s16, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s16
	v_cndmask_b32_e64 v1, 0, -1, s3
	v_cndmask_b32_e64 v2, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:204 ; 4-byte Folded Reload
	v_readlane_b32 s15, v16, 2
	v_readlane_b32 s14, v16, 3
	v_readlane_b32 s13, v16, 4
	v_readlane_b32 s12, v16, 5
	v_readlane_b32 s10, v16, 6
	v_readlane_b32 s11, v16, 7
	v_readlane_b32 s8, v16, 8
	v_readlane_b32 s9, v16, 9
	v_readlane_b32 s6, v16, 0
	v_readlane_b32 s7, v16, 1
	v_readlane_b32 s4, v16, 10
	v_readlane_b32 s5, v16, 11
	v_readlane_b32 s0, v16, 17
	v_readlane_b32 s1, v16, 18
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[4:7], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s2, v6, v7
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cmp_lt_u32_e64 s16, v2, v3
	v_cmp_lt_u32_e64 s17, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s17
	v_cndmask_b32_e64 v1, 0, -1, s16
	v_cndmask_b32_e64 v2, 0, -1, s3
	v_cndmask_b32_e64 v3, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v16, 14
	scratch_store_b32 off, v0, s33 offset:200 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:200 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:196 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:196 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:192 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[0:3], off, s33 offset:176
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s1
	scratch_load_b128 v[0:3], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:80
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s2, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s1
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:100
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v6, off, s33 offset:104
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s3
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:108
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s2
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:112
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s1
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:116
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:120
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v15, 0
	v_readlane_b32 s31, v15, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v15, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff00
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end80:
	.size	subMul1_v2, .Lfunc_end80-subMul1_v2
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 4388
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 320
; MemoryBound: 0
	.text
	.hidden	subMul1_v3                      ; -- Begin function subMul1_v3
	.globl	subMul1_v3
	.p2align	2
	.type	subMul1_v3,@function
subMul1_v3:                             ; @subMul1_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v20, s33 offset:316 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:320 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x150
	v_writelane_b32 v20, s30, 0
	v_writelane_b32 v20, s31, 1
	scratch_store_b32 off, v31, s33 offset:268 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr21 : SGPR spill to VGPR lane
	v_writelane_b32 v21, s6, 0
	v_writelane_b32 v21, s7, 1
	scratch_store_b32 off, v15, s33 offset:304 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:308 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:312 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:296 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:300 ; 4-byte Folded Spill
	v_mov_b32_e32 v17, v7
	scratch_load_b32 v7, off, s33 offset:312 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v6
	scratch_load_b32 v6, off, s33 offset:308 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v5
	scratch_load_b32 v5, off, s33 offset:304 ; 4-byte Folded Reload
	v_mov_b32_e32 v8, v4
	scratch_load_b32 v4, off, s33 offset:300 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v3
	v_mov_b32_e32 v13, v2
	v_mov_b32_e32 v14, v1
	v_mov_b32_e32 v15, v0
	scratch_load_b32 v0, off, s33 offset:296 ; 4-byte Folded Reload
	v_writelane_b32 v21, s15, 2
	v_writelane_b32 v21, s14, 3
	v_writelane_b32 v21, s13, 4
	v_writelane_b32 v21, s12, 5
	v_writelane_b32 v21, s10, 6
	v_writelane_b32 v21, s11, 7
	v_writelane_b32 v21, s8, 8
	v_writelane_b32 v21, s9, 9
	v_writelane_b32 v21, s4, 10
	v_writelane_b32 v21, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v19
	v_mov_b32_e32 v10, v18
	v_mov_b32_e32 v11, v17
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v15, s33
	scratch_store_b32 off, v14, s33 offset:4
	scratch_store_b32 off, v13, s33 offset:8
	scratch_store_b32 off, v12, s33 offset:12
	scratch_store_b128 off, v[8:11], s33 offset:16
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_store_b32 off, v16, s33 offset:64
	scratch_load_b32 v4, off, s33 offset:64
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	s_mov_b32 s16, 0
	s_mov_b32 s0, s16
	s_mov_b32 s1, s16
	s_mov_b32 s2, s16
	s_mov_b32 s3, s16
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:112
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:128
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b128 v[7:10], off, s33 offset:80
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v21, s0, 12
	v_writelane_b32 v21, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s15, v21, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 12
	v_writelane_b32 v21, s0, 14
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
	v_cndmask_b32_e64 v0, 0, 1, s0
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v6, off, s33 offset:160
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cmp_lt_u32_e64 s1, v2, v3
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s2
	v_cndmask_b32_e64 v1, 0, -1, s1
	v_cndmask_b32_e64 v2, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint3Dv3_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint3Dv3_i@rel32@hi+12
	v_writelane_b32 v21, s0, 15
	v_writelane_b32 v21, s1, 16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[4:7], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s0, v6, v7
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cmp_lt_u32_e64 s2, v2, v3
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s3
	v_cndmask_b32_e64 v1, 0, -1, s2
	v_cndmask_b32_e64 v2, 0, -1, s1
	v_cndmask_b32_e64 v3, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint4Dv4_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint4Dv4_i@rel32@hi+12
	v_writelane_b32 v21, s0, 17
	v_writelane_b32 v21, s1, 18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s0, v21, 12
	v_readlane_b32 s1, v21, 13
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	scratch_store_b32 off, v0, s33 offset:292 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:288 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:284 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:284 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[0:3], off, s33 offset:176
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b128 v[7:10], off, s33 offset:80
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s0, v21, 15
	v_readlane_b32 s1, v21, 16
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s2, v21, 14
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:208
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s2
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:192
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cmp_lt_u32_e64 s3, v2, v3
	v_cmp_lt_u32_e64 s16, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s16
	v_cndmask_b32_e64 v1, 0, -1, s3
	v_cndmask_b32_e64 v2, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 17
	v_readlane_b32 s1, v21, 18
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[4:7], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s2, v6, v7
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cmp_lt_u32_e64 s16, v2, v3
	v_cmp_lt_u32_e64 s17, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s17
	v_cndmask_b32_e64 v1, 0, -1, s16
	v_cndmask_b32_e64 v2, 0, -1, s3
	v_cndmask_b32_e64 v3, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s0, v21, 12
	v_readlane_b32 s1, v21, 13
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	scratch_store_b32 off, v0, s33 offset:280 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:280 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:276 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:276 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:272 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:272 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[0:3], off, s33 offset:208
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:48
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:224
	scratch_load_b128 v[3:6], off, s33 offset:48
	scratch_load_b128 v[7:10], off, s33 offset:80
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s0, v21, 15
	v_readlane_b32 s1, v21, 16
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s2, v21, 14
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:240
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s2
	scratch_load_b128 v[0:3], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b32 v6, off, s33 offset:224
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cmp_lt_u32_e64 s3, v2, v3
	v_cmp_lt_u32_e64 s16, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s16
	v_cndmask_b32_e64 v1, 0, -1, s3
	v_cndmask_b32_e64 v2, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:268 ; 4-byte Folded Reload
	v_readlane_b32 s15, v21, 2
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s0, v21, 17
	v_readlane_b32 s1, v21, 18
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[4:7], off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s2, v6, v7
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cmp_lt_u32_e64 s16, v2, v3
	v_cmp_lt_u32_e64 s17, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s17
	v_cndmask_b32_e64 v1, 0, -1, s16
	v_cndmask_b32_e64 v2, 0, -1, s3
	v_cndmask_b32_e64 v3, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v21, 14
	scratch_store_b32 off, v0, s33 offset:264 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:264 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:260 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:256 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[0:3], off, s33 offset:240
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s1
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:96
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s2, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s1
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:112
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:116
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b32 v6, off, s33 offset:120
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:124
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s3
	scratch_load_b128 v[0:3], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b32 v6, off, s33 offset:124
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b32 v6, off, s33 offset:128
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b32 v6, off, s33 offset:132
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b32 v6, off, s33 offset:136
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:140
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s3
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:140
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s2
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:144
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s1
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:148
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:152
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v20, 0
	v_readlane_b32 s31, v20, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v20, off, s33 offset:316 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:320 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffeb0
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end81:
	.size	subMul1_v3, .Lfunc_end81-subMul1_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 6424
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 400
; MemoryBound: 0
	.text
	.hidden	subMul1_512                     ; -- Begin function subMul1_512
	.globl	subMul1_512
	.p2align	2
	.type	subMul1_512,@function
subMul1_512:                            ; @subMul1_512
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s19, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v25, s33 offset:424 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:428 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x1c0
	v_writelane_b32 v25, s30, 0
	v_writelane_b32 v25, s31, 1
	scratch_store_b32 off, v31, s33 offset:348 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr26 : SGPR spill to VGPR lane
	v_writelane_b32 v26, s6, 0
	v_writelane_b32 v26, s7, 1
	scratch_store_b32 off, v20, s33 offset:396 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:400 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:404 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:388 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:412 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:416 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:420 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:392 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v12
	v_mov_b32_e32 v14, v11
	scratch_load_b32 v11, off, s33 offset:420 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v10
	scratch_load_b32 v10, off, s33 offset:416 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v9
	scratch_load_b32 v9, off, s33 offset:412 ; 4-byte Folded Reload
	scratch_store_b32 off, v12, s33 offset:408 ; 4-byte Folded Spill
	v_mov_b32_e32 v22, v8
	scratch_load_b32 v8, off, s33 offset:408 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v7
	scratch_load_b32 v7, off, s33 offset:404 ; 4-byte Folded Reload
	v_mov_b32_e32 v24, v6
	scratch_load_b32 v6, off, s33 offset:400 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v5
	scratch_load_b32 v5, off, s33 offset:396 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v4
	scratch_load_b32 v4, off, s33 offset:392 ; 4-byte Folded Reload
	v_mov_b32_e32 v17, v3
	v_mov_b32_e32 v18, v2
	v_mov_b32_e32 v19, v1
	v_mov_b32_e32 v20, v0
	scratch_load_b32 v0, off, s33 offset:388 ; 4-byte Folded Reload
	v_writelane_b32 v26, s15, 2
	v_writelane_b32 v26, s14, 3
	v_writelane_b32 v26, s13, 4
	v_writelane_b32 v26, s12, 5
	v_writelane_b32 v26, s10, 6
	v_writelane_b32 v26, s11, 7
	v_writelane_b32 v26, s8, 8
	v_writelane_b32 v26, s9, 9
	v_writelane_b32 v26, s4, 10
	v_writelane_b32 v26, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v24
	v_mov_b32_e32 v14, v23
	v_mov_b32_e32 v15, v22
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v20, s33
	scratch_store_b32 off, v19, s33 offset:4
	scratch_store_b32 off, v18, s33 offset:8
	scratch_store_b32 off, v17, s33 offset:12
	scratch_store_b32 off, v16, s33 offset:16
	scratch_store_b128 off, v[12:15], s33 offset:32
	scratch_store_b128 off, v[8:11], s33 offset:48
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_store_b32 off, v21, s33 offset:96
	scratch_load_b32 v4, off, s33 offset:96
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v4
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	s_mov_b32 s16, 0
	s_mov_b32 s0, s16
	s_mov_b32 s1, s16
	s_mov_b32 s2, s16
	s_mov_b32 s3, s16
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:144
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:160
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:176
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:208
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b128 v[7:10], off, s33 offset:112
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v26, s0, 12
	v_writelane_b32 v26, s1, 13
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s15, v26, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:224
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 12
	v_writelane_b32 v26, s0, 14
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
	v_cndmask_b32_e64 v0, 0, 1, s0
	scratch_store_b32 off, v0, s33 offset:128
	scratch_load_b32 v6, off, s33 offset:208
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cmp_lt_u32_e64 s1, v2, v3
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s2
	v_cndmask_b32_e64 v1, 0, -1, s1
	v_cndmask_b32_e64 v2, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint3Dv3_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint3Dv3_i@rel32@hi+12
	v_writelane_b32 v26, s0, 15
	v_writelane_b32 v26, s1, 16
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[4:7], off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s0, v6, v7
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cmp_lt_u32_e64 s2, v2, v3
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s3
	v_cndmask_b32_e64 v1, 0, -1, s2
	v_cndmask_b32_e64 v2, 0, -1, s1
	v_cndmask_b32_e64 v3, 0, -1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13convert_uint4Dv4_i@rel32@lo+4
	s_addc_u32 s1, s1, _Z13convert_uint4Dv4_i@rel32@hi+12
	v_writelane_b32 v26, s0, 17
	v_writelane_b32 v26, s1, 18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s0, v26, 12
	v_readlane_b32 s1, v26, 13
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	scratch_store_b32 off, v0, s33 offset:384 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:384 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:380 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:380 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:376 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:376 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[0:3], off, s33 offset:224
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:48
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:240
	scratch_load_b128 v[3:6], off, s33 offset:48
	scratch_load_b128 v[7:10], off, s33 offset:112
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s0, v26, 15
	v_readlane_b32 s1, v26, 16
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s2, v26, 14
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:256
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s2
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:240
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cmp_lt_u32_e64 s3, v2, v3
	v_cmp_lt_u32_e64 s16, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s16
	v_cndmask_b32_e64 v1, 0, -1, s3
	v_cndmask_b32_e64 v2, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s0, v26, 17
	v_readlane_b32 s1, v26, 18
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[4:7], off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:256
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s2, v6, v7
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cmp_lt_u32_e64 s16, v2, v3
	v_cmp_lt_u32_e64 s17, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s17
	v_cndmask_b32_e64 v1, 0, -1, s16
	v_cndmask_b32_e64 v2, 0, -1, s3
	v_cndmask_b32_e64 v3, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s0, v26, 12
	v_readlane_b32 s1, v26, 13
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	scratch_store_b32 off, v0, s33 offset:372 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:372 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:368 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:368 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:364 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:364 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[0:3], off, s33 offset:256
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:64
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:272
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[7:10], off, s33 offset:112
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s0, v26, 15
	v_readlane_b32 s1, v26, 16
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s2, v26, 14
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:288
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:272
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s2
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b32 v6, off, s33 offset:272
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:272
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cmp_lt_u32_e64 s3, v2, v3
	v_cmp_lt_u32_e64 s16, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s16
	v_cndmask_b32_e64 v1, 0, -1, s3
	v_cndmask_b32_e64 v2, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s0, v26, 17
	v_readlane_b32 s1, v26, 18
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b128 v[4:7], off, s33 offset:272
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:288
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s2, v6, v7
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cmp_lt_u32_e64 s16, v2, v3
	v_cmp_lt_u32_e64 s17, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s17
	v_cndmask_b32_e64 v1, 0, -1, s16
	v_cndmask_b32_e64 v2, 0, -1, s3
	v_cndmask_b32_e64 v3, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s0, v26, 12
	v_readlane_b32 s1, v26, 13
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	scratch_store_b32 off, v0, s33 offset:360 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:360 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:356 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:356 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:352 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:352 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b128 v[0:3], off, s33 offset:288
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v10
	v_mul_lo_u32 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_mul_lo_u32 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_mul_lo_u32 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:304
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:112
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s0, v26, 15
	v_readlane_b32 s1, v26, 16
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s2, v26, 14
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:320
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s2, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s2
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v6, off, s33 offset:304
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v4, v5
	scratch_load_b128 v[5:8], off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v5, v8
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cmp_lt_u32_e64 s3, v2, v3
	v_cmp_lt_u32_e64 s16, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s16
	v_cndmask_b32_e64 v1, 0, -1, s3
	v_cndmask_b32_e64 v2, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:348 ; 4-byte Folded Reload
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s0, v26, 17
	v_readlane_b32 s1, v26, 18
	v_mov_b32_e32 v7, v0
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v9, v2
	scratch_load_b128 v[1:4], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v9
	v_sub_nc_u32_e64 v6, v6, v8
	v_sub_nc_u32_e64 v0, v0, v7
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b128 v[4:7], off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v6, v7
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
	v_mov_b32_e32 v2, v9
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v6, v5, v6
	v_sub_nc_u32_e64 v7, v2, v3
	v_sub_nc_u32_e64 v0, v0, v1
	v_mov_b32_e32 v5, v11
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[5:8], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v6, v8
	scratch_load_b128 v[7:10], off, s33 offset:320
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v5, v9
	v_mov_b32_e32 v7, v10
	v_cmp_lt_u32_e64 s2, v6, v7
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cmp_lt_u32_e64 s16, v2, v3
	v_cmp_lt_u32_e64 s17, v0, v1
	v_cndmask_b32_e64 v0, 0, -1, s17
	v_cndmask_b32_e64 v1, 0, -1, s16
	v_cndmask_b32_e64 v2, 0, -1, s3
	v_cndmask_b32_e64 v3, 0, -1, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v26, 14
	scratch_store_b32 off, v0, s33 offset:344 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:344 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:340 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v2
	scratch_load_b32 v2, off, s33 offset:340 ; 4-byte Folded Reload
	scratch_store_b32 off, v0, s33 offset:336 ; 4-byte Folded Spill
	v_mov_b32_e32 v4, v3
	scratch_load_b32 v3, off, s33 offset:336 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v10
	v_sub_nc_u32_e64 v4, v0, v4
	v_mov_b32_e32 v0, v9
	v_sub_nc_u32_e64 v5, v0, v3
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v6, v0, v2
	v_mov_b32_e32 v0, v7
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b128 v[0:3], off, s33 offset:320
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[8:11], v4, off
	v_mov_b32_e32 v6, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v2
	v_mov_b32_e32 v6, v10
	v_sub_nc_u32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v7, v9
	v_sub_nc_u32_e64 v7, v7, v12
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v8
	v_sub_nc_u32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s1
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:128
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s2, 4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s1
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:144
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:148
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v6, off, s33 offset:152
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:156
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s3
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b32 v6, off, s33 offset:156
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b32 v6, off, s33 offset:160
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b32 v6, off, s33 offset:164
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b32 v6, off, s33 offset:168
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s3
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v6, off, s33 offset:172
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v6, off, s33 offset:176
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v6, off, s33 offset:180
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s3, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s3
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v6, off, s33 offset:184
	scratch_load_b32 v4, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v0, off
	scratch_load_b32 v1, off, s33 offset:188
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s3, v0, v1
	v_cndmask_b32_e64 v5, 0, 1, s3
	scratch_load_b128 v[0:3], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v0
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v0, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b32 v6, off, s33 offset:188
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s2
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_lt_u32_e64 s2, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s2
	v_mov_b32_e32 v4, v1
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b32 v6, off, s33 offset:192
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_lt_u32_e64 s1, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s1
	v_mov_b32_e32 v4, v2
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v2, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b32 v6, off, s33 offset:196
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_load_b32 v4, v0, off
	scratch_load_b128 v[0:3], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_lt_u32_e64 s0, v4, v5
	v_cndmask_b32_e64 v5, 0, 1, s0
	v_mov_b32_e32 v4, v3
	v_add_nc_u32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b32 v6, off, s33 offset:200
	scratch_load_b32 v4, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	v_readlane_b32 s30, v25, 0
	v_readlane_b32 s31, v25, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v25, off, s33 offset:424 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:428 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffe40
	s_mov_b32 s33, s19
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end82:
	.size	subMul1_512, .Lfunc_end82-subMul1_512
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 8524
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 512
; MemoryBound: 0
	.text
	.hidden	modulo384to256                  ; -- Begin function modulo384to256
	.globl	modulo384to256
	.p2align	2
	.type	modulo384to256,@function
modulo384to256:                         ; @modulo384to256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s22, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v25, s33 offset:192 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:196 ; 4-byte Folded Spill
	scratch_store_b32 off, v27, s33 offset:200 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xd0
	v_writelane_b32 v25, s30, 0
	v_writelane_b32 v25, s31, 1
	scratch_store_b32 off, v31, s33 offset:176 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr27 : SGPR spill to VGPR lane
	v_writelane_b32 v27, s6, 0
	v_writelane_b32 v27, s7, 1
	scratch_store_b32 off, v19, s33 offset:152 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:156 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:160 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:144 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:164 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:168 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:172 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:148 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v11
	scratch_load_b32 v11, off, s33 offset:172 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v10
	scratch_load_b32 v10, off, s33 offset:168 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v9
	scratch_load_b32 v9, off, s33 offset:164 ; 4-byte Folded Reload
	v_mov_b32_e32 v17, v7
	scratch_load_b32 v7, off, s33 offset:160 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v6
	scratch_load_b32 v6, off, s33 offset:156 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v5
	scratch_load_b32 v5, off, s33 offset:152 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v4
	scratch_load_b32 v4, off, s33 offset:148 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v3
	v_mov_b32_e32 v23, v2
	v_mov_b32_e32 v24, v1
	v_mov_b32_e32 v16, v0
	scratch_load_b32 v0, off, s33 offset:144 ; 4-byte Folded Reload
	v_writelane_b32 v27, s15, 2
	v_writelane_b32 v27, s14, 3
	v_writelane_b32 v27, s13, 4
	v_writelane_b32 v27, s12, 5
	v_writelane_b32 v27, s10, 6
	v_writelane_b32 v27, s11, 7
	v_writelane_b32 v27, s8, 8
	v_writelane_b32 v27, s9, 9
	v_writelane_b32 v27, s4, 10
	v_writelane_b32 v27, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v19
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v24
	v_mov_b32_e32 v18, v23
	v_mov_b32_e32 v19, v22
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[16:19], s33
	scratch_store_b128 off, v[12:15], s33 offset:16
	scratch_store_b128 off, v[8:11], s33 offset:32
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_store_b32 off, v20, s33 offset:80
	scratch_store_b32 off, v21, s33 offset:84
	v_mov_b32_e32 v0, 12
	scratch_store_b32 off, v0, s33 offset:88
	v_mov_b32_e32 v0, 8
	scratch_store_b32 off, v0, s33 offset:92
	s_mov_b32 s0, 0
	v_writelane_b32 v27, s0, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_1:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 12
	v_writelane_b32 v27, s0, 13
	scratch_load_b32 v0, off, s33 offset:92
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_writelane_b32 v27, s0, 14
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_3
; %bb.2:                                ;   in Loop: Header=BB83_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:76
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_3:                               ;   in Loop: Header=BB83_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 15
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v27, 14
	s_mov_b32 s0, -1
	v_writelane_b32 v27, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 17
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_5
; %bb.4:                                ;   in Loop: Header=BB83_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb2@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb2@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:92
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:92
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v27, s0, 16
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_5:                               ; %Flow6
                                        ;   in Loop: Header=BB83_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v27, 17
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v27, 13
	v_readlane_b32 s0, v27, 16
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s1
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 18
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB83_1
; %bb.6:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 18
	s_or_b32 exec_lo, exec_lo, s0
; %bb.7:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:96
	v_mov_b32_e32 v0, 0x80000000
	scratch_store_b32 off, v0, s33 offset:100
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v27, s0, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_8:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 20
	v_readlane_b32 s1, v27, 19
	v_writelane_b32 v27, s1, 21
	scratch_load_b32 v0, off, s33 offset:76
	scratch_load_b32 v1, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, v1
	s_mov_b32 s1, 0
	v_cmp_eq_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 22
	v_writelane_b32 v27, s0, 23
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 24
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_10
; %bb.9:                                ;   in Loop: Header=BB83_8 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 22
	scratch_load_b32 v0, off, s33 offset:96
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:100
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s1, v0
	scratch_store_b32 off, v0, s33 offset:100
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 23
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_10:                              ; %Flow5
                                        ;   in Loop: Header=BB83_8 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v27, 21
	v_readlane_b32 s1, v27, 23
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v27, s1, 20
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 19
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 25
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB83_8
; %bb.11:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v3, off, s33 offset:96
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift3@rel32@lo+4
	s_addc_u32 s1, s1, lshift3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	scratch_load_b32 v2, off, s33 offset:96
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift2@rel32@lo+4
	s_addc_u32 s1, s1, lshift2@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_writelane_b32 v27, s0, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_13:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 26
	v_writelane_b32 v27, s0, 27
	scratch_load_b32 v0, off, s33 offset:88
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_writelane_b32 v27, s0, 28
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 29
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_15
; %bb.14:                               ;   in Loop: Header=BB83_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:44
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 28
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_15:                              ;   in Loop: Header=BB83_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 29
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v27, 28
	s_mov_b32 s0, -1
	v_writelane_b32 v27, s0, 30
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 31
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_17
; %bb.16:                               ;   in Loop: Header=BB83_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb3@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:88
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:88
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v27, s0, 30
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_17:                              ; %Flow4
                                        ;   in Loop: Header=BB83_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v27, 31
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v27, 27
	v_readlane_b32 s0, v27, 30
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s1
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:136 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, s0
                                        ; implicit-def: $vgpr27 : SGPR spill to VGPR lane
	v_writelane_b32 v27, s1, 0
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB83_13
; %bb.18:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 0
	s_or_b32 exec_lo, exec_lo, s0
; %bb.19:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:104
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v27, s0, 1
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_20:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 2
	v_readlane_b32 s1, v27, 1
	v_writelane_b32 v27, s1, 3
	scratch_load_b32 v0, off, s33 offset:104
	scratch_load_b32 v1, off, s33 offset:88
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, v1, v2
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 4
	v_writelane_b32 v27, s0, 5
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 6
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_25
; %bb.21:                               ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:44
	scratch_load_b32 v1, off, s33 offset:76
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s0, v0, v1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v27, s1, 7
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_22
	s_branch .LBB83_24
.LBB83_22:                              ; %Flow2
                                        ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 7
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v27, s0, 8
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB83_26
; %bb.23:                               ;   in Loop: Header=BB83_20 Depth=1
	v_mov_b32_e32 v0, -1
	scratch_store_b32 off, v0, s33 offset:108
	s_branch .LBB83_26
.LBB83_24:                              ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b128 v[5:8], off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s1, 32
	v_writelane_b32 v27, s1, 9
	v_lshlrev_b64 v[3:4], s1, v[0:1]
	v_mov_b32_e32 v0, v7
	s_mov_b32 s2, 0
	v_writelane_b32 v27, s2, 10
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:112
	scratch_load_b64 v[7:8], off, s33 offset:112
	scratch_load_b32 v3, off, s33 offset:76
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s2
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v6, v0
	v_cvt_f32_u32_e64 v0, v3
	s_mov_b32 s3, 0x4f800000
	s_mov_b32 s0, 0
	v_fmac_f32_e64 v0, s0, s3
	v_rcp_f32_e64 v0, v0
	s_mov_b32 s0, 0x5f7ffffc
	s_waitcnt_depctr 0xfff
	v_mul_f32_e64 v1, v0, s0
	s_mov_b32 s0, 0x2f800000
	v_mul_f32_e64 v0, v1, s0
	v_trunc_f32_e64 v0, v0
	s_mov_b32 s0, 0xcf800000
	v_fmac_f32_e64 v1, v0, s0
	v_cvt_u32_f32_e64 v4, v1
	s_mov_b64 s[4:5], 0
	s_mov_b32 s3, s4
	v_mov_b32_e32 v2, v5
	s_mov_b32 s0, s5
	v_mov_b32_e32 v1, v6
	v_sub_co_u32 v9, s3, s3, v2
	v_sub_co_ci_u32_e64 v1, s0, s0, v1, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v1
	v_lshrrev_b64 v[1:2], s1, v[9:10]
	v_mov_b32_e32 v5, v1
	v_mul_lo_u32 v12, v5, v4
	v_cvt_u32_f32_e64 v0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v0
	v_lshrrev_b64 v[1:2], s1, v[1:2]
	v_mov_b32_e32 v2, v1
                                        ; kill: def $vgpr9 killed $vgpr9 killed $vgpr9_vgpr10 killed $exec
	v_mul_lo_u32 v6, v9, v2
	v_mad_u64_u32 v[10:11], s0, v9, v4, 0
	v_mov_b32_e32 v1, v11
	v_add3_u32 v14, v1, v6, v12
	v_mad_u64_u32 v[12:13], s0, v4, v14, 0
	v_mov_b32_e32 v15, v12
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v1, v16
	v_mov_b32_e32 v12, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v6
	v_lshlrev_b64 v[12:13], s1, v[12:13]
	v_mov_b32_e32 v6, v13
	v_or_b32_e64 v1, v1, v6
	v_mov_b32_e32 v6, v15
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
	v_or_b32_e64 v15, v6, v12
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
                                        ; kill: def $vgpr10 killed $vgpr10 killed $vgpr10_vgpr11 killed $exec
	v_mul_hi_u32 v17, v4, v10
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v1
	v_mov_b32_e32 v11, v17
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v1, v18
	v_mov_b32_e32 v6, v16
	v_add_co_u32 v11, s0, v11, v12
	v_add_co_ci_u32_e64 v1, s0, v1, v6, s0
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v12
	v_mad_u64_u32 v[11:12], s0, v2, v10, 0
	v_mov_b32_e32 v15, v11
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v10, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v10
	v_mov_b32_e32 v10, v16
	v_mov_b32_e32 v11, v12
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v13, s0
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v13
	v_lshlrev_b64 v[12:13], s1, v[11:12]
	v_mov_b32_e32 v11, v13
	v_or_b32_e64 v10, v10, v11
	v_mov_b32_e32 v11, v15
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
	v_or_b32_e64 v12, v11, v12
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v10
	v_mov_b32_e32 v11, v12
	v_mov_b32_e32 v10, v13
	v_mad_u64_u32 v[12:13], s0, v2, v14, 0
	v_mov_b32_e32 v2, v13
	s_mov_b32 s0, 0
	v_writelane_b32 v27, s0, 11
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	v_add_co_u32 v1, vcc_lo, v1, v11
	v_add_co_ci_u32_e32 v6, vcc_lo, v6, v10, vcc_lo
	v_mov_b32_e32 v10, s0
	v_add_co_ci_u32_e32 v10, vcc_lo, v2, v10, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v2
	v_lshlrev_b64 v[10:11], s1, v[10:11]
	v_mov_b32_e32 v14, v11
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v2
	v_mov_b32_e32 v2, v13
	v_or_b32_e64 v2, v2, v14
	v_mov_b32_e32 v11, v10
	v_mov_b32_e32 v10, v12
	v_or_b32_e64 v11, v10, v11
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v6
	v_lshrrev_b64 v[13:14], s1, v[1:2]
	v_mov_b32_e32 v1, v13
	v_mov_b32_e32 v10, v11
	v_mov_b32_e32 v2, v14
	v_mov_b32_e32 v6, v12
	v_add_co_u32 v1, s3, v1, v10
	v_add_co_ci_u32_e64 v6, s3, v2, v6, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v6, v1
	v_add_co_u32 v4, s3, v4, v6
	v_lshrrev_b64 v[1:2], s1, v[1:2]
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	v_add_co_ci_u32_e64 v0, s3, v0, v1, s3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v0
	v_lshrrev_b64 v[1:2], s1, v[1:2]
	v_mov_b32_e32 v2, v1
	v_mad_u64_u32 v[12:13], s3, v9, v4, 0
	v_mov_b32_e32 v1, v12
	v_mad_u64_u32 v[14:15], s3, v2, v1, 0
	v_mov_b32_e32 v10, v14
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v6
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v14, v15
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v16, s3
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v16
	v_lshlrev_b64 v[14:15], s1, v[14:15]
	v_mov_b32_e32 v16, v15
	v_or_b32_e64 v6, v6, v16
                                        ; kill: def $vgpr10 killed $vgpr10 killed $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v14
	v_or_b32_e64 v14, v10, v11
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v6
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v6, v15
	v_mul_lo_u32 v9, v9, v2
	v_mul_lo_u32 v10, v5, v4
	v_mov_b32_e32 v5, v13
	v_add3_u32 v12, v5, v9, v10
	v_mad_u64_u32 v[13:14], s3, v4, v12, 0
	v_mov_b32_e32 v9, v13
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v5, v10
	v_mov_b32_e32 v13, v14
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v15, s3
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v15
	v_lshlrev_b64 v[13:14], s1, v[13:14]
	v_mov_b32_e32 v15, v14
	v_or_b32_e64 v5, v5, v15
                                        ; kill: def $vgpr9 killed $vgpr9 killed $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v13
	v_or_b32_e64 v13, v9, v10
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v5
	v_mul_hi_u32 v15, v4, v1
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v1, v16
	v_mov_b32_e32 v5, v14
	v_add_co_u32 v9, s3, v9, v10
	v_add_co_ci_u32_e64 v1, s3, v1, v5, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v1
	v_mov_b32_e32 v1, v9
	v_mov_b32_e32 v5, v10
	v_mad_u64_u32 v[9:10], s3, v2, v12, 0
	v_mov_b32_e32 v2, v10
	v_add_co_u32 v1, vcc_lo, v1, v11
	v_add_co_ci_u32_e32 v5, vcc_lo, v5, v6, vcc_lo
	v_mov_b32_e32 v6, s0
	v_add_co_ci_u32_e32 v11, vcc_lo, v2, v6, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_lshlrev_b64 v[12:13], s1, v[11:12]
	v_mov_b32_e32 v6, v13
	v_mov_b32_e32 v10, v9
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v2
	v_mov_b32_e32 v2, v11
	v_or_b32_e64 v2, v2, v6
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v6, v10
	v_or_b32_e64 v9, v6, v9
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v5
	v_lshrrev_b64 v[11:12], s1, v[1:2]
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v2, v12
	v_mov_b32_e32 v5, v10
	v_add_co_u32 v1, s3, v1, v6
	v_add_co_ci_u32_e64 v5, s3, v2, v5, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v5, v1
	v_add_co_u32 v6, s3, v4, v5
	v_lshrrev_b64 v[1:2], s1, v[1:2]
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	v_add_co_ci_u32_e64 v2, s3, v0, v1, s3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v1, v2
	v_lshrrev_b64 v[0:1], s1, v[0:1]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v2, v7
	v_mad_u64_u32 v[9:10], s3, v2, v1, 0
	v_mov_b32_e32 v4, v9
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v9, v10
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v11, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v11
	v_lshlrev_b64 v[9:10], s1, v[9:10]
	v_mov_b32_e32 v11, v10
	v_or_b32_e64 v0, v0, v11
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v9
	v_or_b32_e64 v10, v4, v5
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v0
	v_mul_hi_u32 v12, v2, v6
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v0
	v_mov_b32_e32 v4, v12
	v_mov_b32_e32 v9, v10
	v_mov_b32_e32 v0, v13
	v_mov_b32_e32 v5, v11
	v_add_co_u32 v4, s3, v4, v9
	v_add_co_ci_u32_e64 v0, s3, v0, v5, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr4_vgpr5 killed $exec
	v_lshrrev_b64 v[7:8], s1, v[7:8]
	v_mov_b32_e32 v4, v7
	v_mad_u64_u32 v[7:8], s3, v4, v6, 0
	v_mov_b32_e32 v10, v7
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v6
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v7, v8
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v9, s3
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v9
	v_lshlrev_b64 v[8:9], s1, v[7:8]
	v_mov_b32_e32 v7, v9
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v7, v10
                                        ; kill: def $vgpr8 killed $vgpr8 killed $vgpr8_vgpr9 killed $exec
	v_or_b32_e64 v8, v7, v8
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v6
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v6, v9
	v_mad_u64_u32 v[8:9], s3, v4, v1, 0
	v_mov_b32_e32 v1, v9
	v_add_co_u32 v0, vcc_lo, v0, v7
	v_add_co_ci_u32_e32 v5, vcc_lo, v5, v6, vcc_lo
	v_mov_b32_e32 v6, s0
	v_add_co_ci_u32_e32 v6, vcc_lo, v1, v6, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v1, s3
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v1
	v_lshlrev_b64 v[6:7], s1, v[6:7]
	v_mov_b32_e32 v10, v7
                                        ; kill: def $vgpr8 killed $vgpr8 killed $vgpr8_vgpr9 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v1
	v_mov_b32_e32 v1, v9
	v_or_b32_e64 v1, v1, v10
	v_mov_b32_e32 v7, v6
	v_mov_b32_e32 v6, v8
	v_or_b32_e64 v7, v6, v7
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v5
	v_lshrrev_b64 v[0:1], s1, v[0:1]
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v8
	v_add_co_u32 v8, s2, v5, v6
	v_add_co_ci_u32_e64 v0, s2, v0, v1, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_mov_b32_e32 v0, v8
	v_mad_u64_u32 v[6:7], s2, v3, v0, 0
	v_mov_b32_e32 v12, v7
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v1
	v_lshrrev_b64 v[10:11], s1, v[8:9]
	v_mov_b32_e32 v1, v10
	v_mad_u64_u32 v[10:11], s1, v3, v1, v[12:13]
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v1, v4, v5
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	v_sub_co_u32 v2, s2, v2, v6
	v_sub_co_ci_u32_e64 v6, s1, v1, s0, s2
	v_sub_co_u32 v1, s1, v2, v3
	v_sub_co_ci_u32_e64 v6, s1, v6, s0, s1
	v_cmp_eq_u32_e64 s3, v6, s0
	v_cmp_ge_u32_e64 s4, v1, v3
	s_mov_b32 s1, -1
	v_mov_b32_e32 v1, s1
	v_cndmask_b32_e64 v1, s0, v1, s4
	v_cndmask_b32_e64 v1, s1, v1, s3
	v_cmp_ne_u32_e64 s3, v1, s0
	s_mov_b64 s[6:7], 2
	v_mov_b32_e32 v6, v8
	s_mov_b32 s5, s6
	v_mov_b32_e32 v1, v9
	s_mov_b32 s4, s7
	v_add_co_u32 v6, s5, v6, s5
	v_add_co_ci_u32_e64 v1, s4, v1, s4, s5
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v1
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	s_mov_b64 s[6:7], 1
	v_mov_b32_e32 v7, v8
	s_mov_b32 s5, s6
	v_mov_b32_e32 v1, v9
	s_mov_b32 s4, s7
	v_add_co_u32 v7, s5, v7, s5
	v_add_co_ci_u32_e64 v1, s4, v1, s4, s5
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v1, v7
	v_cndmask_b32_e64 v1, v1, v6, s3
	v_sub_co_ci_u32_e64 v4, s2, v4, v5, s2
	v_cmp_eq_u32_e64 s2, v4, s0
	v_cmp_ge_u32_e64 s3, v2, v3
	v_mov_b32_e32 v2, s1
	v_cndmask_b32_e64 v2, s0, v2, s3
	v_cndmask_b32_e64 v2, s1, v2, s2
	v_cmp_ne_u32_e64 s0, v2, s0
	v_cndmask_b32_e64 v0, v0, v1, s0
	scratch_store_b32 off, v0, s33 offset:108
	s_branch .LBB83_22
.LBB83_25:                              ; %Flow3
                                        ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 6
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v27, 3
	v_readlane_b32 s1, v27, 5
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v27, s1, 2
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 1
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB83_20
	s_branch .LBB83_33
.LBB83_26:                              ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v26, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 8
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:48
	scratch_load_b128 v[12:15], off, s33 offset:64
	scratch_load_b32 v11, off, s33 offset:108
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v0, s33 offset:188 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v1, s33 offset:184 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v2, s33 offset:180 ; 4-byte Folded Spill
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v7, v12
	v_mov_b32_e32 v8, v13
	v_mov_b32_e32 v9, v14
	v_mov_b32_e32 v10, v15
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, subMul1_v2@rel32@lo+4
	s_addc_u32 s1, s1, subMul1_v2@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:184 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:180 ; 4-byte Folded Reload
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s15, v26, 2
	scratch_load_b32 v3, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v3, s33 offset:120
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb3@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:120
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 13
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_29
; %bb.27:                               ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v26, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b128 v[5:8], off, s33 offset:48
	scratch_load_b128 v[9:12], off, s33 offset:64
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add256@rel32@lo+4
	s_addc_u32 s1, s1, add256@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:44
	scratch_load_b32 v1, off, s33 offset:76
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, v1
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_30
; %bb.28:                               ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b128 v[5:8], off, s33 offset:48
	scratch_load_b128 v[9:12], off, s33 offset:64
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add256@rel32@lo+4
	s_addc_u32 s1, s1, add256@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB83_30
.LBB83_29:                              ; %Flow1
                                        ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 13
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB83_31
.LBB83_30:                              ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 14
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB83_29
.LBB83_31:                              ;   in Loop: Header=BB83_20 Depth=1
; %bb.32:                               ;   in Loop: Header=BB83_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 4
	scratch_load_b32 v0, off, s33 offset:104
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:104
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 5
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB83_25
.LBB83_33:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 12
	s_or_b32 exec_lo, exec_lo, s0
; %bb.34:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v26, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v26, 2
	v_readlane_b32 s14, v26, 3
	v_readlane_b32 s13, v26, 4
	v_readlane_b32 s12, v26, 5
	v_readlane_b32 s10, v26, 6
	v_readlane_b32 s11, v26, 7
	v_readlane_b32 s8, v26, 8
	v_readlane_b32 s9, v26, 9
	v_readlane_b32 s6, v26, 0
	v_readlane_b32 s7, v26, 1
	v_readlane_b32 s4, v26, 10
	v_readlane_b32 s5, v26, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_load_b32 v3, off, s33 offset:96
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, rshift3@rel32@lo+4
	s_addc_u32 s1, s1, rshift3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:124
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v27, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB83_35:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 16
	v_readlane_b32 s1, v27, 15
	v_writelane_b32 v27, s1, 17
	scratch_load_b32 v0, off, s33 offset:124
	scratch_load_b32 v1, off, s33 offset:92
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, s1, v1
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 18
	v_writelane_b32 v27, s0, 19
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v27, s0, 20
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB83_37
; %bb.36:                               ;   in Loop: Header=BB83_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:136 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v27, 2
	v_readlane_b32 s14, v27, 3
	v_readlane_b32 s13, v27, 4
	v_readlane_b32 s12, v27, 5
	v_readlane_b32 s10, v27, 6
	v_readlane_b32 s11, v27, 7
	v_readlane_b32 s8, v27, 8
	v_readlane_b32 s9, v27, 9
	v_readlane_b32 s6, v27, 0
	v_readlane_b32 s7, v27, 1
	v_readlane_b32 s4, v27, 10
	v_readlane_b32 s5, v27, 11
	scratch_load_b32 v31, off, s33 offset:176 ; 4-byte Folded Reload
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, rshiftByLimb3@rel32@lo+4
	s_addc_u32 s1, s1, rshiftByLimb3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB83_38
.LBB83_37:                              ; %Flow
                                        ;   in Loop: Header=BB83_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 20
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v27, 17
	v_readlane_b32 s1, v27, 19
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v27, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 15
	s_mov_b32 s1, s0
	v_writelane_b32 v27, s1, 21
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB83_35
	s_branch .LBB83_39
.LBB83_38:                              ;   in Loop: Header=BB83_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 18
	scratch_load_b32 v0, off, s33 offset:124
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:124
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v27, s0, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v27, s33 offset:140 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB83_37
.LBB83_39:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v27, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v27, 21
	s_or_b32 exec_lo, exec_lo, s0
; %bb.40:
	scratch_load_b128 v[0:3], off, s33 offset:16
	scratch_load_b32 v4, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:32
	scratch_load_b32 v4, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:92
	scratch_load_b32 v1, off, s33 offset:96
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, s0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v2
	v_readlane_b32 s30, v25, 0
	v_readlane_b32 s31, v25, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v25, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:196 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:200 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff30
	s_mov_b32 s33, s22
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end83:
	.size	modulo384to256, .Lfunc_end83-modulo384to256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 7332
; NumSgprs: 36
; NumVgprs: 32
; ScratchSize: 528
; MemoryBound: 0
	.text
	.hidden	modulo512to384                  ; -- Begin function modulo512to384
	.globl	modulo512to384
	.p2align	2
	.type	modulo512to384,@function
modulo512to384:                         ; @modulo512to384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s22, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v34, s33 offset:252 ; 4-byte Folded Spill
	scratch_store_b32 off, v35, s33 offset:256 ; 4-byte Folded Spill
	scratch_store_b32 off, v36, s33 offset:260 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x110
	v_writelane_b32 v34, s30, 0
	v_writelane_b32 v34, s31, 1
	scratch_store_b32 off, v31, s33 offset:232 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s6, 0
	v_writelane_b32 v36, s7, 1
	scratch_store_b32 off, v27, s33 offset:192 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:196 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:200 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:184 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:208 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:212 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:216 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:188 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:220 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:224 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:228 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:204 ; 4-byte Folded Spill
	v_mov_b32_e32 v17, v15
	scratch_load_b32 v15, off, s33 offset:228 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v14
	scratch_load_b32 v14, off, s33 offset:224 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v13
	scratch_load_b32 v13, off, s33 offset:220 ; 4-byte Folded Reload
	v_mov_b32_e32 v21, v11
	scratch_load_b32 v11, off, s33 offset:216 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v10
	scratch_load_b32 v10, off, s33 offset:212 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v9
	scratch_load_b32 v9, off, s33 offset:208 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v8
	scratch_load_b32 v8, off, s33 offset:204 ; 4-byte Folded Reload
	v_mov_b32_e32 v25, v7
	scratch_load_b32 v7, off, s33 offset:200 ; 4-byte Folded Reload
	v_mov_b32_e32 v26, v6
	scratch_load_b32 v6, off, s33 offset:196 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v5
	scratch_load_b32 v5, off, s33 offset:192 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v4
	scratch_load_b32 v4, off, s33 offset:188 ; 4-byte Folded Reload
	v_mov_b32_e32 v31, v3
	v_mov_b32_e32 v32, v2
	v_mov_b32_e32 v33, v1
	v_mov_b32_e32 v24, v0
	scratch_load_b32 v0, off, s33 offset:184 ; 4-byte Folded Reload
	v_writelane_b32 v36, s15, 2
	v_writelane_b32 v36, s14, 3
	v_writelane_b32 v36, s13, 4
	v_writelane_b32 v36, s12, 5
	v_writelane_b32 v36, s10, 6
	v_writelane_b32 v36, s11, 7
	v_writelane_b32 v36, s8, 8
	v_writelane_b32 v36, s9, 9
	v_writelane_b32 v36, s4, 10
	v_writelane_b32 v36, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v19
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v27
	v_mov_b32_e32 v22, v26
	v_mov_b32_e32 v23, v25
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr24 killed $vgpr24 def $vgpr24_vgpr25_vgpr26_vgpr27 killed $exec
	v_mov_b32_e32 v25, v33
	v_mov_b32_e32 v26, v32
	v_mov_b32_e32 v27, v31
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[24:27], s33
	scratch_store_b128 off, v[20:23], s33 offset:16
	scratch_store_b128 off, v[16:19], s33 offset:32
	scratch_store_b128 off, v[12:15], s33 offset:48
	scratch_store_b128 off, v[8:11], s33 offset:64
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_store_b32 off, v28, s33 offset:112
	scratch_store_b32 off, v29, s33 offset:116
	scratch_store_b32 off, v30, s33 offset:120
	v_mov_b32_e32 v0, 16
	scratch_store_b32 off, v0, s33 offset:124
	v_mov_b32_e32 v0, 12
	scratch_store_b32 off, v0, s33 offset:128
	s_mov_b32 s0, 0
	v_writelane_b32 v36, s0, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_1:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 12
	v_writelane_b32 v36, s0, 13
	scratch_load_b32 v0, off, s33 offset:128
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_writelane_b32 v36, s0, 14
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_3
; %bb.2:                                ;   in Loop: Header=BB84_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:108
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_3:                               ;   in Loop: Header=BB84_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 15
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v36, 14
	s_mov_b32 s0, -1
	v_writelane_b32 v36, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 17
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_5
; %bb.4:                                ;   in Loop: Header=BB84_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb3@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:128
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:128
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v36, s0, 16
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_5:                               ; %Flow6
                                        ;   in Loop: Header=BB84_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v36, 17
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v36, 13
	v_readlane_b32 s0, v36, 16
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s1
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 18
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB84_1
; %bb.6:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 18
	s_or_b32 exec_lo, exec_lo, s0
; %bb.7:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:132
	v_mov_b32_e32 v0, 0x80000000
	scratch_store_b32 off, v0, s33 offset:136
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v36, s0, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_8:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 20
	v_readlane_b32 s1, v36, 19
	v_writelane_b32 v36, s1, 21
	scratch_load_b32 v0, off, s33 offset:108
	scratch_load_b32 v1, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, v1
	s_mov_b32 s1, 0
	v_cmp_eq_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 22
	v_writelane_b32 v36, s0, 23
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 24
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_10
; %bb.9:                                ;   in Loop: Header=BB84_8 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 22
	scratch_load_b32 v0, off, s33 offset:132
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:132
	scratch_load_b32 v0, off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s1, v0
	scratch_store_b32 off, v0, s33 offset:136
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 23
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_10:                              ; %Flow5
                                        ;   in Loop: Header=BB84_8 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 21
	v_readlane_b32 s1, v36, 23
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 20
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 19
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 25
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB84_8
; %bb.11:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:132
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift4@rel32@lo+4
	s_addc_u32 s1, s1, lshift4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v3, off, s33 offset:132
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift3@rel32@lo+4
	s_addc_u32 s1, s1, lshift3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_writelane_b32 v36, s0, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_13:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 26
	v_writelane_b32 v36, s0, 27
	scratch_load_b32 v0, off, s33 offset:124
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_writelane_b32 v36, s0, 28
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 29
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_15
; %bb.14:                               ;   in Loop: Header=BB84_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:60
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 28
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_15:                              ;   in Loop: Header=BB84_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 29
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v36, 28
	s_mov_b32 s0, -1
	v_writelane_b32 v36, s0, 30
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 31
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_17
; %bb.16:                               ;   in Loop: Header=BB84_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb4@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:124
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:124
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v36, s0, 30
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_17:                              ; %Flow4
                                        ;   in Loop: Header=BB84_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v36, 31
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v36, 27
	v_readlane_b32 s0, v36, 30
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s1
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:176 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, s0
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s1, 0
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB84_13
; %bb.18:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 0
	s_or_b32 exec_lo, exec_lo, s0
; %bb.19:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:140
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v36, s0, 1
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_20:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 2
	v_readlane_b32 s1, v36, 1
	v_writelane_b32 v36, s1, 3
	scratch_load_b32 v0, off, s33 offset:140
	scratch_load_b32 v1, off, s33 offset:124
	scratch_load_b32 v2, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, v1, v2
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 4
	v_writelane_b32 v36, s0, 5
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 6
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_25
; %bb.21:                               ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:60
	scratch_load_b32 v1, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s0, v0, v1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v36, s1, 7
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_22
	s_branch .LBB84_24
.LBB84_22:                              ; %Flow2
                                        ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 7
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v36, s0, 8
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB84_26
; %bb.23:                               ;   in Loop: Header=BB84_20 Depth=1
	v_mov_b32_e32 v0, -1
	scratch_store_b32 off, v0, s33 offset:144
	s_branch .LBB84_26
.LBB84_24:                              ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b128 v[5:8], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s1, 32
	v_writelane_b32 v36, s1, 9
	v_lshlrev_b64 v[3:4], s1, v[0:1]
	v_mov_b32_e32 v0, v7
	s_mov_b32 s2, 0
	v_writelane_b32 v36, s2, 10
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b64 v[7:8], off, s33 offset:152
	scratch_load_b32 v3, off, s33 offset:108
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s2
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v6, v0
	v_cvt_f32_u32_e64 v0, v3
	s_mov_b32 s3, 0x4f800000
	s_mov_b32 s0, 0
	v_fmac_f32_e64 v0, s0, s3
	v_rcp_f32_e64 v0, v0
	s_mov_b32 s0, 0x5f7ffffc
	s_waitcnt_depctr 0xfff
	v_mul_f32_e64 v1, v0, s0
	s_mov_b32 s0, 0x2f800000
	v_mul_f32_e64 v0, v1, s0
	v_trunc_f32_e64 v0, v0
	s_mov_b32 s0, 0xcf800000
	v_fmac_f32_e64 v1, v0, s0
	v_cvt_u32_f32_e64 v4, v1
	s_mov_b64 s[4:5], 0
	s_mov_b32 s3, s4
	v_mov_b32_e32 v2, v5
	s_mov_b32 s0, s5
	v_mov_b32_e32 v1, v6
	v_sub_co_u32 v9, s3, s3, v2
	v_sub_co_ci_u32_e64 v1, s0, s0, v1, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v1
	v_lshrrev_b64 v[1:2], s1, v[9:10]
	v_mov_b32_e32 v5, v1
	v_mul_lo_u32 v12, v5, v4
	v_cvt_u32_f32_e64 v0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v0
	v_lshrrev_b64 v[1:2], s1, v[1:2]
	v_mov_b32_e32 v2, v1
                                        ; kill: def $vgpr9 killed $vgpr9 killed $vgpr9_vgpr10 killed $exec
	v_mul_lo_u32 v6, v9, v2
	v_mad_u64_u32 v[10:11], s0, v9, v4, 0
	v_mov_b32_e32 v1, v11
	v_add3_u32 v14, v1, v6, v12
	v_mad_u64_u32 v[12:13], s0, v4, v14, 0
	v_mov_b32_e32 v15, v12
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v1, v16
	v_mov_b32_e32 v12, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v6
	v_lshlrev_b64 v[12:13], s1, v[12:13]
	v_mov_b32_e32 v6, v13
	v_or_b32_e64 v1, v1, v6
	v_mov_b32_e32 v6, v15
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
	v_or_b32_e64 v15, v6, v12
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
                                        ; kill: def $vgpr10 killed $vgpr10 killed $vgpr10_vgpr11 killed $exec
	v_mul_hi_u32 v17, v4, v10
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v1
	v_mov_b32_e32 v11, v17
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v1, v18
	v_mov_b32_e32 v6, v16
	v_add_co_u32 v11, s0, v11, v12
	v_add_co_ci_u32_e64 v1, s0, v1, v6, s0
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v12
	v_mad_u64_u32 v[11:12], s0, v2, v10, 0
	v_mov_b32_e32 v15, v11
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v10, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v10
	v_mov_b32_e32 v10, v16
	v_mov_b32_e32 v11, v12
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v13, s0
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v13
	v_lshlrev_b64 v[12:13], s1, v[11:12]
	v_mov_b32_e32 v11, v13
	v_or_b32_e64 v10, v10, v11
	v_mov_b32_e32 v11, v15
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
	v_or_b32_e64 v12, v11, v12
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v10
	v_mov_b32_e32 v11, v12
	v_mov_b32_e32 v10, v13
	v_mad_u64_u32 v[12:13], s0, v2, v14, 0
	v_mov_b32_e32 v2, v13
	s_mov_b32 s0, 0
	v_writelane_b32 v36, s0, 11
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	v_add_co_u32 v1, vcc_lo, v1, v11
	v_add_co_ci_u32_e32 v6, vcc_lo, v6, v10, vcc_lo
	v_mov_b32_e32 v10, s0
	v_add_co_ci_u32_e32 v10, vcc_lo, v2, v10, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v2
	v_lshlrev_b64 v[10:11], s1, v[10:11]
	v_mov_b32_e32 v14, v11
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v2
	v_mov_b32_e32 v2, v13
	v_or_b32_e64 v2, v2, v14
	v_mov_b32_e32 v11, v10
	v_mov_b32_e32 v10, v12
	v_or_b32_e64 v11, v10, v11
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v6
	v_lshrrev_b64 v[13:14], s1, v[1:2]
	v_mov_b32_e32 v1, v13
	v_mov_b32_e32 v10, v11
	v_mov_b32_e32 v2, v14
	v_mov_b32_e32 v6, v12
	v_add_co_u32 v1, s3, v1, v10
	v_add_co_ci_u32_e64 v6, s3, v2, v6, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v6, v1
	v_add_co_u32 v4, s3, v4, v6
	v_lshrrev_b64 v[1:2], s1, v[1:2]
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	v_add_co_ci_u32_e64 v0, s3, v0, v1, s3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v0
	v_lshrrev_b64 v[1:2], s1, v[1:2]
	v_mov_b32_e32 v2, v1
	v_mad_u64_u32 v[12:13], s3, v9, v4, 0
	v_mov_b32_e32 v1, v12
	v_mad_u64_u32 v[14:15], s3, v2, v1, 0
	v_mov_b32_e32 v10, v14
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v6
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v14, v15
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v16, s3
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v16
	v_lshlrev_b64 v[14:15], s1, v[14:15]
	v_mov_b32_e32 v16, v15
	v_or_b32_e64 v6, v6, v16
                                        ; kill: def $vgpr10 killed $vgpr10 killed $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v14
	v_or_b32_e64 v14, v10, v11
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v6
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v6, v15
	v_mul_lo_u32 v9, v9, v2
	v_mul_lo_u32 v10, v5, v4
	v_mov_b32_e32 v5, v13
	v_add3_u32 v12, v5, v9, v10
	v_mad_u64_u32 v[13:14], s3, v4, v12, 0
	v_mov_b32_e32 v9, v13
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v5, v10
	v_mov_b32_e32 v13, v14
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v15, s3
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v15
	v_lshlrev_b64 v[13:14], s1, v[13:14]
	v_mov_b32_e32 v15, v14
	v_or_b32_e64 v5, v5, v15
                                        ; kill: def $vgpr9 killed $vgpr9 killed $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v13
	v_or_b32_e64 v13, v9, v10
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v5
	v_mul_hi_u32 v15, v4, v1
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v1, v16
	v_mov_b32_e32 v5, v14
	v_add_co_u32 v9, s3, v9, v10
	v_add_co_ci_u32_e64 v1, s3, v1, v5, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v1
	v_mov_b32_e32 v1, v9
	v_mov_b32_e32 v5, v10
	v_mad_u64_u32 v[9:10], s3, v2, v12, 0
	v_mov_b32_e32 v2, v10
	v_add_co_u32 v1, vcc_lo, v1, v11
	v_add_co_ci_u32_e32 v5, vcc_lo, v5, v6, vcc_lo
	v_mov_b32_e32 v6, s0
	v_add_co_ci_u32_e32 v11, vcc_lo, v2, v6, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_lshlrev_b64 v[12:13], s1, v[11:12]
	v_mov_b32_e32 v6, v13
	v_mov_b32_e32 v10, v9
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v2
	v_mov_b32_e32 v2, v11
	v_or_b32_e64 v2, v2, v6
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v6, v10
	v_or_b32_e64 v9, v6, v9
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v5
	v_lshrrev_b64 v[11:12], s1, v[1:2]
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v2, v12
	v_mov_b32_e32 v5, v10
	v_add_co_u32 v1, s3, v1, v6
	v_add_co_ci_u32_e64 v5, s3, v2, v5, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v5, v1
	v_add_co_u32 v6, s3, v4, v5
	v_lshrrev_b64 v[1:2], s1, v[1:2]
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	v_add_co_ci_u32_e64 v2, s3, v0, v1, s3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v1, v2
	v_lshrrev_b64 v[0:1], s1, v[0:1]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v2, v7
	v_mad_u64_u32 v[9:10], s3, v2, v1, 0
	v_mov_b32_e32 v4, v9
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v9, v10
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v11, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v11
	v_lshlrev_b64 v[9:10], s1, v[9:10]
	v_mov_b32_e32 v11, v10
	v_or_b32_e64 v0, v0, v11
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v9
	v_or_b32_e64 v10, v4, v5
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v0
	v_mul_hi_u32 v12, v2, v6
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v0
	v_mov_b32_e32 v4, v12
	v_mov_b32_e32 v9, v10
	v_mov_b32_e32 v0, v13
	v_mov_b32_e32 v5, v11
	v_add_co_u32 v4, s3, v4, v9
	v_add_co_ci_u32_e64 v0, s3, v0, v5, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr4_vgpr5 killed $exec
	v_lshrrev_b64 v[7:8], s1, v[7:8]
	v_mov_b32_e32 v4, v7
	v_mad_u64_u32 v[7:8], s3, v4, v6, 0
	v_mov_b32_e32 v10, v7
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v6
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v7, v8
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v9, s3
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v9
	v_lshlrev_b64 v[8:9], s1, v[7:8]
	v_mov_b32_e32 v7, v9
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v7, v10
                                        ; kill: def $vgpr8 killed $vgpr8 killed $vgpr8_vgpr9 killed $exec
	v_or_b32_e64 v8, v7, v8
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v6
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v6, v9
	v_mad_u64_u32 v[8:9], s3, v4, v1, 0
	v_mov_b32_e32 v1, v9
	v_add_co_u32 v0, vcc_lo, v0, v7
	v_add_co_ci_u32_e32 v5, vcc_lo, v5, v6, vcc_lo
	v_mov_b32_e32 v6, s0
	v_add_co_ci_u32_e32 v6, vcc_lo, v1, v6, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v1, s3
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v1
	v_lshlrev_b64 v[6:7], s1, v[6:7]
	v_mov_b32_e32 v10, v7
                                        ; kill: def $vgpr8 killed $vgpr8 killed $vgpr8_vgpr9 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v1
	v_mov_b32_e32 v1, v9
	v_or_b32_e64 v1, v1, v10
	v_mov_b32_e32 v7, v6
	v_mov_b32_e32 v6, v8
	v_or_b32_e64 v7, v6, v7
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v5
	v_lshrrev_b64 v[0:1], s1, v[0:1]
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v8
	v_add_co_u32 v8, s2, v5, v6
	v_add_co_ci_u32_e64 v0, s2, v0, v1, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_mov_b32_e32 v0, v8
	v_mad_u64_u32 v[6:7], s2, v3, v0, 0
	v_mov_b32_e32 v12, v7
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v1
	v_lshrrev_b64 v[10:11], s1, v[8:9]
	v_mov_b32_e32 v1, v10
	v_mad_u64_u32 v[10:11], s1, v3, v1, v[12:13]
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v1, v4, v5
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	v_sub_co_u32 v2, s2, v2, v6
	v_sub_co_ci_u32_e64 v6, s1, v1, s0, s2
	v_sub_co_u32 v1, s1, v2, v3
	v_sub_co_ci_u32_e64 v6, s1, v6, s0, s1
	v_cmp_eq_u32_e64 s3, v6, s0
	v_cmp_ge_u32_e64 s4, v1, v3
	s_mov_b32 s1, -1
	v_mov_b32_e32 v1, s1
	v_cndmask_b32_e64 v1, s0, v1, s4
	v_cndmask_b32_e64 v1, s1, v1, s3
	v_cmp_ne_u32_e64 s3, v1, s0
	s_mov_b64 s[6:7], 2
	v_mov_b32_e32 v6, v8
	s_mov_b32 s5, s6
	v_mov_b32_e32 v1, v9
	s_mov_b32 s4, s7
	v_add_co_u32 v6, s5, v6, s5
	v_add_co_ci_u32_e64 v1, s4, v1, s4, s5
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v1
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	s_mov_b64 s[6:7], 1
	v_mov_b32_e32 v7, v8
	s_mov_b32 s5, s6
	v_mov_b32_e32 v1, v9
	s_mov_b32 s4, s7
	v_add_co_u32 v7, s5, v7, s5
	v_add_co_ci_u32_e64 v1, s4, v1, s4, s5
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v1, v7
	v_cndmask_b32_e64 v1, v1, v6, s3
	v_sub_co_ci_u32_e64 v4, s2, v4, v5, s2
	v_cmp_eq_u32_e64 s2, v4, s0
	v_cmp_ge_u32_e64 s3, v2, v3
	v_mov_b32_e32 v2, s1
	v_cndmask_b32_e64 v2, s0, v2, s3
	v_cndmask_b32_e64 v2, s1, v2, s2
	v_cmp_ne_u32_e64 s0, v2, s0
	v_cndmask_b32_e64 v0, v0, v1, s0
	scratch_store_b32 off, v0, s33 offset:144
	s_branch .LBB84_22
.LBB84_25:                              ; %Flow3
                                        ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 6
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 3
	v_readlane_b32 s1, v36, 5
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 2
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 1
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB84_20
	s_branch .LBB84_33
.LBB84_26:                              ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 8
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:64
	scratch_load_b128 v[11:14], off, s33 offset:80
	scratch_load_b128 v[17:20], off, s33 offset:96
	scratch_load_b32 v16, off, s33 offset:144
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v0, s33 offset:248 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v1, s33 offset:244 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v2, s33 offset:240 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v3, s33 offset:236 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v12, v17
	v_mov_b32_e32 v13, v18
	v_mov_b32_e32 v14, v19
	v_mov_b32_e32 v15, v20
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, subMul1_v3@rel32@lo+4
	s_addc_u32 s1, s1, subMul1_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:248 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:244 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:240 ; 4-byte Folded Reload
	scratch_load_b32 v3, off, s33 offset:236 ; 4-byte Folded Reload
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s15, v35, 2
	scratch_load_b32 v4, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v4, s33 offset:160
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb4@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:160
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 13
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_29
; %bb.27:                               ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:64
	scratch_load_b128 v[10:13], off, s33 offset:80
	scratch_load_b128 v[14:17], off, s33 offset:96
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add384@rel32@lo+4
	s_addc_u32 s1, s1, add384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:60
	scratch_load_b32 v1, off, s33 offset:108
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, v1
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_30
; %bb.28:                               ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:64
	scratch_load_b128 v[10:13], off, s33 offset:80
	scratch_load_b128 v[14:17], off, s33 offset:96
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add384@rel32@lo+4
	s_addc_u32 s1, s1, add384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB84_30
.LBB84_29:                              ; %Flow1
                                        ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 13
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB84_31
.LBB84_30:                              ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 14
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB84_29
.LBB84_31:                              ;   in Loop: Header=BB84_20 Depth=1
; %bb.32:                               ;   in Loop: Header=BB84_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 4
	scratch_load_b32 v0, off, s33 offset:140
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:140
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 5
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB84_25
.LBB84_33:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 12
	s_or_b32 exec_lo, exec_lo, s0
; %bb.34:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v35, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v35, 2
	v_readlane_b32 s14, v35, 3
	v_readlane_b32 s13, v35, 4
	v_readlane_b32 s12, v35, 5
	v_readlane_b32 s10, v35, 6
	v_readlane_b32 s11, v35, 7
	v_readlane_b32 s8, v35, 8
	v_readlane_b32 s9, v35, 9
	v_readlane_b32 s6, v35, 0
	v_readlane_b32 s7, v35, 1
	v_readlane_b32 s4, v35, 10
	v_readlane_b32 s5, v35, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:132
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, rshift4@rel32@lo+4
	s_addc_u32 s1, s1, rshift4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:164
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v36, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB84_35:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 16
	v_readlane_b32 s1, v36, 15
	v_writelane_b32 v36, s1, 17
	scratch_load_b32 v0, off, s33 offset:164
	scratch_load_b32 v1, off, s33 offset:128
	s_mov_b32 s1, 12
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, s1, v1
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 18
	v_writelane_b32 v36, s0, 19
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v36, s0, 20
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB84_37
; %bb.36:                               ;   in Loop: Header=BB84_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:176 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v36, 2
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	scratch_load_b32 v31, off, s33 offset:232 ; 4-byte Folded Reload
	v_mov_b32_e32 v0, s33
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 16
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 32
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, rshiftByLimb4@rel32@lo+4
	s_addc_u32 s1, s1, rshiftByLimb4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB84_38
.LBB84_37:                              ; %Flow
                                        ;   in Loop: Header=BB84_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 20
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v36, 17
	v_readlane_b32 s1, v36, 19
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v36, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 15
	s_mov_b32 s1, s0
	v_writelane_b32 v36, s1, 21
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB84_35
	s_branch .LBB84_39
.LBB84_38:                              ;   in Loop: Header=BB84_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 18
	scratch_load_b32 v0, off, s33 offset:164
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:164
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v36, s0, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v36, s33 offset:180 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB84_37
.LBB84_39:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v36, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v36, 21
	s_or_b32 exec_lo, exec_lo, s0
; %bb.40:
	scratch_load_b128 v[0:3], off, s33 offset:16
	scratch_load_b32 v4, off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:32
	scratch_load_b32 v4, off, s33 offset:116
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:48
	scratch_load_b32 v4, off, s33 offset:120
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:128
	scratch_load_b32 v1, off, s33 offset:132
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, s0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b64 v[1:2], off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v2
	v_readlane_b32 s30, v34, 0
	v_readlane_b32 s31, v34, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v34, off, s33 offset:252 ; 4-byte Folded Reload
	scratch_load_b32 v35, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v36, off, s33 offset:260 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffef0
	s_mov_b32 s33, s22
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end84:
	.size	modulo512to384, .Lfunc_end84-modulo512to384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 7676
; NumSgprs: 36
; NumVgprs: 37
; ScratchSize: 672
; MemoryBound: 0
	.text
	.hidden	modulo640to512                  ; -- Begin function modulo640to512
	.globl	modulo640to512
	.p2align	2
	.type	modulo640to512,@function
modulo640to512:                         ; @modulo640to512
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s22, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v39, s33 offset:316 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, -1
	scratch_store_b32 off, v40, s33 offset:320 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:324 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x150
	v_writelane_b32 v39, s30, 0
	v_writelane_b32 v39, s31, 1
	scratch_store_b32 off, v31, s33 offset:292 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr41 : SGPR spill to VGPR lane
	v_writelane_b32 v41, s6, 0
	v_writelane_b32 v41, s7, 1
	scratch_store_b32 off, v30, s33 offset:256 ; 4-byte Folded Spill
	scratch_store_b32 off, v29, s33 offset:260 ; 4-byte Folded Spill
	scratch_store_b32 off, v28, s33 offset:248 ; 4-byte Folded Spill
	scratch_store_b32 off, v27, s33 offset:268 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:272 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:276 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:252 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:280 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:284 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:288 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:264 ; 4-byte Folded Spill
	v_mov_b32_e32 v21, v19
	scratch_load_b32 v19, off, s33 offset:288 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v18
	scratch_load_b32 v18, off, s33 offset:284 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v17
	scratch_load_b32 v17, off, s33 offset:280 ; 4-byte Folded Reload
	v_mov_b32_e32 v25, v15
	scratch_load_b32 v15, off, s33 offset:276 ; 4-byte Folded Reload
	v_mov_b32_e32 v26, v14
	scratch_load_b32 v14, off, s33 offset:272 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v13
	scratch_load_b32 v13, off, s33 offset:268 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v12
	scratch_load_b32 v12, off, s33 offset:264 ; 4-byte Folded Reload
	v_mov_b32_e32 v29, v11
	scratch_load_b32 v11, off, s33 offset:260 ; 4-byte Folded Reload
	v_mov_b32_e32 v30, v10
	scratch_load_b32 v10, off, s33 offset:256 ; 4-byte Folded Reload
	v_mov_b32_e32 v31, v9
	v_mov_b32_e32 v24, v8
	scratch_load_b32 v8, off, s33 offset:252 ; 4-byte Folded Reload
	v_mov_b32_e32 v33, v7
	v_mov_b32_e32 v34, v6
	v_mov_b32_e32 v35, v5
	v_mov_b32_e32 v28, v4
	scratch_load_b32 v4, off, s33 offset:248 ; 4-byte Folded Reload
	v_mov_b32_e32 v36, v3
	v_mov_b32_e32 v37, v2
	v_mov_b32_e32 v38, v1
	v_mov_b32_e32 v32, v0
	v_writelane_b32 v41, s15, 2
	v_writelane_b32 v41, s14, 3
	v_writelane_b32 v41, s13, 4
	v_writelane_b32 v41, s12, 5
	v_writelane_b32 v41, s10, 6
	v_writelane_b32 v41, s11, 7
	v_writelane_b32 v41, s8, 8
	v_writelane_b32 v41, s9, 9
	v_writelane_b32 v41, s4, 10
	v_writelane_b32 v41, s5, 11
	scratch_load_b32 v5, off, s33 offset:16
	scratch_load_b32 v6, off, s33 offset:12
	scratch_load_b32 v7, off, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:4
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_load_b32 v9, off, s33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v19
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v27
	v_mov_b32_e32 v22, v26
	v_mov_b32_e32 v23, v25
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr24 killed $vgpr24 def $vgpr24_vgpr25_vgpr26_vgpr27 killed $exec
	v_mov_b32_e32 v25, v31
	v_mov_b32_e32 v26, v30
	v_mov_b32_e32 v27, v29
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr28 killed $vgpr28 def $vgpr28_vgpr29_vgpr30_vgpr31 killed $exec
	v_mov_b32_e32 v29, v35
	v_mov_b32_e32 v30, v34
	v_mov_b32_e32 v31, v33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr32 killed $vgpr32 def $vgpr32_vgpr33_vgpr34_vgpr35 killed $exec
	v_mov_b32_e32 v33, v38
	v_mov_b32_e32 v34, v37
	v_mov_b32_e32 v35, v36
	scratch_load_b32 v36, off, s33 offset:32
	scratch_load_b32 v36, off, s33 offset:28
	scratch_load_b32 v36, off, s33 offset:24
	scratch_load_b32 v36, off, s33 offset:20
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[32:35], s33 offset:48
	scratch_store_b128 off, v[28:31], s33 offset:64
	scratch_store_b128 off, v[24:27], s33 offset:80
	scratch_store_b128 off, v[20:23], s33 offset:96
	scratch_store_b128 off, v[16:19], s33 offset:112
	scratch_store_b128 off, v[12:15], s33 offset:128
	scratch_store_b128 off, v[8:11], s33 offset:144
	scratch_store_b128 off, v[4:7], s33 offset:160
	scratch_store_b128 off, v[0:3], s33 offset:176
	v_mov_b32_e32 v0, 20
	scratch_store_b32 off, v0, s33 offset:192
	v_mov_b32_e32 v0, 16
	scratch_store_b32 off, v0, s33 offset:196
	s_mov_b32 s0, 0
	v_writelane_b32 v41, s0, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_1:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 12
	v_writelane_b32 v41, s0, 13
	scratch_load_b32 v0, off, s33 offset:196
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_writelane_b32 v41, s0, 14
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_3
; %bb.2:                                ;   in Loop: Header=BB85_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:188
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_3:                               ;   in Loop: Header=BB85_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 15
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v41, 14
	s_mov_b32 s0, -1
	v_writelane_b32 v41, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 17
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_5
; %bb.4:                                ;   in Loop: Header=BB85_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb4@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:196
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:196
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v41, s0, 16
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_5:                               ; %Flow6
                                        ;   in Loop: Header=BB85_1 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v41, 17
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v41, 13
	v_readlane_b32 s0, v41, 16
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s1
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 18
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB85_1
; %bb.6:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 18
	s_or_b32 exec_lo, exec_lo, s0
; %bb.7:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:200
	v_mov_b32_e32 v0, 0x80000000
	scratch_store_b32 off, v0, s33 offset:204
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v41, s0, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_8:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 20
	v_readlane_b32 s1, v41, 19
	v_writelane_b32 v41, s1, 21
	scratch_load_b32 v0, off, s33 offset:188
	scratch_load_b32 v1, off, s33 offset:204
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, v1
	s_mov_b32 s1, 0
	v_cmp_eq_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 22
	v_writelane_b32 v41, s0, 23
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 24
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_10
; %bb.9:                                ;   in Loop: Header=BB85_8 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 22
	scratch_load_b32 v0, off, s33 offset:200
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:200
	scratch_load_b32 v0, off, s33 offset:204
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s1, v0
	scratch_store_b32 off, v0, s33 offset:204
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 23
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_10:                              ; %Flow5
                                        ;   in Loop: Header=BB85_8 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v41, 21
	v_readlane_b32 s1, v41, 23
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v41, s1, 20
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 19
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 25
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB85_8
; %bb.11:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 25
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v5, off, s33 offset:200
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v4, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift5@rel32@lo+4
	s_addc_u32 s1, s1, lshift5@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v4, off, s33 offset:200
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift4@rel32@lo+4
	s_addc_u32 s1, s1, lshift4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
	v_writelane_b32 v41, s0, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_13:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 26
	v_writelane_b32 v41, s0, 27
	scratch_load_b32 v0, off, s33 offset:192
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_writelane_b32 v41, s0, 28
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 29
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_15
; %bb.14:                               ;   in Loop: Header=BB85_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:124
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 28
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_15:                              ;   in Loop: Header=BB85_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 29
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v41, 28
	s_mov_b32 s0, -1
	v_writelane_b32 v41, s0, 30
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 31
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_17
; %bb.16:                               ;   in Loop: Header=BB85_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v4, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb5@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb5@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:192
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:192
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v41, s0, 30
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_17:                              ; %Flow4
                                        ;   in Loop: Header=BB85_13 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v41, 31
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v41, 27
	v_readlane_b32 s0, v41, 30
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s1
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 26
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 s1, s0
                                        ; implicit-def: $vgpr41 : SGPR spill to VGPR lane
	v_writelane_b32 v41, s1, 0
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB85_13
; %bb.18:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 0
	s_or_b32 exec_lo, exec_lo, s0
; %bb.19:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:208
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v41, s0, 1
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_20:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 2
	v_readlane_b32 s1, v41, 1
	v_writelane_b32 v41, s1, 3
	scratch_load_b32 v0, off, s33 offset:208
	scratch_load_b32 v1, off, s33 offset:192
	scratch_load_b32 v2, off, s33 offset:196
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, v1, v2
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 4
	v_writelane_b32 v41, s0, 5
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 6
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_25
; %bb.21:                               ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v0, off, s33 offset:124
	scratch_load_b32 v1, off, s33 offset:188
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s0, v0, v1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 7
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_22
	s_branch .LBB85_24
.LBB85_22:                              ; %Flow2
                                        ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 7
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 8
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB85_26
; %bb.23:                               ;   in Loop: Header=BB85_20 Depth=1
	v_mov_b32_e32 v0, -1
	scratch_store_b32 off, v0, s33 offset:212
	s_branch .LBB85_26
.LBB85_24:                              ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b128 v[5:8], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v8
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s1, 32
	v_writelane_b32 v41, s1, 9
	v_lshlrev_b64 v[3:4], s1, v[0:1]
	v_mov_b32_e32 v0, v7
	s_mov_b32 s2, 0
	v_writelane_b32 v41, s2, 10
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v5, v1
	v_mov_b32_e32 v2, v4
	v_or_b32_e64 v2, v2, v5
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b64 v[7:8], off, s33 offset:216
	scratch_load_b32 v3, off, s33 offset:188
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s2
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v6, v0
	v_cvt_f32_u32_e64 v0, v3
	s_mov_b32 s3, 0x4f800000
	s_mov_b32 s0, 0
	v_fmac_f32_e64 v0, s0, s3
	v_rcp_f32_e64 v0, v0
	s_mov_b32 s0, 0x5f7ffffc
	s_waitcnt_depctr 0xfff
	v_mul_f32_e64 v1, v0, s0
	s_mov_b32 s0, 0x2f800000
	v_mul_f32_e64 v0, v1, s0
	v_trunc_f32_e64 v0, v0
	s_mov_b32 s0, 0xcf800000
	v_fmac_f32_e64 v1, v0, s0
	v_cvt_u32_f32_e64 v4, v1
	s_mov_b64 s[4:5], 0
	s_mov_b32 s3, s4
	v_mov_b32_e32 v2, v5
	s_mov_b32 s0, s5
	v_mov_b32_e32 v1, v6
	v_sub_co_u32 v9, s3, s3, v2
	v_sub_co_ci_u32_e64 v1, s0, s0, v1, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v1
	v_lshrrev_b64 v[1:2], s1, v[9:10]
	v_mov_b32_e32 v5, v1
	v_mul_lo_u32 v12, v5, v4
	v_cvt_u32_f32_e64 v0, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v0
	v_lshrrev_b64 v[1:2], s1, v[1:2]
	v_mov_b32_e32 v2, v1
                                        ; kill: def $vgpr9 killed $vgpr9 killed $vgpr9_vgpr10 killed $exec
	v_mul_lo_u32 v6, v9, v2
	v_mad_u64_u32 v[10:11], s0, v9, v4, 0
	v_mov_b32_e32 v1, v11
	v_add3_u32 v14, v1, v6, v12
	v_mad_u64_u32 v[12:13], s0, v4, v14, 0
	v_mov_b32_e32 v15, v12
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v1, v16
	v_mov_b32_e32 v12, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v6
	v_lshlrev_b64 v[12:13], s1, v[12:13]
	v_mov_b32_e32 v6, v13
	v_or_b32_e64 v1, v1, v6
	v_mov_b32_e32 v6, v15
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
	v_or_b32_e64 v15, v6, v12
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
                                        ; kill: def $vgpr10 killed $vgpr10 killed $vgpr10_vgpr11 killed $exec
	v_mul_hi_u32 v17, v4, v10
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v18, v1
	v_mov_b32_e32 v11, v17
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v1, v18
	v_mov_b32_e32 v6, v16
	v_add_co_u32 v11, s0, v11, v12
	v_add_co_ci_u32_e64 v1, s0, v1, v6, s0
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v12
	v_mad_u64_u32 v[11:12], s0, v2, v10, 0
	v_mov_b32_e32 v15, v11
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v10, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v10
	v_mov_b32_e32 v10, v16
	v_mov_b32_e32 v11, v12
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v13, s0
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v13
	v_lshlrev_b64 v[12:13], s1, v[11:12]
	v_mov_b32_e32 v11, v13
	v_or_b32_e64 v10, v10, v11
	v_mov_b32_e32 v11, v15
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
	v_or_b32_e64 v12, v11, v12
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v10
	v_mov_b32_e32 v11, v12
	v_mov_b32_e32 v10, v13
	v_mad_u64_u32 v[12:13], s0, v2, v14, 0
	v_mov_b32_e32 v2, v13
	s_mov_b32 s0, 0
	v_writelane_b32 v41, s0, 11
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	v_add_co_u32 v1, vcc_lo, v1, v11
	v_add_co_ci_u32_e32 v6, vcc_lo, v6, v10, vcc_lo
	v_mov_b32_e32 v10, s0
	v_add_co_ci_u32_e32 v10, vcc_lo, v2, v10, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v2
	v_lshlrev_b64 v[10:11], s1, v[10:11]
	v_mov_b32_e32 v14, v11
                                        ; kill: def $vgpr12 killed $vgpr12 killed $vgpr12_vgpr13 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v2
	v_mov_b32_e32 v2, v13
	v_or_b32_e64 v2, v2, v14
	v_mov_b32_e32 v11, v10
	v_mov_b32_e32 v10, v12
	v_or_b32_e64 v11, v10, v11
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v6
	v_lshrrev_b64 v[13:14], s1, v[1:2]
	v_mov_b32_e32 v1, v13
	v_mov_b32_e32 v10, v11
	v_mov_b32_e32 v2, v14
	v_mov_b32_e32 v6, v12
	v_add_co_u32 v1, s3, v1, v10
	v_add_co_ci_u32_e64 v6, s3, v2, v6, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v6, v1
	v_add_co_u32 v4, s3, v4, v6
	v_lshrrev_b64 v[1:2], s1, v[1:2]
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	v_add_co_ci_u32_e64 v0, s3, v0, v1, s3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v0
	v_lshrrev_b64 v[1:2], s1, v[1:2]
	v_mov_b32_e32 v2, v1
	v_mad_u64_u32 v[12:13], s3, v9, v4, 0
	v_mov_b32_e32 v1, v12
	v_mad_u64_u32 v[14:15], s3, v2, v1, 0
	v_mov_b32_e32 v10, v14
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v6
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v14, v15
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v16, s3
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v16
	v_lshlrev_b64 v[14:15], s1, v[14:15]
	v_mov_b32_e32 v16, v15
	v_or_b32_e64 v6, v6, v16
                                        ; kill: def $vgpr10 killed $vgpr10 killed $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v14
	v_or_b32_e64 v14, v10, v11
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v6
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v6, v15
	v_mul_lo_u32 v9, v9, v2
	v_mul_lo_u32 v10, v5, v4
	v_mov_b32_e32 v5, v13
	v_add3_u32 v12, v5, v9, v10
	v_mad_u64_u32 v[13:14], s3, v4, v12, 0
	v_mov_b32_e32 v9, v13
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v5
	v_mov_b32_e32 v5, v10
	v_mov_b32_e32 v13, v14
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v15, s3
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v15
	v_lshlrev_b64 v[13:14], s1, v[13:14]
	v_mov_b32_e32 v15, v14
	v_or_b32_e64 v5, v5, v15
                                        ; kill: def $vgpr9 killed $vgpr9 killed $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v13
	v_or_b32_e64 v13, v9, v10
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v5
	v_mul_hi_u32 v15, v4, v1
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v1, v16
	v_mov_b32_e32 v5, v14
	v_add_co_u32 v9, s3, v9, v10
	v_add_co_ci_u32_e64 v1, s3, v1, v5, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v1
	v_mov_b32_e32 v1, v9
	v_mov_b32_e32 v5, v10
	v_mad_u64_u32 v[9:10], s3, v2, v12, 0
	v_mov_b32_e32 v2, v10
	v_add_co_u32 v1, vcc_lo, v1, v11
	v_add_co_ci_u32_e32 v5, vcc_lo, v5, v6, vcc_lo
	v_mov_b32_e32 v6, s0
	v_add_co_ci_u32_e32 v11, vcc_lo, v2, v6, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v2, s3
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_lshlrev_b64 v[12:13], s1, v[11:12]
	v_mov_b32_e32 v6, v13
	v_mov_b32_e32 v10, v9
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v2
	v_mov_b32_e32 v2, v11
	v_or_b32_e64 v2, v2, v6
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v6, v10
	v_or_b32_e64 v9, v6, v9
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v5
	v_lshrrev_b64 v[11:12], s1, v[1:2]
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v2, v12
	v_mov_b32_e32 v5, v10
	v_add_co_u32 v1, s3, v1, v6
	v_add_co_ci_u32_e64 v5, s3, v2, v5, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v5, v1
	v_add_co_u32 v6, s3, v4, v5
	v_lshrrev_b64 v[1:2], s1, v[1:2]
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	v_add_co_ci_u32_e64 v2, s3, v0, v1, s3
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, v6
	v_mov_b32_e32 v1, v2
	v_lshrrev_b64 v[0:1], s1, v[0:1]
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v2, v7
	v_mad_u64_u32 v[9:10], s3, v2, v1, 0
	v_mov_b32_e32 v4, v9
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v9, v10
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v11, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v11
	v_lshlrev_b64 v[9:10], s1, v[9:10]
	v_mov_b32_e32 v11, v10
	v_or_b32_e64 v0, v0, v11
                                        ; kill: def $vgpr4 killed $vgpr4 killed $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v9
	v_or_b32_e64 v10, v4, v5
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v0
	v_mul_hi_u32 v12, v2, v6
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v0
	v_mov_b32_e32 v4, v12
	v_mov_b32_e32 v9, v10
	v_mov_b32_e32 v0, v13
	v_mov_b32_e32 v5, v11
	v_add_co_u32 v4, s3, v4, v9
	v_add_co_ci_u32_e64 v0, s3, v0, v5, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr4_vgpr5 killed $exec
	v_lshrrev_b64 v[7:8], s1, v[7:8]
	v_mov_b32_e32 v4, v7
	v_mad_u64_u32 v[7:8], s3, v4, v6, 0
	v_mov_b32_e32 v10, v7
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v11, v6
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v7, v8
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v9, s3
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v9
	v_lshlrev_b64 v[8:9], s1, v[7:8]
	v_mov_b32_e32 v7, v9
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v7, v10
                                        ; kill: def $vgpr8 killed $vgpr8 killed $vgpr8_vgpr9 killed $exec
	v_or_b32_e64 v8, v7, v8
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v6
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v6, v9
	v_mad_u64_u32 v[8:9], s3, v4, v1, 0
	v_mov_b32_e32 v1, v9
	v_add_co_u32 v0, vcc_lo, v0, v7
	v_add_co_ci_u32_e32 v5, vcc_lo, v5, v6, vcc_lo
	v_mov_b32_e32 v6, s0
	v_add_co_ci_u32_e32 v6, vcc_lo, v1, v6, vcc_lo
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v1, s3
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v1
	v_lshlrev_b64 v[6:7], s1, v[6:7]
	v_mov_b32_e32 v10, v7
                                        ; kill: def $vgpr8 killed $vgpr8 killed $vgpr8_vgpr9 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v1
	v_mov_b32_e32 v1, v9
	v_or_b32_e64 v1, v1, v10
	v_mov_b32_e32 v7, v6
	v_mov_b32_e32 v6, v8
	v_or_b32_e64 v7, v6, v7
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v5
	v_lshrrev_b64 v[0:1], s1, v[0:1]
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v8
	v_add_co_u32 v8, s2, v5, v6
	v_add_co_ci_u32_e64 v0, s2, v0, v1, s2
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v0
	v_mov_b32_e32 v0, v8
	v_mad_u64_u32 v[6:7], s2, v3, v0, 0
	v_mov_b32_e32 v12, v7
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v1, s2
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v13, v1
	v_lshrrev_b64 v[10:11], s1, v[8:9]
	v_mov_b32_e32 v1, v10
	v_mad_u64_u32 v[10:11], s1, v3, v1, v[12:13]
	v_mov_b32_e32 v5, v10
	v_sub_nc_u32_e64 v1, v4, v5
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	v_sub_co_u32 v2, s2, v2, v6
	v_sub_co_ci_u32_e64 v6, s1, v1, s0, s2
	v_sub_co_u32 v1, s1, v2, v3
	v_sub_co_ci_u32_e64 v6, s1, v6, s0, s1
	v_cmp_eq_u32_e64 s3, v6, s0
	v_cmp_ge_u32_e64 s4, v1, v3
	s_mov_b32 s1, -1
	v_mov_b32_e32 v1, s1
	v_cndmask_b32_e64 v1, s0, v1, s4
	v_cndmask_b32_e64 v1, s1, v1, s3
	v_cmp_ne_u32_e64 s3, v1, s0
	s_mov_b64 s[6:7], 2
	v_mov_b32_e32 v6, v8
	s_mov_b32 s5, s6
	v_mov_b32_e32 v1, v9
	s_mov_b32 s4, s7
	v_add_co_u32 v6, s5, v6, s5
	v_add_co_ci_u32_e64 v1, s4, v1, s4, s5
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v1
                                        ; kill: def $vgpr6 killed $vgpr6 killed $vgpr6_vgpr7 killed $exec
	s_mov_b64 s[6:7], 1
	v_mov_b32_e32 v7, v8
	s_mov_b32 s5, s6
	v_mov_b32_e32 v1, v9
	s_mov_b32 s4, s7
	v_add_co_u32 v7, s5, v7, s5
	v_add_co_ci_u32_e64 v1, s4, v1, s4, s5
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
	v_mov_b32_e32 v1, v7
	v_cndmask_b32_e64 v1, v1, v6, s3
	v_sub_co_ci_u32_e64 v4, s2, v4, v5, s2
	v_cmp_eq_u32_e64 s2, v4, s0
	v_cmp_ge_u32_e64 s3, v2, v3
	v_mov_b32_e32 v2, s1
	v_cndmask_b32_e64 v2, s0, v2, s3
	v_cndmask_b32_e64 v2, s1, v2, s2
	v_cmp_ne_u32_e64 s0, v2, s0
	v_cndmask_b32_e64 v0, v0, v1, s0
	scratch_store_b32 off, v0, s33 offset:212
	s_branch .LBB85_22
.LBB85_25:                              ; %Flow3
                                        ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 6
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v41, 3
	v_readlane_b32 s1, v41, 5
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v41, s1, 2
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 1
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 12
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB85_20
	s_branch .LBB85_33
.LBB85_26:                              ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v40, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 8
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v40, 2
	v_readlane_b32 s14, v40, 3
	v_readlane_b32 s13, v40, 4
	v_readlane_b32 s12, v40, 5
	v_readlane_b32 s10, v40, 6
	v_readlane_b32 s11, v40, 7
	v_readlane_b32 s8, v40, 8
	v_readlane_b32 s9, v40, 9
	v_readlane_b32 s6, v40, 0
	v_readlane_b32 s7, v40, 1
	v_readlane_b32 s4, v40, 10
	v_readlane_b32 s5, v40, 11
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b128 v[8:11], off, s33 offset:128
	scratch_load_b128 v[12:15], off, s33 offset:144
	scratch_load_b128 v[16:19], off, s33 offset:160
	scratch_load_b128 v[22:25], off, s33 offset:176
	scratch_load_b32 v21, off, s33 offset:212
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v0, s33 offset:312 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v1, s33 offset:308 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v2, s33 offset:304 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v3, s33 offset:300 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v4, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v4, s33 offset:296 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v17, v22
	v_mov_b32_e32 v18, v23
	v_mov_b32_e32 v19, v24
	v_mov_b32_e32 v20, v25
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, subMul1_512@rel32@lo+4
	s_addc_u32 s1, s1, subMul1_512@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:312 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:308 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:304 ; 4-byte Folded Reload
	scratch_load_b32 v3, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v4, off, s33 offset:296 ; 4-byte Folded Reload
	v_readlane_b32 s4, v40, 10
	v_readlane_b32 s5, v40, 11
	v_readlane_b32 s6, v40, 0
	v_readlane_b32 s7, v40, 1
	v_readlane_b32 s8, v40, 8
	v_readlane_b32 s9, v40, 9
	v_readlane_b32 s10, v40, 6
	v_readlane_b32 s11, v40, 7
	v_readlane_b32 s12, v40, 5
	v_readlane_b32 s13, v40, 4
	v_readlane_b32 s14, v40, 3
	v_readlane_b32 s15, v40, 2
	scratch_load_b32 v5, off, s33 offset:124
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v5, s33 offset:224
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb5@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb5@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:224
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 13
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_29
; %bb.27:                               ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v40, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v40, 2
	v_readlane_b32 s14, v40, 3
	v_readlane_b32 s13, v40, 4
	v_readlane_b32 s12, v40, 5
	v_readlane_b32 s10, v40, 6
	v_readlane_b32 s11, v40, 7
	v_readlane_b32 s8, v40, 8
	v_readlane_b32 s9, v40, 9
	v_readlane_b32 s6, v40, 0
	v_readlane_b32 s7, v40, 1
	v_readlane_b32 s4, v40, 10
	v_readlane_b32 s5, v40, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:128
	scratch_load_b128 v[11:14], off, s33 offset:144
	scratch_load_b128 v[15:18], off, s33 offset:160
	scratch_load_b128 v[19:22], off, s33 offset:176
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add512@rel32@lo+4
	s_addc_u32 s1, s1, add512@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:124
	scratch_load_b32 v1, off, s33 offset:188
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, v1
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 14
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_30
; %bb.28:                               ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:128
	scratch_load_b128 v[11:14], off, s33 offset:144
	scratch_load_b128 v[15:18], off, s33 offset:160
	scratch_load_b128 v[19:22], off, s33 offset:176
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add512@rel32@lo+4
	s_addc_u32 s1, s1, add512@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB85_30
.LBB85_29:                              ; %Flow1
                                        ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 13
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB85_31
.LBB85_30:                              ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 14
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB85_29
.LBB85_31:                              ;   in Loop: Header=BB85_20 Depth=1
; %bb.32:                               ;   in Loop: Header=BB85_20 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 4
	scratch_load_b32 v0, off, s33 offset:208
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:208
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 5
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB85_25
.LBB85_33:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 12
	s_or_b32 exec_lo, exec_lo, s0
; %bb.34:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v40, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v40, 2
	v_readlane_b32 s14, v40, 3
	v_readlane_b32 s13, v40, 4
	v_readlane_b32 s12, v40, 5
	v_readlane_b32 s10, v40, 6
	v_readlane_b32 s11, v40, 7
	v_readlane_b32 s8, v40, 8
	v_readlane_b32 s9, v40, 9
	v_readlane_b32 s6, v40, 0
	v_readlane_b32 s7, v40, 1
	v_readlane_b32 s4, v40, 10
	v_readlane_b32 s5, v40, 11
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v5, off, s33 offset:200
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v4, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, rshift5@rel32@lo+4
	s_addc_u32 s1, s1, rshift5@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:228
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v41, s0, 15
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
.LBB85_35:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 16
	v_readlane_b32 s1, v41, 15
	v_writelane_b32 v41, s1, 17
	scratch_load_b32 v0, off, s33 offset:228
	scratch_load_b32 v1, off, s33 offset:196
	s_mov_b32 s1, 16
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, s1, v1
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 18
	v_writelane_b32 v41, s0, 19
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v41, s0, 20
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB85_37
; %bb.36:                               ;   in Loop: Header=BB85_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:292 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v4, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, rshiftByLimb5@rel32@lo+4
	s_addc_u32 s1, s1, rshiftByLimb5@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB85_38
.LBB85_37:                              ; %Flow
                                        ;   in Loop: Header=BB85_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 20
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v41, 17
	v_readlane_b32 s1, v41, 19
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v41, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 15
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 21
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB85_35
	s_branch .LBB85_39
.LBB85_38:                              ;   in Loop: Header=BB85_35 Depth=1
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 18
	scratch_load_b32 v0, off, s33 offset:228
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:228
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v41, s0, 19
	s_or_saveexec_b32 s21, -1
	scratch_store_b32 off, v41, s33 offset:244 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s21
	s_branch .LBB85_37
.LBB85_39:
	s_or_saveexec_b32 s21, -1
	scratch_load_b32 v41, off, s33 offset:244 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s21
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 21
	s_or_b32 exec_lo, exec_lo, s0
; %bb.40:
	scratch_load_b128 v[0:3], off, s33 offset:64
	scratch_load_b32 v4, off, s33 offset:20
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:80
	scratch_load_b32 v4, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:96
	scratch_load_b32 v4, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:112
	scratch_load_b32 v4, off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:196
	scratch_load_b32 v1, off, s33 offset:200
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v2, s0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b64 v[1:2], off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v2
	v_readlane_b32 s30, v39, 0
	v_readlane_b32 s31, v39, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v39, off, s33 offset:316 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, -1
	scratch_load_b32 v40, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v41, off, s33 offset:324 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffeb0
	s_mov_b32 s33, s22
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end85:
	.size	modulo640to512, .Lfunc_end85-modulo640to512
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 8080
; NumSgprs: 36
; NumVgprs: 42
; ScratchSize: 848
; MemoryBound: 0
	.text
	.hidden	invert_limb                     ; -- Begin function invert_limb
	.globl	invert_limb
	.p2align	2
	.type	invert_limb,@function
invert_limb:                            ; @invert_limb
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 12
	scratch_store_b32 off, v0, s33
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	s_mov_b32 s1, 0x1fc
	v_and_b32_e64 v0, v0, s1
	s_getpc_b64 s[2:3]
	s_add_u32 s2, s2, binvert_limb_table@rel32@lo+4
	s_addc_u32 s3, s3, binvert_limb_table@rel32@hi+12
	global_load_b32 v0, v0, s[2:3]
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v1
	v_mul_lo_u32 v1, v1, v1
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v1, v1, v2
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:4
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v1
	v_mul_lo_u32 v1, v1, v1
	scratch_load_b32 v2, off, s33
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v1, v1, v2
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:4
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	s_add_i32 s32, s32, -12
	s_mov_b32 s33, s4
	s_setpc_b64 s[30:31]
.Lfunc_end86:
	.size	invert_limb, .Lfunc_end86-invert_limb
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 268
; NumSgprs: 34
; NumVgprs: 3
; ScratchSize: 12
; MemoryBound: 0
	.text
	.hidden	redc256_round_v3                ; -- Begin function redc256_round_v3
	.globl	redc256_round_v3
	.p2align	2
	.type	redc256_round_v3,@function
redc256_round_v3:                       ; @redc256_round_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v22, s33 offset:160 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:164 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xb0
	v_writelane_b32 v22, s30, 0
	v_writelane_b32 v22, s31, 1
	scratch_store_b32 off, v31, s33 offset:152 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr23 : SGPR spill to VGPR lane
	v_writelane_b32 v23, s6, 0
	v_writelane_b32 v23, s7, 1
	scratch_store_b32 off, v4, s33 offset:156 ; 4-byte Folded Spill
	v_mov_b32_e32 v19, v3
	v_mov_b32_e32 v20, v2
	v_mov_b32_e32 v21, v1
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:156 ; 4-byte Folded Reload
	v_writelane_b32 v23, s15, 2
	v_writelane_b32 v23, s14, 3
	v_writelane_b32 v23, s13, 4
	v_writelane_b32 v23, s12, 5
	v_writelane_b32 v23, s10, 6
	v_writelane_b32 v23, s11, 7
	v_writelane_b32 v23, s8, 8
	v_writelane_b32 v23, s9, 9
	v_writelane_b32 v23, s4, 10
	v_writelane_b32 v23, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v21
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v7, v19
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[4:7], s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_store_b32 off, v8, s33 offset:32
	scratch_store_b32 off, v9, s33 offset:36
	scratch_store_b32 off, v10, s33 offset:40
	scratch_store_b32 off, v11, s33 offset:44
	scratch_store_b32 off, v12, s33 offset:48
	scratch_store_b32 off, v13, s33 offset:52
	scratch_store_b32 off, v14, s33 offset:56
	scratch_store_b32 off, v15, s33 offset:60
	scratch_store_b32 off, v16, s33 offset:64
	scratch_store_b32 off, v17, s33 offset:68
	scratch_store_b32 off, v18, s33 offset:72
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v23, s0, 12
	v_writelane_b32 v23, s1, 13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:152 ; 4-byte Folded Reload
	v_readlane_b32 s4, v23, 10
	v_readlane_b32 s5, v23, 11
	v_readlane_b32 s6, v23, 0
	v_readlane_b32 s7, v23, 1
	v_readlane_b32 s8, v23, 8
	v_readlane_b32 s9, v23, 9
	v_readlane_b32 s10, v23, 6
	v_readlane_b32 s11, v23, 7
	v_readlane_b32 s12, v23, 5
	v_readlane_b32 s13, v23, 4
	v_readlane_b32 s14, v23, 3
	v_readlane_b32 s15, v23, 2
	v_readlane_b32 s0, v23, 12
	v_readlane_b32 s1, v23, 13
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b32 v7, off, s33 offset:32
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:40
	scratch_load_b32 v1, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v1, off
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, v2
	v_mul_lo_u32 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b32 v5, off, s33 offset:80
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:112
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:84
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:116
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[0:1], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b32 v5, off, s33 offset:148
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:88
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:120
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:92
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:124
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:96
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:128
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:100
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:104
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:108
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	v_readlane_b32 s30, v22, 0
	v_readlane_b32 s31, v22, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v22, off, s33 offset:160 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:164 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff50
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end87:
	.size	redc256_round_v3, .Lfunc_end87-redc256_round_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 2460
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 240
; MemoryBound: 0
	.text
	.hidden	redc384_round_v3                ; -- Begin function redc384_round_v3
	.globl	redc384_round_v3
	.p2align	2
	.type	redc384_round_v3,@function
redc384_round_v3:                       ; @redc384_round_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v30, s33 offset:236 ; 4-byte Folded Spill
	scratch_store_b32 off, v32, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x100
	v_writelane_b32 v30, s30, 0
	v_writelane_b32 v30, s31, 1
	scratch_store_b32 off, v31, s33 offset:216 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr32 : SGPR spill to VGPR lane
	v_writelane_b32 v32, s6, 0
	v_writelane_b32 v32, s7, 1
	scratch_store_b32 off, v11, s33 offset:224 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:228 ; 4-byte Folded Spill
	scratch_store_b32 off, v9, s33 offset:232 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:220 ; 4-byte Folded Spill
	v_mov_b32_e32 v9, v7
	scratch_load_b32 v7, off, s33 offset:232 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v6
	scratch_load_b32 v6, off, s33 offset:228 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v5
	scratch_load_b32 v5, off, s33 offset:224 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v3
	v_mov_b32_e32 v28, v2
	v_mov_b32_e32 v29, v1
	v_mov_b32_e32 v8, v0
	scratch_load_b32 v0, off, s33 offset:220 ; 4-byte Folded Reload
	v_writelane_b32 v32, s15, 2
	v_writelane_b32 v32, s14, 3
	v_writelane_b32 v32, s13, 4
	v_writelane_b32 v32, s12, 5
	v_writelane_b32 v32, s10, 6
	v_writelane_b32 v32, s11, 7
	v_writelane_b32 v32, s8, 8
	v_writelane_b32 v32, s9, 9
	v_writelane_b32 v32, s4, 10
	v_writelane_b32 v32, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v29
	v_mov_b32_e32 v10, v28
	v_mov_b32_e32 v11, v27
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[8:11], s33
	scratch_store_b128 off, v[4:7], s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_store_b32 off, v12, s33 offset:48
	scratch_store_b32 off, v13, s33 offset:52
	scratch_store_b32 off, v14, s33 offset:56
	scratch_store_b32 off, v15, s33 offset:60
	scratch_store_b32 off, v16, s33 offset:64
	scratch_store_b32 off, v17, s33 offset:68
	scratch_store_b32 off, v18, s33 offset:72
	scratch_store_b32 off, v19, s33 offset:76
	scratch_store_b32 off, v20, s33 offset:80
	scratch_store_b32 off, v21, s33 offset:84
	scratch_store_b32 off, v22, s33 offset:88
	scratch_store_b32 off, v23, s33 offset:92
	scratch_store_b32 off, v24, s33 offset:96
	scratch_store_b32 off, v25, s33 offset:100
	scratch_store_b32 off, v26, s33 offset:104
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v32, s0, 12
	v_writelane_b32 v32, s1, 13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	v_readlane_b32 s0, v32, 12
	v_readlane_b32 s1, v32, 13
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:216 ; 4-byte Folded Reload
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	v_readlane_b32 s0, v32, 12
	v_readlane_b32 s1, v32, 13
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:56
	scratch_load_b32 v1, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v1, off
	scratch_load_b32 v2, off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, v2
	v_mul_lo_u32 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b32 v5, off, s33 offset:112
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:160
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:116
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:164
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[0:1], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v5, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:120
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:168
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:124
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:172
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:128
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:176
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:180
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:184
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:188
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:144
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:192
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:148
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:196
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:152
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:200
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:156
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:204
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	v_readlane_b32 s30, v30, 0
	v_readlane_b32 s31, v30, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v30, off, s33 offset:236 ; 4-byte Folded Reload
	scratch_load_b32 v32, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff00
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end88:
	.size	redc384_round_v3, .Lfunc_end88-redc384_round_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 3564
; NumSgprs: 34
; NumVgprs: 33
; ScratchSize: 320
; MemoryBound: 0
	.text
	.hidden	redc448_round_v3                ; -- Begin function redc448_round_v3
	.globl	redc448_round_v3
	.p2align	2
	.type	redc448_round_v3,@function
redc448_round_v3:                       ; @redc448_round_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s18, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v35, s33 offset:280 ; 4-byte Folded Spill
	scratch_store_b32 off, v36, s33 offset:284 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x130
	v_writelane_b32 v35, s30, 0
	v_writelane_b32 v35, s31, 1
	scratch_store_b32 off, v31, s33 offset:256 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr36 : SGPR spill to VGPR lane
	v_writelane_b32 v36, s6, 0
	v_writelane_b32 v36, s7, 1
	v_mov_b32_e32 v32, v13
	scratch_store_b32 off, v12, s33 offset:260 ; 4-byte Folded Spill
	scratch_store_b32 off, v11, s33 offset:272 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:276 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v8
	scratch_load_b32 v8, off, s33 offset:276 ; 4-byte Folded Reload
	scratch_store_b32 off, v10, s33 offset:268 ; 4-byte Folded Spill
	v_mov_b32_e32 v11, v7
	scratch_load_b32 v7, off, s33 offset:272 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v6
	v_mov_b32_e32 v13, v5
	v_mov_b32_e32 v6, v4
	scratch_store_b32 off, v3, s33 offset:264 ; 4-byte Folded Spill
	v_mov_b32_e32 v33, v2
	scratch_load_b32 v2, off, s33 offset:268 ; 4-byte Folded Reload
	v_mov_b32_e32 v34, v1
	scratch_load_b32 v1, off, s33 offset:264 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v0
	scratch_load_b32 v0, off, s33 offset:260 ; 4-byte Folded Reload
	v_writelane_b32 v36, s15, 2
	v_writelane_b32 v36, s14, 3
	v_writelane_b32 v36, s13, 4
	v_writelane_b32 v36, s12, 5
	v_writelane_b32 v36, s10, 6
	v_writelane_b32 v36, s11, 7
	v_writelane_b32 v36, s8, 8
	v_writelane_b32 v36, s9, 9
	v_writelane_b32 v36, s4, 10
	v_writelane_b32 v36, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v9
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v8
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v7, v13
	v_mov_b32_e32 v8, v12
	v_mov_b32_e32 v9, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v34
	v_mov_b32_e32 v12, v33
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v13, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v32
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[10:13], s33
	scratch_store_b128 off, v[6:9], s33 offset:16
	scratch_store_b128 off, v[2:5], s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_store_b32 off, v14, s33 offset:56
	scratch_store_b32 off, v15, s33 offset:60
	scratch_store_b32 off, v16, s33 offset:64
	scratch_store_b32 off, v17, s33 offset:68
	scratch_store_b32 off, v18, s33 offset:72
	scratch_store_b32 off, v19, s33 offset:76
	scratch_store_b32 off, v20, s33 offset:80
	scratch_store_b32 off, v21, s33 offset:84
	scratch_store_b32 off, v22, s33 offset:88
	scratch_store_b32 off, v23, s33 offset:92
	scratch_store_b32 off, v24, s33 offset:96
	scratch_store_b32 off, v25, s33 offset:100
	scratch_store_b32 off, v26, s33 offset:104
	scratch_store_b32 off, v27, s33 offset:108
	scratch_store_b32 off, v28, s33 offset:112
	scratch_store_b32 off, v29, s33 offset:116
	scratch_store_b32 off, v30, s33 offset:120
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v36, s0, 12
	v_writelane_b32 v36, s1, 13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s0, v36, 12
	v_readlane_b32 s1, v36, 13
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s15, v36, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b32 v7, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s0, v36, 12
	v_readlane_b32 s1, v36, 13
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s15, v36, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b32 v7, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s4, v36, 10
	v_readlane_b32 s5, v36, 11
	v_readlane_b32 s6, v36, 0
	v_readlane_b32 s7, v36, 1
	v_readlane_b32 s8, v36, 8
	v_readlane_b32 s9, v36, 9
	v_readlane_b32 s10, v36, 6
	v_readlane_b32 s11, v36, 7
	v_readlane_b32 s12, v36, 5
	v_readlane_b32 s13, v36, 4
	v_readlane_b32 s14, v36, 3
	v_readlane_b32 s15, v36, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v3, off, s33 offset:56
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v2
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv2_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv2_jS_@rel32@hi+12
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b32 v0, off, s33 offset:64
	scratch_load_b32 v1, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v1, off
	scratch_load_b32 v2, off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, v2
	v_mul_lo_u32 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v0, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:208
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:224
	scratch_load_b64 v[3:4], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	v_mov_b32_e32 v0, v4
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v2, v0, v1
	v_mov_b32_e32 v0, v3
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v5, off, s33 offset:128
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:192
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:196
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[0:1], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v5, off, s33 offset:252
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:200
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:76
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:204
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:144
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:208
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:148
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:212
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:152
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:216
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:156
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:220
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:160
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:224
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:164
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:228
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:168
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:232
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:108
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:172
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:236
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:176
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:240
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:116
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:180
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s1, v0, v4
	v_add_co_ci_u32_e64 v3, s1, v1, v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b32 v5, off, s33 offset:244
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v2, off, s33 offset:120
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[7:8], v2, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	scratch_store_b64 v2, v[0:1], off
	v_readlane_b32 s30, v35, 0
	v_readlane_b32 s31, v35, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v35, off, s33 offset:280 ; 4-byte Folded Reload
	scratch_load_b32 v36, off, s33 offset:284 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffed0
	s_mov_b32 s33, s18
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end89:
	.size	redc448_round_v3, .Lfunc_end89-redc448_round_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 4200
; NumSgprs: 34
; NumVgprs: 37
; ScratchSize: 368
; MemoryBound: 0
	.text
	.hidden	redc1_256_v3                    ; -- Begin function redc1_256_v3
	.globl	redc1_256_v3
	.p2align	2
	.type	redc1_256_v3,@function
redc1_256_v3:                           ; @redc1_256_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s21, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v30, s33 offset:604 ; 4-byte Folded Spill
	scratch_store_b32 off, v32, s33 offset:608 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x270
	v_writelane_b32 v30, s30, 0
	v_writelane_b32 v30, s31, 1
	scratch_store_b32 off, v31, s33 offset:468 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr32 : SGPR spill to VGPR lane
	v_writelane_b32 v32, s6, 0
	v_writelane_b32 v32, s7, 1
	scratch_store_b32 off, v23, s33 offset:528 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:532 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:536 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:520 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:544 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:548 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:552 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:524 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:540 ; 4-byte Folded Spill
	v_mov_b32_e32 v17, v11
	scratch_load_b32 v11, off, s33 offset:552 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v10
	scratch_load_b32 v10, off, s33 offset:548 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v9
	scratch_load_b32 v9, off, s33 offset:544 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v8
	scratch_load_b32 v8, off, s33 offset:540 ; 4-byte Folded Reload
	v_mov_b32_e32 v21, v7
	scratch_load_b32 v7, off, s33 offset:536 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v6
	scratch_load_b32 v6, off, s33 offset:532 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v5
	scratch_load_b32 v5, off, s33 offset:528 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v4
	scratch_load_b32 v4, off, s33 offset:524 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v3
	v_mov_b32_e32 v28, v2
	v_mov_b32_e32 v29, v1
	v_mov_b32_e32 v20, v0
	scratch_load_b32 v0, off, s33 offset:520 ; 4-byte Folded Reload
	v_writelane_b32 v32, s15, 2
	v_writelane_b32 v32, s14, 3
	v_writelane_b32 v32, s13, 4
	v_writelane_b32 v32, s12, 5
	v_writelane_b32 v32, s10, 6
	v_writelane_b32 v32, s11, 7
	v_writelane_b32 v32, s8, 8
	v_writelane_b32 v32, s9, 9
	v_writelane_b32 v32, s4, 10
	v_writelane_b32 v32, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v13
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v15
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v19
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v29
	v_mov_b32_e32 v22, v28
	v_mov_b32_e32 v23, v27
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[20:23], s33
	scratch_store_b128 off, v[16:19], s33 offset:16
	scratch_store_b128 off, v[12:15], s33 offset:32
	scratch_store_b128 off, v[8:11], s33 offset:48
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_store_b32 off, v24, s33 offset:96
	scratch_store_b32 off, v25, s33 offset:100
	scratch_store_b32 off, v26, s33 offset:104
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 0
	v_writelane_b32 v32, s0, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:112
	scratch_load_b32 v0, off, s33 offset:4
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_load_b32 v0, off, s33 offset:8
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b32 v0, off, s33 offset:12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:136
	scratch_load_b32 v0, off, s33 offset:16
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:20
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b32 v0, off, s33 offset:24
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:28
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b32 v0, off, s33 offset:32
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b32 v0, off, s33 offset:36
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b32 v0, off, s33 offset:40
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b32 v0, off, s33 offset:44
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b32 v0, off, s33 offset:48
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v0, off, s33 offset:52
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b32 v0, off, s33 offset:56
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b32 v0, off, s33 offset:60
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:240
	scratch_load_b128 v[7:10], off, s33 offset:64
	scratch_load_b32 v1, off, s33 offset:240
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:288
	scratch_load_b128 v[7:10], off, s33 offset:80
	scratch_load_b32 v1, off, s33 offset:240
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:304
	scratch_load_b32 v4, off, s33 offset:288
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:112
	scratch_load_b32 v4, off, s33 offset:292
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_load_b64 v[0:1], off, s33 offset:112
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:120
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_load_b32 v4, off, s33 offset:296
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:128
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:128
	scratch_load_b32 v4, off, s33 offset:300
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:136
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:136
	scratch_load_b32 v4, off, s33 offset:304
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b32 v4, off, s33 offset:308
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:152
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:152
	scratch_load_b32 v4, off, s33 offset:312
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:160
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160
	scratch_load_b32 v4, off, s33 offset:316
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:168
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[19:22], off, s33 offset:80
	scratch_load_b32 v8, off, s33 offset:240
	scratch_load_b32 v10, off, s33 offset:96
	s_add_i32 s0, s33, 0xf4
	v_mov_b32_e32 v9, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x78
	v_mov_b32_e32 v11, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v12, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v12, s33 offset:516 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x88
	v_mov_b32_e32 v13, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v13, s33 offset:512 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v14, s33 offset:508 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x98
	v_mov_b32_e32 v15, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v15, s33 offset:504 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v16, s33 offset:500 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xa8
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v17, s33 offset:480 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v18, s33 offset:476 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v19
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v7, v22
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc256_round_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc256_round_v3@rel32@hi+12
	v_writelane_b32 v32, s0, 13
	v_writelane_b32 v32, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v17, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:516 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s0, v32, 13
	v_readlane_b32 s1, v32, 14
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[19:22], off, s33 offset:80
	scratch_load_b32 v8, off, s33 offset:244
	scratch_load_b32 v10, off, s33 offset:96
	s_add_i32 s2, s33, 0xf8
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0xb8
	v_mov_b32_e32 v18, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v18, s33 offset:472 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v19
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v7, v22
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v17, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:512 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s0, v32, 13
	v_readlane_b32 s1, v32, 14
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[19:22], off, s33 offset:80
	scratch_load_b32 v8, off, s33 offset:248
	scratch_load_b32 v10, off, s33 offset:96
	s_add_i32 s2, s33, 0xfc
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0xc0
	v_mov_b32_e32 v18, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v18, s33 offset:484 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v19
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v7, v22
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v17, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:508 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s0, v32, 13
	v_readlane_b32 s1, v32, 14
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[19:22], off, s33 offset:80
	scratch_load_b32 v8, off, s33 offset:252
	scratch_load_b32 v10, off, s33 offset:96
	s_add_i32 s2, s33, 0x100
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0xc8
	v_mov_b32_e32 v18, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v18, s33 offset:488 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v19
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v7, v22
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v17, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:504 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s0, v32, 13
	v_readlane_b32 s1, v32, 14
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[19:22], off, s33 offset:80
	scratch_load_b32 v8, off, s33 offset:256
	scratch_load_b32 v10, off, s33 offset:96
	s_add_i32 s2, s33, 0x104
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0xd0
	v_mov_b32_e32 v18, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v18, s33 offset:492 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v19
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v7, v22
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v17, off, s33 offset:492 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:500 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s0, v32, 13
	v_readlane_b32 s1, v32, 14
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[19:22], off, s33 offset:80
	scratch_load_b32 v8, off, s33 offset:260
	scratch_load_b32 v10, off, s33 offset:96
	s_add_i32 s2, s33, 0x108
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0xd8
	v_mov_b32_e32 v18, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v18, s33 offset:496 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v19
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v7, v22
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v17, off, s33 offset:496 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:492 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v14, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:480 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s0, v32, 13
	v_readlane_b32 s1, v32, 14
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[19:22], off, s33 offset:80
	scratch_load_b32 v8, off, s33 offset:264
	scratch_load_b32 v10, off, s33 offset:96
	s_add_i32 s2, s33, 0x10c
	v_mov_b32_e32 v9, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0xe0
	v_mov_b32_e32 v18, s2
                                        ; implicit-def: $sgpr2
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v19
	v_mov_b32_e32 v5, v20
	v_mov_b32_e32 v6, v21
	v_mov_b32_e32 v7, v22
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b32 v7, off, s33 offset:268
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v32, s0, 15
	v_writelane_b32 v32, s1, 16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s15, v32, 2
	v_readlane_b32 s0, v32, 15
	v_readlane_b32 s1, v32, 16
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:320
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b32 v7, off, s33 offset:268
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v32, 12
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:336
	scratch_load_b32 v4, off, s33 offset:320
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:176
	scratch_load_b32 v4, off, s33 offset:324
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:184
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b64 v[0:1], off, s33 offset:176
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:184
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:184
	scratch_load_b32 v4, off, s33 offset:328
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b64 v[0:1], off, s33 offset:184
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b32 v4, off, s33 offset:332
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:200
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b64 v[0:1], off, s33 offset:192
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:200
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b32 v4, off, s33 offset:336
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b64 v[0:1], off, s33 offset:200
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:340
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:216
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b64 v[0:1], off, s33 offset:208
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:216
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b32 v4, off, s33 offset:344
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b64 v[0:1], off, s33 offset:216
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b32 v4, off, s33 offset:348
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b64 v[0:1], off, s33 offset:224
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:276
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v0, off, s33 offset:176
	scratch_load_b32 v6, off, s33 offset:184
	scratch_load_b32 v5, off, s33 offset:192
	scratch_load_b32 v4, off, s33 offset:200
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:352
	scratch_load_b128 v[0:3], off, s33 offset:352
	scratch_load_b32 v4, off, s33 offset:100
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:208
	scratch_load_b32 v6, off, s33 offset:216
	scratch_load_b32 v5, off, s33 offset:224
	scratch_load_b32 v4, off, s33 offset:232
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:368
	scratch_load_b128 v[0:3], off, s33 offset:368
	scratch_load_b32 v4, off, s33 offset:104
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b64 v[0:1], off, s33 offset:232
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v0, off, s33 offset:276
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:452 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v32, s1, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v32, s33 offset:448 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB90_1
	s_branch .LBB90_3
.LBB90_1:                               ; %Flow1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v32, off, s33 offset:448 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v32, 17
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:452 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:556 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v32, s0, 18
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v32, s33 offset:448 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB90_4
; %bb.2:
	scratch_load_b128 v[0:3], off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:556 ; 16-byte Folded Spill
	s_branch .LBB90_4
.LBB90_3:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:400
	scratch_load_b128 v[0:3], off, s33 offset:400
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:452 ; 16-byte Folded Spill
	s_branch .LBB90_1
.LBB90_4:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v32, off, s33 offset:448 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v32, 18
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:556 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:384
	scratch_load_b32 v0, off, s33 offset:276
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:572 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v32, s1, 19
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v32, s33 offset:448 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB90_5
	s_branch .LBB90_7
.LBB90_5:                               ; %Flow
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v32, off, s33 offset:448 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v32, 19
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:572 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:588 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v32, s0, 20
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v32, s33 offset:448 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB90_8
; %bb.6:
	scratch_load_b128 v[0:3], off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:588 ; 16-byte Folded Spill
	s_branch .LBB90_8
.LBB90_7:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:432
	scratch_load_b128 v[0:3], off, s33 offset:432
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:572 ; 16-byte Folded Spill
	s_branch .LBB90_5
.LBB90_8:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v32, off, s33 offset:448 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v32, 20
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v32, 2
	v_readlane_b32 s14, v32, 3
	v_readlane_b32 s13, v32, 4
	v_readlane_b32 s12, v32, 5
	v_readlane_b32 s10, v32, 6
	v_readlane_b32 s11, v32, 7
	v_readlane_b32 s8, v32, 8
	v_readlane_b32 s9, v32, 9
	v_readlane_b32 s6, v32, 0
	v_readlane_b32 s7, v32, 1
	v_readlane_b32 s4, v32, 10
	v_readlane_b32 s5, v32, 11
	scratch_load_b32 v31, off, s33 offset:468 ; 4-byte Folded Reload
	scratch_load_b128 v[0:3], off, s33 offset:588 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:416
	scratch_load_b32 v0, off, s33 offset:100
	scratch_load_b32 v1, off, s33 offset:104
	scratch_load_b128 v[5:8], off, s33 offset:384
	scratch_load_b128 v[9:12], off, s33 offset:416
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub256@rel32@lo+4
	s_addc_u32 s1, s1, sub256@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v30, 0
	v_readlane_b32 s31, v30, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v30, off, s33 offset:604 ; 4-byte Folded Reload
	scratch_load_b32 v32, off, s33 offset:608 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffd90
	s_mov_b32 s33, s21
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end90:
	.size	redc1_256_v3, .Lfunc_end90-redc1_256_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 6616
; NumSgprs: 34
; NumVgprs: 33
; ScratchSize: 864
; MemoryBound: 0
	.text
	.hidden	redc1_384_v3                    ; -- Begin function redc1_384_v3
	.globl	redc1_384_v3
	.p2align	2
	.type	redc1_384_v3,@function
redc1_384_v3:                           ; @redc1_384_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s21, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v40, s33 offset:916 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:920 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x3a0
	v_writelane_b32 v40, s30, 0
	v_writelane_b32 v40, s31, 1
	scratch_store_b32 off, v31, s33 offset:708 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr41 : SGPR spill to VGPR lane
	v_writelane_b32 v41, s6, 0
	v_writelane_b32 v41, s7, 1
	scratch_store_b32 off, v30, s33 offset:800 ; 4-byte Folded Spill
	scratch_store_b32 off, v29, s33 offset:804 ; 4-byte Folded Spill
	scratch_store_b32 off, v28, s33 offset:792 ; 4-byte Folded Spill
	scratch_store_b32 off, v27, s33 offset:812 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:816 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:820 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:796 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:824 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:828 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:832 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:808 ; 4-byte Folded Spill
	v_mov_b32_e32 v21, v19
	scratch_load_b32 v19, off, s33 offset:832 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v18
	scratch_load_b32 v18, off, s33 offset:828 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v17
	scratch_load_b32 v17, off, s33 offset:824 ; 4-byte Folded Reload
	v_mov_b32_e32 v25, v15
	scratch_load_b32 v15, off, s33 offset:820 ; 4-byte Folded Reload
	v_mov_b32_e32 v26, v14
	scratch_load_b32 v14, off, s33 offset:816 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v13
	scratch_load_b32 v13, off, s33 offset:812 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v12
	scratch_load_b32 v12, off, s33 offset:808 ; 4-byte Folded Reload
	v_mov_b32_e32 v33, v11
	scratch_load_b32 v11, off, s33 offset:804 ; 4-byte Folded Reload
	v_mov_b32_e32 v34, v10
	scratch_load_b32 v10, off, s33 offset:800 ; 4-byte Folded Reload
	v_mov_b32_e32 v35, v9
	v_mov_b32_e32 v24, v8
	scratch_load_b32 v8, off, s33 offset:796 ; 4-byte Folded Reload
	v_mov_b32_e32 v37, v7
	v_mov_b32_e32 v38, v6
	v_mov_b32_e32 v39, v5
	v_mov_b32_e32 v32, v4
	scratch_load_b32 v4, off, s33 offset:792 ; 4-byte Folded Reload
	v_mov_b32_e32 v28, v3
	v_mov_b32_e32 v29, v2
	v_mov_b32_e32 v30, v1
	v_mov_b32_e32 v36, v0
	v_writelane_b32 v41, s15, 2
	v_writelane_b32 v41, s14, 3
	v_writelane_b32 v41, s13, 4
	v_writelane_b32 v41, s12, 5
	v_writelane_b32 v41, s10, 6
	v_writelane_b32 v41, s11, 7
	v_writelane_b32 v41, s8, 8
	v_writelane_b32 v41, s9, 9
	v_writelane_b32 v41, s4, 10
	v_writelane_b32 v41, s5, 11
	scratch_load_b32 v5, off, s33 offset:16
	scratch_load_b32 v6, off, s33 offset:12
	scratch_load_b32 v7, off, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:4
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_load_b32 v9, off, s33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v19
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v27
	v_mov_b32_e32 v22, v26
	v_mov_b32_e32 v23, v25
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr24 killed $vgpr24 def $vgpr24_vgpr25_vgpr26_vgpr27 killed $exec
	v_mov_b32_e32 v25, v35
	v_mov_b32_e32 v26, v34
	v_mov_b32_e32 v27, v33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr32 killed $vgpr32 def $vgpr32_vgpr33_vgpr34_vgpr35 killed $exec
	v_mov_b32_e32 v33, v39
	v_mov_b32_e32 v34, v38
	v_mov_b32_e32 v35, v37
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr36 killed $vgpr36 def $vgpr36_vgpr37_vgpr38_vgpr39 killed $exec
	v_mov_b32_e32 v37, v30
	v_mov_b32_e32 v38, v29
	v_mov_b32_e32 v39, v28
	scratch_load_b32 v28, off, s33 offset:32
	scratch_load_b32 v28, off, s33 offset:28
	scratch_load_b32 v28, off, s33 offset:24
	scratch_load_b32 v28, off, s33 offset:20
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[36:39], s33 offset:48
	scratch_store_b128 off, v[32:35], s33 offset:64
	scratch_store_b128 off, v[24:27], s33 offset:80
	scratch_store_b128 off, v[20:23], s33 offset:96
	scratch_store_b128 off, v[16:19], s33 offset:112
	scratch_store_b128 off, v[12:15], s33 offset:128
	scratch_store_b128 off, v[8:11], s33 offset:144
	scratch_store_b128 off, v[4:7], s33 offset:160
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b32 v0, off, s33 offset:48
	s_mov_b32 s0, 0
	v_writelane_b32 v41, s0, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b32 v0, off, s33 offset:52
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b32 v0, off, s33 offset:56
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v0, off, s33 offset:60
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b32 v0, off, s33 offset:64
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b32 v0, off, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v0, off, s33 offset:72
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v0, off, s33 offset:76
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v0, off, s33 offset:80
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b32 v0, off, s33 offset:84
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b32 v0, off, s33 offset:88
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v0, off, s33 offset:92
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b32 v0, off, s33 offset:96
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b32 v0, off, s33 offset:100
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b32 v0, off, s33 offset:104
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b32 v0, off, s33 offset:108
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v0, off, s33 offset:112
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:320
	scratch_load_b32 v0, off, s33 offset:116
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:328
	scratch_load_b32 v0, off, s33 offset:120
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:336
	scratch_load_b32 v0, off, s33 offset:124
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:344
	scratch_load_b32 v0, off, s33 offset:128
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b32 v0, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b32 v0, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b32 v0, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v0, off, s33 offset:48
	scratch_load_b32 v1, off, s33 offset:20
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:384
	scratch_load_b128 v[7:10], off, s33 offset:144
	scratch_load_b32 v1, off, s33 offset:384
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:448
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b32 v1, off, s33 offset:384
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:464
	scratch_load_b128 v[7:10], off, s33 offset:176
	scratch_load_b32 v1, off, s33 offset:384
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:480
	scratch_load_b32 v4, off, s33 offset:448
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:192
	scratch_load_b32 v4, off, s33 offset:452
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:200
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b64 v[0:1], off, s33 offset:192
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:200
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	scratch_load_b32 v4, off, s33 offset:456
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:208
	scratch_load_b32 v4, off, s33 offset:460
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:216
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:216
	scratch_load_b32 v4, off, s33 offset:464
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b32 v4, off, s33 offset:468
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v4, off, s33 offset:472
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v4, off, s33 offset:476
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:248
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v4, off, s33 offset:480
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:256
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b32 v4, off, s33 offset:484
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:264
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b32 v4, off, s33 offset:488
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:272
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:492
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:280
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:384
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s0, s33, 0x184
	v_mov_b32_e32 v13, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xc8
	v_mov_b32_e32 v15, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v16, s33 offset:788 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xd8
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v17, s33 offset:784 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xe0
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v18, s33 offset:780 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xe8
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v19, s33 offset:776 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xf0
	v_mov_b32_e32 v20, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v20, s33 offset:772 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xf8
	v_mov_b32_e32 v21, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v21, s33 offset:768 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x100
	v_mov_b32_e32 v22, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v22, s33 offset:764 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x108
	v_mov_b32_e32 v23, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v23, s33 offset:760 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x110
	v_mov_b32_e32 v24, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v24, s33 offset:756 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x118
	v_mov_b32_e32 v25, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v25, s33 offset:712 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x120
	v_mov_b32_e32 v26, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v26, s33 offset:716 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc384_round_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc384_round_v3@rel32@hi+12
	v_writelane_b32 v41, s0, 13
	v_writelane_b32 v41, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:764 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:772 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:776 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:780 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:784 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:788 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:388
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x188
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x128
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:720 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:764 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:772 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:776 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:780 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:784 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:392
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x18c
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x130
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:724 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:764 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:772 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:776 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:780 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:396
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x190
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x138
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:728 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:764 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:772 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:776 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:400
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x194
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x140
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:732 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:732 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:764 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:772 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:404
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x198
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x148
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:736 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:736 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:732 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:764 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:768 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:408
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x19c
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x150
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:740 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:740 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:736 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:732 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:764 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:412
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x1a0
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x158
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:744 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:744 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:740 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:736 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:732 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:760 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:416
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x1a4
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x160
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:748 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:748 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:744 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:740 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:736 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:732 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:756 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:420
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x1a8
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x168
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v26, s33 offset:752 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v25, off, s33 offset:752 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:748 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:744 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:740 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:736 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:732 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:728 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:724 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:720 ; 4-byte Folded Reload
	scratch_load_b32 v16, off, s33 offset:716 ; 4-byte Folded Reload
	scratch_load_b32 v15, off, s33 offset:712 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b32 v12, off, s33 offset:424
	scratch_load_b32 v14, off, s33 offset:20
	s_add_i32 s2, s33, 0x1ac
	v_mov_b32_e32 v13, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x170
	v_mov_b32_e32 v26, s2
                                        ; implicit-def: $sgpr2
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v27
	v_mov_b32_e32 v9, v28
	v_mov_b32_e32 v10, v29
	v_mov_b32_e32 v11, v30
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b32 v7, off, s33 offset:428
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v41, s0, 15
	v_writelane_b32 v41, s1, 16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s0, v41, 15
	v_readlane_b32 s1, v41, 16
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:496
	scratch_load_b128 v[3:6], off, s33 offset:160
	scratch_load_b32 v7, off, s33 offset:428
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s0, v41, 15
	v_readlane_b32 s1, v41, 16
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:512
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b32 v7, off, s33 offset:428
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v41, 12
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:528
	scratch_load_b32 v4, off, s33 offset:496
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:288
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b32 v4, off, s33 offset:500
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:296
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b64 v[0:1], off, s33 offset:288
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:296
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b32 v4, off, s33 offset:504
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b64 v[0:1], off, s33 offset:296
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b32 v4, off, s33 offset:508
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:312
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b64 v[0:1], off, s33 offset:304
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:312
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:512
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:320
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:320
	scratch_load_b64 v[0:1], off, s33 offset:312
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:320
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:320
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:328
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:328
	scratch_load_b64 v[0:1], off, s33 offset:320
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:328
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:328
	scratch_load_b32 v4, off, s33 offset:520
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:336
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:336
	scratch_load_b64 v[0:1], off, s33 offset:328
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:336
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:336
	scratch_load_b32 v4, off, s33 offset:524
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:344
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:344
	scratch_load_b64 v[0:1], off, s33 offset:336
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:344
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:344
	scratch_load_b32 v4, off, s33 offset:528
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b64 v[0:1], off, s33 offset:344
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b32 v4, off, s33 offset:532
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:360
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b64 v[0:1], off, s33 offset:352
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:360
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b32 v4, off, s33 offset:536
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:368
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b64 v[0:1], off, s33 offset:360
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:368
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b32 v4, off, s33 offset:540
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:376
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b64 v[0:1], off, s33 offset:368
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:436
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:376
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v0, off, s33 offset:288
	scratch_load_b32 v6, off, s33 offset:296
	scratch_load_b32 v5, off, s33 offset:304
	scratch_load_b32 v4, off, s33 offset:312
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:544
	scratch_load_b128 v[0:3], off, s33 offset:544
	scratch_load_b32 v4, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:320
	scratch_load_b32 v6, off, s33 offset:328
	scratch_load_b32 v5, off, s33 offset:336
	scratch_load_b32 v4, off, s33 offset:344
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:560
	scratch_load_b128 v[0:3], off, s33 offset:560
	scratch_load_b32 v4, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:352
	scratch_load_b32 v6, off, s33 offset:360
	scratch_load_b32 v5, off, s33 offset:368
	scratch_load_b32 v4, off, s33 offset:376
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:576
	scratch_load_b128 v[0:3], off, s33 offset:576
	scratch_load_b32 v4, off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b64 v[0:1], off, s33 offset:376
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v0, off, s33 offset:436
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:692 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:688 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB91_1
	s_branch .LBB91_3
.LBB91_1:                               ; %Flow2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:688 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 17
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:692 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:836 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 18
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:688 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB91_4
; %bb.2:
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:836 ; 16-byte Folded Spill
	s_branch .LBB91_4
.LBB91_3:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:608
	scratch_load_b128 v[0:3], off, s33 offset:608
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:692 ; 16-byte Folded Spill
	s_branch .LBB91_1
.LBB91_4:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:688 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 18
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:836 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:592
	scratch_load_b32 v0, off, s33 offset:436
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:852 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 19
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:688 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB91_5
	s_branch .LBB91_7
.LBB91_5:                               ; %Flow1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:688 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 19
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:852 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:868 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 20
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:688 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB91_8
; %bb.6:
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:868 ; 16-byte Folded Spill
	s_branch .LBB91_8
.LBB91_7:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:640
	scratch_load_b128 v[0:3], off, s33 offset:640
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:852 ; 16-byte Folded Spill
	s_branch .LBB91_5
.LBB91_8:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:688 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 20
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:868 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:624
	scratch_load_b32 v0, off, s33 offset:436
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:884 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 21
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:688 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB91_9
	s_branch .LBB91_11
.LBB91_9:                               ; %Flow
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:688 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 21
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:884 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:900 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 22
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:688 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB91_12
; %bb.10:
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:900 ; 16-byte Folded Spill
	s_branch .LBB91_12
.LBB91_11:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:672
	scratch_load_b128 v[0:3], off, s33 offset:672
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:884 ; 16-byte Folded Spill
	s_branch .LBB91_9
.LBB91_12:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:688 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:708 ; 4-byte Folded Reload
	scratch_load_b128 v[0:3], off, s33 offset:900 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:656
	scratch_load_b32 v0, off, s33 offset:24
	scratch_load_b32 v1, off, s33 offset:28
	scratch_load_b32 v2, off, s33 offset:32
	scratch_load_b128 v[6:9], off, s33 offset:592
	scratch_load_b128 v[10:13], off, s33 offset:624
	scratch_load_b128 v[14:17], off, s33 offset:656
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub384@rel32@lo+4
	s_addc_u32 s1, s1, sub384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v40, 0
	v_readlane_b32 s31, v40, 1
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v40, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v41, off, s33 offset:920 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffc60
	s_mov_b32 s33, s21
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end91:
	.size	redc1_384_v3, .Lfunc_end91-redc1_384_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 10536
; NumSgprs: 34
; NumVgprs: 42
; ScratchSize: 1248
; MemoryBound: 0
	.text
	.hidden	redc1_448_v3                    ; -- Begin function redc1_448_v3
	.globl	redc1_448_v3
	.p2align	2
	.type	redc1_448_v3,@function
redc1_448_v3:                           ; @redc1_448_v3
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s21, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v40, s33 offset:1088 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:1092 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x450
	v_writelane_b32 v40, s30, 0
	v_writelane_b32 v40, s31, 1
	scratch_store_b32 off, v31, s33 offset:852 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr41 : SGPR spill to VGPR lane
	v_writelane_b32 v41, s6, 0
	v_writelane_b32 v41, s7, 1
	scratch_store_b32 off, v30, s33 offset:968 ; 4-byte Folded Spill
	scratch_store_b32 off, v29, s33 offset:972 ; 4-byte Folded Spill
	scratch_store_b32 off, v28, s33 offset:960 ; 4-byte Folded Spill
	scratch_store_b32 off, v27, s33 offset:980 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:984 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:988 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:964 ; 4-byte Folded Spill
	v_mov_b32_e32 v24, v22
	v_mov_b32_e32 v25, v21
	scratch_load_b32 v21, off, s33 offset:988 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v20
	scratch_load_b32 v20, off, s33 offset:984 ; 4-byte Folded Reload
	scratch_store_b32 off, v22, s33 offset:976 ; 4-byte Folded Spill
	v_mov_b32_e32 v27, v19
	scratch_load_b32 v19, off, s33 offset:980 ; 4-byte Folded Reload
	v_mov_b32_e32 v28, v18
	scratch_load_b32 v18, off, s33 offset:976 ; 4-byte Folded Reload
	v_mov_b32_e32 v29, v17
	scratch_load_b32 v17, off, s33 offset:972 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v16
	scratch_load_b32 v16, off, s33 offset:968 ; 4-byte Folded Reload
	v_mov_b32_e32 v33, v15
	v_mov_b32_e32 v34, v14
	scratch_load_b32 v14, off, s33 offset:964 ; 4-byte Folded Reload
	v_mov_b32_e32 v35, v13
	v_mov_b32_e32 v26, v12
	v_mov_b32_e32 v37, v11
	v_mov_b32_e32 v38, v10
	scratch_load_b32 v10, off, s33 offset:960 ; 4-byte Folded Reload
	v_mov_b32_e32 v39, v9
	v_mov_b32_e32 v32, v8
	v_mov_b32_e32 v49, v7
	v_mov_b32_e32 v50, v6
	v_mov_b32_e32 v51, v5
	v_mov_b32_e32 v36, v4
	scratch_store_b32 off, v3, s33 offset:952 ; 4-byte Folded Spill
	scratch_store_b32 off, v2, s33 offset:956 ; 4-byte Folded Spill
	v_mov_b32_e32 v30, v1
	scratch_load_b32 v1, off, s33 offset:956 ; 4-byte Folded Reload
	v_mov_b32_e32 v48, v0
	scratch_load_b32 v0, off, s33 offset:952 ; 4-byte Folded Reload
	v_writelane_b32 v41, s15, 2
	v_writelane_b32 v41, s14, 3
	v_writelane_b32 v41, s13, 4
	v_writelane_b32 v41, s12, 5
	v_writelane_b32 v41, s10, 6
	v_writelane_b32 v41, s11, 7
	v_writelane_b32 v41, s8, 8
	v_writelane_b32 v41, s9, 9
	v_writelane_b32 v41, s4, 10
	v_writelane_b32 v41, s5, 11
	scratch_load_b32 v6, off, s33 offset:32
	scratch_load_b32 v7, off, s33 offset:28
	scratch_load_b32 v8, off, s33 offset:24
	scratch_load_b32 v2, off, s33 offset:20
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v8
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v6
	scratch_load_b32 v11, off, s33 offset:16
	scratch_load_b32 v12, off, s33 offset:12
	scratch_load_b32 v13, off, s33 offset:8
	scratch_load_b32 v6, off, s33 offset:4
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v7, v13
	v_mov_b32_e32 v8, v12
	v_mov_b32_e32 v9, v11
	scratch_load_b32 v15, off, s33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v17
	v_mov_b32_e32 v12, v16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v13, v15
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15_vgpr16_vgpr17 killed $exec
	v_mov_b32_e32 v15, v21
	v_mov_b32_e32 v16, v20
	v_mov_b32_e32 v17, v19
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr18 killed $vgpr18 def $vgpr18_vgpr19_vgpr20_vgpr21 killed $exec
	v_mov_b32_e32 v19, v25
	v_mov_b32_e32 v20, v24
	v_mov_b32_e32 v21, v23
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr22 killed $vgpr22 def $vgpr22_vgpr23_vgpr24_vgpr25 killed $exec
	v_mov_b32_e32 v23, v29
	v_mov_b32_e32 v24, v28
	v_mov_b32_e32 v25, v27
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr26 killed $vgpr26 def $vgpr26_vgpr27_vgpr28_vgpr29 killed $exec
	v_mov_b32_e32 v27, v35
	v_mov_b32_e32 v28, v34
	v_mov_b32_e32 v29, v33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr32 killed $vgpr32 def $vgpr32_vgpr33_vgpr34_vgpr35 killed $exec
	v_mov_b32_e32 v33, v39
	v_mov_b32_e32 v34, v38
	v_mov_b32_e32 v35, v37
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr36 killed $vgpr36 def $vgpr36_vgpr37_vgpr38_vgpr39 killed $exec
	v_mov_b32_e32 v37, v51
	v_mov_b32_e32 v38, v50
	v_mov_b32_e32 v39, v49
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr48 killed $vgpr48 def $vgpr48_vgpr49_vgpr50_vgpr51 killed $exec
	v_mov_b32_e32 v49, v30
	v_mov_b32_e32 v50, v1
	v_mov_b32_e32 v51, v0
	scratch_load_b32 v30, off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:36
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v30
	scratch_load_b32 v30, off, s33 offset:60
	scratch_load_b32 v30, off, s33 offset:56
	scratch_load_b32 v30, off, s33 offset:52
	scratch_load_b32 v30, off, s33 offset:48
	scratch_load_b32 v30, off, s33 offset:44
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[48:51], s33 offset:64
	scratch_store_b128 off, v[36:39], s33 offset:80
	scratch_store_b128 off, v[32:35], s33 offset:96
	scratch_store_b128 off, v[26:29], s33 offset:112
	scratch_store_b128 off, v[22:25], s33 offset:128
	scratch_store_b128 off, v[18:21], s33 offset:144
	scratch_store_b128 off, v[14:17], s33 offset:160
	scratch_store_b128 off, v[10:13], s33 offset:176
	scratch_store_b128 off, v[6:9], s33 offset:192
	scratch_store_b128 off, v[2:5], s33 offset:208
	s_waitcnt vmcnt(5)
	scratch_store_b64 off, v[0:1], s33 offset:224
	scratch_load_b32 v0, off, s33 offset:64
	s_mov_b32 s0, 0
	v_writelane_b32 v41, s0, 12
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v0, off, s33 offset:68
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v0, off, s33 offset:72
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v0, off, s33 offset:76
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b32 v0, off, s33 offset:80
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b32 v0, off, s33 offset:84
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v0, off, s33 offset:88
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b32 v0, off, s33 offset:92
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b32 v0, off, s33 offset:96
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b32 v0, off, s33 offset:100
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b32 v0, off, s33 offset:104
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v0, off, s33 offset:108
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:320
	scratch_load_b32 v0, off, s33 offset:112
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:328
	scratch_load_b32 v0, off, s33 offset:116
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:336
	scratch_load_b32 v0, off, s33 offset:120
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:344
	scratch_load_b32 v0, off, s33 offset:124
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b32 v0, off, s33 offset:128
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b32 v0, off, s33 offset:132
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b32 v0, off, s33 offset:136
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v0, off, s33 offset:140
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:384
	scratch_load_b32 v0, off, s33 offset:144
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:392
	scratch_load_b32 v0, off, s33 offset:148
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:400
	scratch_load_b32 v0, off, s33 offset:152
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:408
	scratch_load_b32 v0, off, s33 offset:156
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:416
	scratch_load_b32 v0, off, s33 offset:160
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:424
	scratch_load_b32 v0, off, s33 offset:164
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v0, off, s33 offset:168
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:440
	scratch_load_b32 v0, off, s33 offset:172
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:448
	scratch_load_b32 v0, off, s33 offset:64
	scratch_load_b32 v1, off, s33 offset:44
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:456
	scratch_load_b128 v[7:10], off, s33 offset:176
	scratch_load_b32 v1, off, s33 offset:456
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:528
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b32 v1, off, s33 offset:456
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:544
	scratch_load_b128 v[7:10], off, s33 offset:208
	scratch_load_b32 v1, off, s33 offset:456
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:560
	scratch_load_b64 v[3:4], off, s33 offset:224
	scratch_load_b32 v1, off, s33 offset:456
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v4
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v2, v0, v1
	v_mov_b32_e32 v0, v3
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:576
	scratch_load_b32 v4, off, s33 offset:528
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:232
	scratch_load_b32 v4, off, s33 offset:532
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b64 v[0:1], off, s33 offset:232
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:240
	scratch_load_b32 v4, off, s33 offset:536
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:248
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:248
	scratch_load_b32 v4, off, s33 offset:540
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:256
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:256
	scratch_load_b32 v4, off, s33 offset:544
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:264
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:264
	scratch_load_b32 v4, off, s33 offset:548
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:272
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:272
	scratch_load_b32 v4, off, s33 offset:552
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:280
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:280
	scratch_load_b32 v4, off, s33 offset:556
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:288
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:288
	scratch_load_b32 v4, off, s33 offset:560
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:296
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:296
	scratch_load_b32 v4, off, s33 offset:564
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:304
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:304
	scratch_load_b32 v4, off, s33 offset:568
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:312
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:312
	scratch_load_b32 v4, off, s33 offset:572
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:320
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:320
	scratch_load_b32 v4, off, s33 offset:576
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:328
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:328
	scratch_load_b32 v4, off, s33 offset:580
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:336
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:336
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:456
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s0, s33, 0x1cc
	v_mov_b32_e32 v15, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xf0
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xf8
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v18, s33 offset:948 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x100
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v19, s33 offset:944 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x108
	v_mov_b32_e32 v20, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v20, s33 offset:940 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x110
	v_mov_b32_e32 v21, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v21, s33 offset:936 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x118
	v_mov_b32_e32 v22, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v22, s33 offset:932 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x120
	v_mov_b32_e32 v23, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v23, s33 offset:928 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x128
	v_mov_b32_e32 v24, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v24, s33 offset:924 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x130
	v_mov_b32_e32 v25, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v25, s33 offset:920 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x138
	v_mov_b32_e32 v26, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v26, s33 offset:916 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x140
	v_mov_b32_e32 v27, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v27, s33 offset:912 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x148
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v28, s33 offset:908 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x150
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v29, s33 offset:856 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x158
	v_mov_b32_e32 v30, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v30, s33 offset:860 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc448_round_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc448_round_v3@rel32@hi+12
	v_writelane_b32 v41, s0, 13
	v_writelane_b32 v41, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:924 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:932 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:936 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:940 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:944 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:948 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:460
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1d0
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x160
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:864 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:924 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:932 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:936 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:940 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:944 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:464
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1d4
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x168
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:868 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:924 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:932 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:936 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:940 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:468
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1d8
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x170
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:872 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:924 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:932 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:936 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:472
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1dc
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x178
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:876 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:924 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:932 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:476
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1e0
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x180
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:880 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:924 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:928 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:480
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1e4
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x188
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:884 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:884 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:924 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:484
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1e8
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x190
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:888 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:888 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:884 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:920 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:488
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1ec
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x198
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:892 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:892 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:888 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:884 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:916 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:492
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1f0
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x1a0
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:896 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:896 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:892 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:888 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:884 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:912 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:496
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1f4
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x1a8
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:900 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:900 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:896 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:892 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:888 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:884 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:908 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:500
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1f8
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x1b0
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v30, s33 offset:904 ; 4-byte Folded Spill
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v29, off, s33 offset:904 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:900 ; 4-byte Folded Reload
	scratch_load_b32 v27, off, s33 offset:896 ; 4-byte Folded Reload
	scratch_load_b32 v26, off, s33 offset:892 ; 4-byte Folded Reload
	scratch_load_b32 v25, off, s33 offset:888 ; 4-byte Folded Reload
	scratch_load_b32 v24, off, s33 offset:884 ; 4-byte Folded Reload
	scratch_load_b32 v23, off, s33 offset:880 ; 4-byte Folded Reload
	scratch_load_b32 v22, off, s33 offset:876 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:872 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:868 ; 4-byte Folded Reload
	scratch_load_b32 v19, off, s33 offset:864 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:860 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:856 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 13
	v_readlane_b32 s1, v41, 14
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b128 v[7:10], off, s33 offset:192
	scratch_load_b128 v[34:37], off, s33 offset:208
	scratch_load_b64 v[32:33], off, s33 offset:224
	scratch_load_b32 v14, off, s33 offset:504
	scratch_load_b32 v16, off, s33 offset:44
	s_add_i32 s2, s33, 0x1fc
	v_mov_b32_e32 v15, s2
                                        ; implicit-def: $sgpr2
	s_add_i32 s2, s33, 0x1b8
	v_mov_b32_e32 v30, s2
                                        ; implicit-def: $sgpr2
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	scratch_load_b128 v[3:6], off, s33 offset:176
	scratch_load_b32 v7, off, s33 offset:508
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v41, s0, 15
	v_writelane_b32 v41, s1, 16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 15
	v_readlane_b32 s1, v41, 16
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:592
	scratch_load_b128 v[3:6], off, s33 offset:192
	scratch_load_b32 v7, off, s33 offset:508
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s0, v41, 15
	v_readlane_b32 s1, v41, 16
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:608
	scratch_load_b128 v[3:6], off, s33 offset:208
	scratch_load_b32 v7, off, s33 offset:508
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s15, v41, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:624
	scratch_load_b64 v[1:2], off, s33 offset:224
	scratch_load_b32 v3, off, s33 offset:508
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v2
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv2_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv2_jS_@rel32@hi+12
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v3
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v41, 12
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:640
	scratch_load_b32 v4, off, s33 offset:592
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:344
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:344
	scratch_load_b32 v4, off, s33 offset:596
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b64 v[0:1], off, s33 offset:344
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:352
	scratch_load_b32 v4, off, s33 offset:600
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:360
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b64 v[0:1], off, s33 offset:352
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:360
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:360
	scratch_load_b32 v4, off, s33 offset:604
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:368
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b64 v[0:1], off, s33 offset:360
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:368
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:368
	scratch_load_b32 v4, off, s33 offset:608
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:376
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b64 v[0:1], off, s33 offset:368
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:376
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:376
	scratch_load_b32 v4, off, s33 offset:612
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:384
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:384
	scratch_load_b64 v[0:1], off, s33 offset:376
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:384
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:384
	scratch_load_b32 v4, off, s33 offset:616
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:392
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:392
	scratch_load_b64 v[0:1], off, s33 offset:384
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:392
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:392
	scratch_load_b32 v4, off, s33 offset:620
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:400
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:400
	scratch_load_b64 v[0:1], off, s33 offset:392
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:400
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:400
	scratch_load_b32 v4, off, s33 offset:624
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:408
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:408
	scratch_load_b64 v[0:1], off, s33 offset:400
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:408
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:408
	scratch_load_b32 v4, off, s33 offset:628
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:416
	scratch_load_b64 v[0:1], off, s33 offset:408
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:416
	scratch_load_b32 v4, off, s33 offset:632
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:424
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:424
	scratch_load_b64 v[0:1], off, s33 offset:416
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:424
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:424
	scratch_load_b32 v4, off, s33 offset:636
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:432
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b64 v[0:1], off, s33 offset:424
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:432
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:432
	scratch_load_b32 v4, off, s33 offset:640
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:440
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:440
	scratch_load_b64 v[0:1], off, s33 offset:432
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:440
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:440
	scratch_load_b32 v4, off, s33 offset:644
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:448
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:448
	scratch_load_b64 v[0:1], off, s33 offset:440
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v4, off, s33 offset:516
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	scratch_load_b64 v[1:2], off, s33 offset:448
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:448
	scratch_load_b32 v0, off, s33 offset:344
	scratch_load_b32 v6, off, s33 offset:352
	scratch_load_b32 v5, off, s33 offset:360
	scratch_load_b32 v4, off, s33 offset:368
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:656
	scratch_load_b128 v[0:3], off, s33 offset:656
	scratch_load_b32 v4, off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:376
	scratch_load_b32 v6, off, s33 offset:384
	scratch_load_b32 v5, off, s33 offset:392
	scratch_load_b32 v4, off, s33 offset:400
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:672
	scratch_load_b128 v[0:3], off, s33 offset:672
	scratch_load_b32 v4, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:408
	scratch_load_b32 v6, off, s33 offset:416
	scratch_load_b32 v5, off, s33 offset:424
	scratch_load_b32 v4, off, s33 offset:432
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:688
	scratch_load_b128 v[0:3], off, s33 offset:688
	scratch_load_b32 v4, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:440
	scratch_load_b32 v2, off, s33 offset:448
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:704
	scratch_load_b64 v[0:1], off, s33 offset:704
	scratch_load_b32 v2, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_store_b64 v2, v[0:1], off
	scratch_load_b64 v[0:1], off, s33 offset:448
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:512
	scratch_load_b32 v0, off, s33 offset:516
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:836 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB92_1
	s_branch .LBB92_3
.LBB92_1:                               ; %Flow3
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 17
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:836 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:992 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 18
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB92_4
; %bb.2:
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:992 ; 16-byte Folded Spill
	s_branch .LBB92_4
.LBB92_3:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:736
	scratch_load_b128 v[0:3], off, s33 offset:736
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:836 ; 16-byte Folded Spill
	s_branch .LBB92_1
.LBB92_4:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 18
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:992 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:720
	scratch_load_b32 v0, off, s33 offset:516
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1008 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 19
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB92_5
	s_branch .LBB92_7
.LBB92_5:                               ; %Flow2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 19
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1008 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1024 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 20
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB92_8
; %bb.6:
	scratch_load_b128 v[0:3], off, s33 offset:192
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1024 ; 16-byte Folded Spill
	s_branch .LBB92_8
.LBB92_7:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:768
	scratch_load_b128 v[0:3], off, s33 offset:768
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1008 ; 16-byte Folded Spill
	s_branch .LBB92_5
.LBB92_8:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 20
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1024 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:752
	scratch_load_b32 v0, off, s33 offset:516
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1040 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 21
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB92_9
	s_branch .LBB92_11
.LBB92_9:                               ; %Flow1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 21
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1040 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1056 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 22
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB92_12
; %bb.10:
	scratch_load_b128 v[0:3], off, s33 offset:208
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1056 ; 16-byte Folded Spill
	s_branch .LBB92_12
.LBB92_11:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:800
	scratch_load_b128 v[0:3], off, s33 offset:800
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1040 ; 16-byte Folded Spill
	s_branch .LBB92_9
.LBB92_12:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 22
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1056 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:784
	scratch_load_b32 v0, off, s33 offset:516
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr2_sgpr3
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:1072 ; 8-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v41, s1, 23
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB92_13
	s_branch .LBB92_15
.LBB92_13:                              ; %Flow
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 23
	s_or_saveexec_b32 s0, s0
	scratch_load_b64 v[0:1], off, s33 offset:1072 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1080 ; 8-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v41, s0, 24
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v41, s33 offset:832 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB92_16
; %bb.14:
	scratch_load_b64 v[0:1], off, s33 offset:224
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1080 ; 8-byte Folded Spill
	s_branch .LBB92_16
.LBB92_15:
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:824
	scratch_load_b64 v[0:1], off, s33 offset:824
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1072 ; 8-byte Folded Spill
	s_branch .LBB92_13
.LBB92_16:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v41, off, s33 offset:832 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:852 ; 4-byte Folded Reload
	scratch_load_b64 v[0:1], off, s33 offset:1080 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:816
	scratch_load_b32 v0, off, s33 offset:48
	scratch_load_b32 v1, off, s33 offset:52
	scratch_load_b32 v2, off, s33 offset:56
	scratch_load_b32 v3, off, s33 offset:60
	scratch_load_b128 v[7:10], off, s33 offset:720
	scratch_load_b128 v[11:14], off, s33 offset:752
	scratch_load_b128 v[19:22], off, s33 offset:784
	scratch_load_b64 v[17:18], off, s33 offset:816
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v12, v19
	v_mov_b32_e32 v13, v20
	v_mov_b32_e32 v14, v21
	v_mov_b32_e32 v15, v22
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v17
	v_mov_b32_e32 v17, v18
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sub448@rel32@lo+4
	s_addc_u32 s1, s1, sub448@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v40, 0
	v_readlane_b32 s31, v40, 1
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v40, off, s33 offset:1088 ; 4-byte Folded Reload
	scratch_load_b32 v41, off, s33 offset:1092 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffbb0
	s_mov_b32 s33, s21
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end92:
	.size	redc1_448_v3, .Lfunc_end92-redc1_448_v3
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 13020
; NumSgprs: 34
; NumVgprs: 52
; ScratchSize: 1472
; MemoryBound: 0
	.text
	.hidden	dec128                          ; -- Begin function dec128
	.globl	dec128
	.p2align	2
	.type	dec128,@function
dec128:                                 ; @dec128
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s2, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 8
	scratch_store_b32 off, v0, s33
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	s_mov_b32 s0, -1
	v_add_nc_u32_e64 v5, v5, s0
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s1, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	v_cndmask_b32_e64 v0, 0, 1, s0
	s_add_i32 s32, s32, -8
	s_mov_b32 s33, s2
	s_setpc_b64 s[30:31]
.Lfunc_end93:
	.size	dec128, .Lfunc_end93-dec128
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 344
; NumSgprs: 34
; NumVgprs: 7
; ScratchSize: 8
; MemoryBound: 0
	.text
	.hidden	dec256                          ; -- Begin function dec256
	.globl	dec256
	.p2align	2
	.type	dec256,@function
dec256:                                 ; @dec256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s3, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 12
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	s_mov_b32 s0, -1
	v_add_nc_u32_e64 v5, v5, s0
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s1, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s2, v0, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	v_cndmask_b32_e64 v0, 0, 1, s0
	s_add_i32 s32, s32, -12
	s_mov_b32 s33, s3
	s_setpc_b64 s[30:31]
.Lfunc_end94:
	.size	dec256, .Lfunc_end94-dec256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 648
; NumSgprs: 34
; NumVgprs: 7
; ScratchSize: 12
; MemoryBound: 0
	.text
	.hidden	inc384                          ; -- Begin function inc384
	.globl	inc384
	.p2align	2
	.type	inc384,@function
inc384:                                 ; @inc384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s3, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 16
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	s_mov_b32 s0, 1
	v_add_nc_u32_e64 v5, v5, s0
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	s_mov_b32 s0, 0
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v1
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v2
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v3
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s1, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s2, v0, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v1
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v2
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v3
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v1
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v2
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s0, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s0
	v_mov_b32_e32 v5, v3
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	s_add_i32 s32, s32, -16
	s_mov_b32 s33, s3
	s_setpc_b64 s[30:31]
.Lfunc_end95:
	.size	inc384, .Lfunc_end95-inc384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 916
; NumSgprs: 34
; NumVgprs: 7
; ScratchSize: 16
; MemoryBound: 0
	.text
	.hidden	dec384                          ; -- Begin function dec384
	.globl	dec384
	.p2align	2
	.type	dec384,@function
dec384:                                 ; @dec384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s3, s33
	s_mov_b32 s33, s32
	s_add_i32 s32, s32, 16
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_store_b32 off, v2, s33 offset:8
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	s_mov_b32 s0, -1
	v_add_nc_u32_e64 v5, v5, s0
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33
	s_mov_b32 s1, 12
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s2, v0, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s2, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s2
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_load_b32 v0, v0, off
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v1
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_cmp_eq_u32_e64 s1, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s1
	v_mov_b32_e32 v5, v2
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b32 v4, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[0:3], v4, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v2
	v_cmp_eq_u32_e64 s0, v5, s0
	v_cndmask_b32_e64 v6, 0, 1, s0
	v_mov_b32_e32 v5, v3
	v_sub_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 v4, v[0:3], off
	s_add_i32 s32, s32, -16
	s_mov_b32 s33, s3
	s_setpc_b64 s[30:31]
.Lfunc_end96:
	.size	dec384, .Lfunc_end96-dec384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 912
; NumSgprs: 34
; NumVgprs: 7
; ScratchSize: 16
; MemoryBound: 0
	.text
	.hidden	montgomeryMul256                ; -- Begin function montgomeryMul256
	.globl	montgomeryMul256
	.p2align	2
	.type	montgomeryMul256,@function
montgomeryMul256:                       ; @montgomeryMul256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s23, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v33, s33 offset:192 ; 4-byte Folded Spill
	scratch_store_b32 off, v34, s33 offset:196 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xd0
	v_writelane_b32 v33, s30, 0
	v_writelane_b32 v33, s31, 1
	scratch_store_b32 off, v31, s33 offset:160 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr34 : SGPR spill to VGPR lane
	v_writelane_b32 v34, s6, 0
	v_writelane_b32 v34, s7, 1
	scratch_store_b32 off, v17, s33 offset:172 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:176 ; 4-byte Folded Spill
	scratch_store_b32 off, v15, s33 offset:180 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:164 ; 4-byte Folded Spill
	scratch_store_b32 off, v13, s33 offset:184 ; 4-byte Folded Spill
	scratch_store_b32 off, v12, s33 offset:188 ; 4-byte Folded Spill
	v_mov_b32_e32 v12, v10
	scratch_load_b32 v10, off, s33 offset:188 ; 4-byte Folded Reload
	scratch_store_b32 off, v12, s33 offset:168 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, v9
	scratch_load_b32 v9, off, s33 offset:184 ; 4-byte Folded Reload
	v_mov_b32_e32 v14, v8
	v_mov_b32_e32 v15, v7
	scratch_load_b32 v7, off, s33 offset:180 ; 4-byte Folded Reload
	v_mov_b32_e32 v8, v6
	scratch_load_b32 v6, off, s33 offset:176 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v5
	scratch_load_b32 v5, off, s33 offset:172 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v4
	scratch_load_b32 v4, off, s33 offset:168 ; 4-byte Folded Reload
	v_mov_b32_e32 v21, v3
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v16, v1
	v_mov_b32_e32 v17, v0
	scratch_load_b32 v0, off, s33 offset:164 ; 4-byte Folded Reload
	v_writelane_b32 v34, s15, 2
	v_writelane_b32 v34, s14, 3
	v_writelane_b32 v34, s13, 4
	v_writelane_b32 v34, s12, 5
	v_writelane_b32 v34, s10, 6
	v_writelane_b32 v34, s11, 7
	v_writelane_b32 v34, s8, 8
	v_writelane_b32 v34, s9, 9
	v_writelane_b32 v34, s4, 10
	v_writelane_b32 v34, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v21
	v_mov_b32_e32 v14, v20
	v_mov_b32_e32 v15, v19
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v17, s33
	scratch_store_b32 off, v16, s33 offset:4
	scratch_store_b128 off, v[12:15], s33 offset:16
	scratch_store_b128 off, v[8:11], s33 offset:32
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_store_b32 off, v18, s33 offset:80
	scratch_load_b32 v0, off, s33
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	scratch_load_b32 v0, off, s33 offset:4
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[20:23], v0, off
	scratch_load_b128 v[11:14], off, s33 offset:16
	scratch_load_b128 v[24:27], off, s33 offset:32
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v24
	v_mov_b32_e32 v13, v25
	v_mov_b32_e32 v14, v26
	v_mov_b32_e32 v15, v27
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v5, v21
	v_mov_b32_e32 v6, v22
	v_mov_b32_e32 v7, v23
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul256schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul256schoolBook_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s4, v34, 10
	v_readlane_b32 s5, v34, 11
	v_readlane_b32 s6, v34, 0
	v_readlane_b32 s7, v34, 1
	v_readlane_b32 s8, v34, 8
	v_readlane_b32 s9, v34, 9
	v_readlane_b32 s10, v34, 6
	v_readlane_b32 s11, v34, 7
	v_readlane_b32 s12, v34, 5
	v_readlane_b32 s13, v34, 4
	v_readlane_b32 s14, v34, 3
	v_readlane_b32 s15, v34, 2
	scratch_load_b128 v[3:6], off, s33 offset:96
	scratch_load_b128 v[7:10], off, s33 offset:112
	scratch_load_b128 v[11:14], off, s33 offset:128
	scratch_load_b128 v[15:18], off, s33 offset:144
	scratch_load_b128 v[19:22], off, s33 offset:48
	scratch_load_b128 v[27:30], off, s33 offset:64
	scratch_load_b32 v24, off, s33 offset:80
	scratch_load_b32 v25, off, s33
	scratch_load_b32 v26, off, s33 offset:4
	s_waitcnt vmcnt(8)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(7)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v20, v27
	v_mov_b32_e32 v21, v28
	v_mov_b32_e32 v22, v29
	v_mov_b32_e32 v23, v30
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc1_256_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc1_256_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v33, 0
	v_readlane_b32 s31, v33, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v33, off, s33 offset:192 ; 4-byte Folded Reload
	scratch_load_b32 v34, off, s33 offset:196 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff30
	s_mov_b32 s33, s23
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end97:
	.size	montgomeryMul256, .Lfunc_end97-montgomeryMul256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1024
; NumSgprs: 34
; NumVgprs: 35
; ScratchSize: 1072
; MemoryBound: 0
	.text
	.hidden	FermatTest256                   ; -- Begin function FermatTest256
	.globl	FermatTest256
	.p2align	2
	.type	FermatTest256,@function
FermatTest256:                          ; @FermatTest256
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s26, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v35, s33 offset:1488 ; 4-byte Folded Spill
	scratch_store_b32 off, v36, s33 offset:1492 ; 4-byte Folded Spill
	scratch_store_b32 off, v37, s33 offset:1496 ; 4-byte Folded Spill
	scratch_store_b32 off, v38, s33 offset:1500 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x5f0
	v_writelane_b32 v35, s30, 0
	v_writelane_b32 v35, s31, 1
	scratch_store_b32 off, v31, s33 offset:1392 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr38 : SGPR spill to VGPR lane
	v_writelane_b32 v38, s6, 0
	v_writelane_b32 v38, s7, 1
	scratch_store_b32 off, v4, s33 offset:1404 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v3
	v_mov_b32_e32 v11, v2
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v4, v0
	scratch_load_b32 v0, off, s33 offset:1404 ; 4-byte Folded Reload
	v_writelane_b32 v38, s15, 2
	v_writelane_b32 v38, s14, 3
	v_writelane_b32 v38, s13, 4
	v_writelane_b32 v38, s12, 5
	v_writelane_b32 v38, s10, 6
	v_writelane_b32 v38, s11, 7
	v_writelane_b32 v38, s8, 8
	v_writelane_b32 v38, s9, 9
	v_writelane_b32 v38, s4, 10
	v_writelane_b32 v38, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v5
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v12
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v7, v10
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[4:7], s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:16
	scratch_store_b32 off, v8, s33 offset:32
	scratch_store_b32 off, v9, s33 offset:36
	scratch_load_b32 v0, off, s33
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, invert_limb@rel32@lo+4
	s_addc_u32 s1, s1, invert_limb@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	v_readlane_b32 s15, v38, 2
	v_readlane_b32 s14, v38, 3
	v_readlane_b32 s13, v38, 4
	v_readlane_b32 s12, v38, 5
	v_readlane_b32 s10, v38, 6
	v_readlane_b32 s11, v38, 7
	v_readlane_b32 s8, v38, 8
	v_readlane_b32 s9, v38, 9
	v_readlane_b32 s6, v38, 0
	v_readlane_b32 s7, v38, 1
	v_readlane_b32 s4, v38, 10
	v_readlane_b32 s5, v38, 11
	scratch_store_b32 off, v0, s33 offset:1072
	s_mov_b32 s16, 0
	v_writelane_b32 v38, s16, 12
	s_mov_b32 s0, 1
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s16
	v_mov_b32_e32 v5, s16
	v_mov_b32_e32 v4, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:1120
	s_mov_b32 s0, s16
	s_mov_b32 s1, s16
	s_mov_b32 s2, s16
	s_mov_b32 s3, s16
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:1136
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:1152
	scratch_load_b128 v[3:6], off, s33 offset:1152
	scratch_load_b128 v[7:10], off, s33 offset:1136
	scratch_load_b128 v[11:14], off, s33 offset:1120
	scratch_load_b128 v[15:18], off, s33
	scratch_load_b128 v[22:25], off, s33 offset:16
	s_add_i32 s0, s33, 0x440
	v_mov_b32_e32 v20, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v20, s33 offset:1396 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x450
	v_mov_b32_e32 v21, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v21, s33 offset:1400 ; 4-byte Folded Spill
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v22
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v24
	v_mov_b32_e32 v19, v25
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, modulo384to256@rel32@lo+4
	s_addc_u32 s1, s1, modulo384to256@rel32@hi+12
	v_writelane_b32 v38, s0, 13
	v_writelane_b32 v38, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v21, off, s33 offset:1400 ; 4-byte Folded Reload
	scratch_load_b32 v20, off, s33 offset:1396 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	v_readlane_b32 s4, v38, 10
	v_readlane_b32 s5, v38, 11
	v_readlane_b32 s6, v38, 0
	v_readlane_b32 s7, v38, 1
	v_readlane_b32 s8, v38, 8
	v_readlane_b32 s9, v38, 9
	v_readlane_b32 s10, v38, 6
	v_readlane_b32 s11, v38, 7
	v_readlane_b32 s12, v38, 5
	v_readlane_b32 s13, v38, 4
	v_readlane_b32 s14, v38, 3
	v_readlane_b32 s15, v38, 2
	v_readlane_b32 s0, v38, 13
	v_readlane_b32 s1, v38, 14
	scratch_load_b128 v[0:3], off, s33 offset:1088
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b128 v[0:3], off, s33 offset:1104
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	v_mov_b32_e32 v0, 2
	scratch_store_b32 off, v0, s33 offset:1120
	scratch_load_b128 v[3:6], off, s33 offset:1152
	scratch_load_b128 v[7:10], off, s33 offset:1136
	scratch_load_b128 v[11:14], off, s33 offset:1120
	scratch_load_b128 v[15:18], off, s33
	scratch_load_b128 v[22:25], off, s33 offset:16
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v22
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v24
	v_mov_b32_e32 v19, v25
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v38, 12
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1080
	scratch_load_b128 v[0:3], off, s33 offset:1088
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:1104
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:1084
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1084
	scratch_load_b32 v0, off, s33 offset:1084
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 15
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_2
; %bb.1:
	scratch_load_b32 v0, off, s33 offset:1080
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1080
	v_mov_b32_e32 v0, 32
	scratch_store_b32 off, v0, s33 offset:1084
.LBB98_2:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 15
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1088
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1232
	scratch_load_b128 v[0:3], off, s33 offset:1104
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1248
	v_mov_b32_e32 v0, 2
	scratch_store_b32 off, v0, s33 offset:1264
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v38, s0, 16
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB98_3:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 17
	v_readlane_b32 s1, v38, 16
	v_writelane_b32 v38, s1, 18
	scratch_load_b32 v0, off, s33 offset:1264
	s_mov_b32 s1, 16
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 19
	v_writelane_b32 v38, s0, 20
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 21
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_5
; %bb.4:                                ;   in Loop: Header=BB98_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v38, 2
	v_readlane_b32 s14, v38, 3
	v_readlane_b32 s13, v38, 4
	v_readlane_b32 s12, v38, 5
	v_readlane_b32 s10, v38, 6
	v_readlane_b32 s11, v38, 7
	v_readlane_b32 s8, v38, 8
	v_readlane_b32 s9, v38, 9
	v_readlane_b32 s6, v38, 0
	v_readlane_b32 s7, v38, 1
	v_readlane_b32 s4, v38, 10
	v_readlane_b32 s5, v38, 11
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	scratch_load_b128 v[5:8], off, s33 offset:1088
	scratch_load_b128 v[9:12], off, s33 offset:1104
	scratch_load_b128 v[13:16], off, s33
	scratch_load_b128 v[19:22], off, s33 offset:16
	scratch_load_b32 v18, off, s33 offset:1072
	s_add_i32 s0, s33, 0x4d0
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x4e0
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v14, v19
	v_mov_b32_e32 v15, v20
	v_mov_b32_e32 v16, v21
	v_mov_b32_e32 v17, v22
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, montgomeryMul256@rel32@lo+4
	s_addc_u32 s1, s1, montgomeryMul256@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:1232
	scratch_load_b32 v5, off, s33 offset:1264
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v4, s0
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v5, v5, s0, v4
	scratch_store_b128 v5, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:1248
	scratch_load_b32 v5, off, s33 offset:1264
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v5, s0, v5
	s_mov_b32 s0, 16
	v_add3_u32 v4, v4, v5, s0
	scratch_store_b128 v4, v[0:3], off
	s_branch .LBB98_6
.LBB98_5:                               ; %Flow10
                                        ;   in Loop: Header=BB98_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 21
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v38, 18
	v_readlane_b32 s1, v38, 20
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v38, s1, 17
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 22
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB98_3
	s_branch .LBB98_7
.LBB98_6:                               ;   in Loop: Header=BB98_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 19
	scratch_load_b32 v0, off, s33 offset:1264
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1264
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 20
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_5
.LBB98_7:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 22
	s_or_b32 exec_lo, exec_lo, s0
; %bb.8:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b128 v[0:3], off, s33
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1280
	scratch_load_b128 v[0:3], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1296
	scratch_load_b32 v0, off, s33 offset:1280
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1280
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1312
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v38, s0, 23
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB98_9:                               ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 24
	v_readlane_b32 s1, v38, 23
	v_writelane_b32 v38, s1, 25
	scratch_load_b32 v0, off, s33 offset:1312
	scratch_load_b32 v1, off, s33 offset:1080
	s_mov_b32 s1, 8
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, s1, v1
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 26
	v_writelane_b32 v38, s0, 27
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 28
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_11
; %bb.10:                               ;   in Loop: Header=BB98_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v38, 2
	v_readlane_b32 s14, v38, 3
	v_readlane_b32 s13, v38, 4
	v_readlane_b32 s12, v38, 5
	v_readlane_b32 s10, v38, 6
	v_readlane_b32 s11, v38, 7
	v_readlane_b32 s8, v38, 8
	v_readlane_b32 s9, v38, 9
	v_readlane_b32 s6, v38, 0
	v_readlane_b32 s7, v38, 1
	v_readlane_b32 s4, v38, 10
	v_readlane_b32 s5, v38, 11
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x500
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x510
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb2@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb2@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB98_12
.LBB98_11:                              ; %Flow9
                                        ;   in Loop: Header=BB98_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 28
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v38, 25
	v_readlane_b32 s1, v38, 27
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v38, s1, 24
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 23
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 29
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB98_9
	s_branch .LBB98_13
.LBB98_12:                              ;   in Loop: Header=BB98_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 26
	scratch_load_b32 v0, off, s33 offset:1312
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1312
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 27
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_11
.LBB98_13:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 29
	s_or_b32 exec_lo, exec_lo, s0
; %bb.14:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v38, 2
	v_readlane_b32 s14, v38, 3
	v_readlane_b32 s13, v38, 4
	v_readlane_b32 s12, v38, 5
	v_readlane_b32 s10, v38, 6
	v_readlane_b32 s11, v38, 7
	v_readlane_b32 s8, v38, 8
	v_readlane_b32 s9, v38, 9
	v_readlane_b32 s6, v38, 0
	v_readlane_b32 s7, v38, 1
	v_readlane_b32 s4, v38, 10
	v_readlane_b32 s5, v38, 11
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:1084
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v38, s1, 30
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_15
	s_branch .LBB98_17
.LBB98_15:                              ; %Flow8
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 30
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v38, 31
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1408 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
                                        ; implicit-def: $vgpr38 : SGPR spill to VGPR lane
	v_writelane_b32 v38, s0, 0
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB98_18
; %bb.16:
	scratch_load_b32 v0, off, s33 offset:1084
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1408 ; 4-byte Folded Spill
	s_branch .LBB98_18
.LBB98_17:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v38, s0, 31
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1380 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_15
.LBB98_18:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 0
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1408 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1308
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1308
	scratch_load_b128 v[0:3], off, s33 offset:1088
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1232
	scratch_load_b128 v[0:3], off, s33 offset:1104
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1248
	v_mov_b32_e32 v1, 0
	scratch_store_b32 off, v1, s33 offset:1316
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:1320
	scratch_load_b32 v0, off, s33 offset:1084
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	v_cmp_eq_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v38, s1, 1
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_19
	s_branch .LBB98_21
.LBB98_19:                              ; %Flow7
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 1
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v38, 2
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1412 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v38, s0, 3
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB98_22
; %bb.20:
	scratch_load_b32 v0, off, s33 offset:1084
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1412 ; 4-byte Folded Spill
	s_branch .LBB98_22
.LBB98_21:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_writelane_b32 v38, s0, 2
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_19
.LBB98_22:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 3
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1412 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1324
	scratch_load_b32 v0, off, s33 offset:1084
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1328
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v38, s0, 4
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB98_23:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB98_26 Depth 2
                                        ;       Child Loop BB98_39 Depth 3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 5
	v_readlane_b32 s1, v38, 4
	v_writelane_b32 v38, s1, 6
	scratch_load_b32 v0, off, s33 offset:1080
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 7
	v_writelane_b32 v38, s0, 8
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 9
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_25
; %bb.24:                               ;   in Loop: Header=BB98_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v38, s0, 10
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_26
.LBB98_25:                              ; %Flow6
                                        ;   in Loop: Header=BB98_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 9
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v38, 6
	v_readlane_b32 s1, v38, 8
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v38, s1, 5
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 4
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 11
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB98_23
	s_branch .LBB98_54
.LBB98_26:                              ;   Parent Loop BB98_23 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB98_39 Depth 3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 12
	v_readlane_b32 s1, v38, 10
	v_writelane_b32 v38, s1, 13
	scratch_load_b32 v0, off, s33 offset:1328
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 14
	v_writelane_b32 v38, s0, 15
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 16
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_29
; %bb.27:                               ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 17
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_30
; %bb.28:                               ;   in Loop: Header=BB98_26 Depth=2
	scratch_load_b32 v1, off, s33 offset:1308
	scratch_load_b32 v0, off, s33 offset:1316
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	v_lshrrev_b32_e64 v0, v0, v1
	s_mov_b32 s0, 1
	v_lshlrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1376
	scratch_load_b32 v0, off, s33 offset:1376
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v1, s0
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[2:5], s33 offset:1344
	scratch_load_b32 v0, off, s33 offset:1376
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	s_mov_b32 s0, 16
	v_add3_u32 v0, v0, v1, s0
	scratch_load_b128 v[0:3], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1360
	s_branch .LBB98_30
.LBB98_29:                              ; %Flow5
                                        ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 16
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v38, 13
	v_readlane_b32 s1, v38, 15
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v38, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v38, s1, 18
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB98_26
	s_branch .LBB98_52
.LBB98_30:                              ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 17
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v38, s1, 19
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_31
	s_branch .LBB98_33
.LBB98_31:                              ; %Flow4
                                        ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 19
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v38, 20
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1416 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v38, s0, 21
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB98_34
; %bb.32:                               ;   in Loop: Header=BB98_26 Depth=2
	scratch_load_b32 v0, off, s33 offset:1324
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1416 ; 4-byte Folded Spill
	s_branch .LBB98_34
.LBB98_33:                              ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v38, s0, 20
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_31
.LBB98_34:                              ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 21
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1416 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1324
	scratch_load_b32 v4, off, s33 offset:1316
	scratch_load_b128 v[0:3], off, s33 offset:1296
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_lshlrev_b32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:1296
	scratch_load_b32 v1, off, s33 offset:1316
	scratch_load_b32 v0, off, s33 offset:1328
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1328
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v38, s1, 22
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_35
	s_branch .LBB98_37
.LBB98_35:                              ; %Flow3
                                        ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 22
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v38, 23
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1420 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v38, s0, 24
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB98_38
; %bb.36:                               ;   in Loop: Header=BB98_26 Depth=2
	scratch_load_b32 v0, off, s33 offset:1324
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1420 ; 4-byte Folded Spill
	s_branch .LBB98_38
.LBB98_37:                              ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v38, s0, 23
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_35
.LBB98_38:                              ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 24
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1420 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1316
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v38, s0, 25
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB98_39:                              ;   Parent Loop BB98_23 Depth=1
                                        ;     Parent Loop BB98_26 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 26
	v_readlane_b32 s1, v38, 25
	v_writelane_b32 v38, s1, 27
	scratch_load_b32 v0, off, s33 offset:1324
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 28
	v_writelane_b32 v38, s0, 29
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v38, s0, 30
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
                                        ; implicit-def: $vgpr38 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_44
; %bb.40:                               ;   in Loop: Header=BB98_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1424 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v38, s1, 31
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_41
	s_branch .LBB98_43
.LBB98_41:                              ; %Flow1
                                        ;   in Loop: Header=BB98_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v37, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 31
	s_or_saveexec_b32 s0, s0
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1388 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b128 v[0:3], off, s33 offset:1424 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1440 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v38, s0, 0
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1388 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB98_45
; %bb.42:                               ;   in Loop: Header=BB98_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1232
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1440 ; 16-byte Folded Spill
	s_branch .LBB98_45
.LBB98_43:                              ;   in Loop: Header=BB98_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1344
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1424 ; 16-byte Folded Spill
	s_branch .LBB98_41
.LBB98_44:                              ; %Flow2
                                        ;   in Loop: Header=BB98_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v37, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 30
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v37, 27
	v_readlane_b32 s1, v37, 29
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1388 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v37, s1, 26
	s_mov_b32 s1, s0
	v_writelane_b32 v37, s1, 25
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v37, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 s1, s0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v38, s1, 1
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1388 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB98_39
	s_branch .LBB98_50
.LBB98_45:                              ;   in Loop: Header=BB98_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1388 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 0
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1440 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1344
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1456 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v38, s1, 2
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1388 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB98_46
	s_branch .LBB98_48
.LBB98_46:                              ; %Flow
                                        ;   in Loop: Header=BB98_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1388 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 2
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1456 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1472 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v38, s0, 3
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1388 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB98_49
; %bb.47:                               ;   in Loop: Header=BB98_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1248
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1472 ; 16-byte Folded Spill
	s_branch .LBB98_49
.LBB98_48:                              ;   in Loop: Header=BB98_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1360
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1456 ; 16-byte Folded Spill
	s_branch .LBB98_46
.LBB98_49:                              ;   in Loop: Header=BB98_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v36, off, s33 offset:1388 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v37, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(1)
	v_readlane_b32 s0, v36, 3
	s_or_b32 exec_lo, exec_lo, s0
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	scratch_load_b128 v[0:3], off, s33 offset:1472 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1360
	scratch_load_b128 v[5:8], off, s33 offset:1344
	scratch_load_b128 v[9:12], off, s33 offset:1360
	scratch_load_b128 v[13:16], off, s33
	scratch_load_b128 v[19:22], off, s33 offset:16
	scratch_load_b32 v18, off, s33 offset:1072
	s_add_i32 s0, s33, 0x4d0
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x4e0
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v14, v19
	v_mov_b32_e32 v15, v20
	v_mov_b32_e32 v16, v21
	v_mov_b32_e32 v17, v22
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, montgomeryMul256@rel32@lo+4
	s_addc_u32 s1, s1, montgomeryMul256@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v38, 28
	scratch_load_b32 v0, off, s33 offset:1324
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1324
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 29
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_44
.LBB98_50:                              ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1388 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 1
	s_or_b32 exec_lo, exec_lo, s0
; %bb.51:                               ;   in Loop: Header=BB98_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 14
	scratch_load_b32 v0, off, s33 offset:1320
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1320
	v_mov_b32_e32 v0, 4
	scratch_store_b32 off, v0, s33 offset:1324
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 15
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_29
.LBB98_52:                              ;   in Loop: Header=BB98_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 18
	s_or_b32 exec_lo, exec_lo, s0
; %bb.53:                               ;   in Loop: Header=BB98_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v37, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v37, 2
	v_readlane_b32 s14, v37, 3
	v_readlane_b32 s13, v37, 4
	v_readlane_b32 s12, v37, 5
	v_readlane_b32 s10, v37, 6
	v_readlane_b32 s11, v37, 7
	v_readlane_b32 s8, v37, 8
	v_readlane_b32 s9, v37, 9
	v_readlane_b32 s6, v37, 0
	v_readlane_b32 s7, v37, 1
	v_readlane_b32 s4, v37, 10
	v_readlane_b32 s5, v37, 11
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x500
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x510
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb2@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb2@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v38, 7
	scratch_load_b32 v0, off, s33 offset:1080
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1080
	v_mov_b32_e32 v0, 32
	scratch_store_b32 off, v0, s33 offset:1328
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v38, s0, 8
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v38, s33 offset:1384 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB98_25
.LBB98_54:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1384 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v38, 11
	s_or_b32 exec_lo, exec_lo, s0
; %bb.55:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v38, off, s33 offset:1380 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v38, 2
	v_readlane_b32 s14, v38, 3
	v_readlane_b32 s13, v38, 4
	v_readlane_b32 s12, v38, 5
	v_readlane_b32 s10, v38, 6
	v_readlane_b32 s11, v38, 7
	v_readlane_b32 s8, v38, 8
	v_readlane_b32 s9, v38, 9
	v_readlane_b32 s6, v38, 0
	v_readlane_b32 s7, v38, 1
	v_readlane_b32 s4, v38, 10
	v_readlane_b32 s5, v38, 11
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1392 ; 4-byte Folded Reload
	v_readlane_b32 s4, v38, 10
	v_readlane_b32 s5, v38, 11
	v_readlane_b32 s6, v38, 0
	v_readlane_b32 s7, v38, 1
	v_readlane_b32 s8, v38, 8
	v_readlane_b32 s9, v38, 9
	v_readlane_b32 s10, v38, 6
	v_readlane_b32 s11, v38, 7
	v_readlane_b32 s12, v38, 5
	v_readlane_b32 s13, v38, 4
	v_readlane_b32 s14, v38, 3
	v_readlane_b32 s15, v38, 2
	scratch_load_b128 v[3:6], off, s33 offset:1232
	scratch_load_b128 v[16:19], off, s33 offset:1248
	scratch_load_b128 v[12:15], off, s33
	scratch_load_b128 v[8:11], off, s33 offset:16
	scratch_load_b32 v24, off, s33 offset:1072
	scratch_load_b32 v25, off, s33 offset:32
	scratch_load_b32 v26, off, s33 offset:36
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v4, v16
	v_mov_b32_e32 v5, v17
	v_mov_b32_e32 v6, v18
	v_mov_b32_e32 v7, v19
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v16, v12
	v_mov_b32_e32 v17, v13
	v_mov_b32_e32 v18, v14
	v_mov_b32_e32 v19, v15
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v20, v8
	v_mov_b32_e32 v21, v9
	v_mov_b32_e32 v22, v10
	v_mov_b32_e32 v23, v11
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc1_256_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc1_256_v3@rel32@hi+12
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v8, v15
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v15
	v_mov_b32_e32 v11, v15
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v15
	v_mov_b32_e32 v14, v15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v35, 0
	v_readlane_b32 s31, v35, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v35, off, s33 offset:1488 ; 4-byte Folded Reload
	scratch_load_b32 v36, off, s33 offset:1492 ; 4-byte Folded Reload
	scratch_load_b32 v37, off, s33 offset:1496 ; 4-byte Folded Reload
	scratch_load_b32 v38, off, s33 offset:1500 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffa10
	s_mov_b32 s33, s26
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end98:
	.size	FermatTest256, .Lfunc_end98-FermatTest256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 7552
; NumSgprs: 36
; NumVgprs: 39
; ScratchSize: 2592
; MemoryBound: 0
	.text
	.protected	fermatTestBenchMark256  ; -- Begin function fermatTestBenchMark256
	.globl	fermatTestBenchMark256
	.p2align	8
	.type	fermatTestBenchMark256,@function
fermatTestBenchMark256:                 ; @fermatTestBenchMark256
; %bb.0:
	s_mov_b32 s32, 0x90
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr39 : SGPR spill to VGPR lane
	v_writelane_b32 v39, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v39, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v39, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v39, s10, 3
	v_writelane_b32 v39, s11, 4
	v_writelane_b32 v39, s2, 5
	v_writelane_b32 v39, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	v_writelane_b32 v39, s4, 7
	v_writelane_b32 v39, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:140 ; 4-byte Folded Spill
	s_load_b64 s[8:9], s[0:1], 0x0
	s_load_b64 s[6:7], s[0:1], 0x8
	s_load_b32 s2, s[0:1], 0x10
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:24
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:136 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:136 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:132 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:132 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:48
	scratch_store_b32 off, v0, s33 offset:52
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v39, s0, 9
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
.LBB99_1:                               ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB99_4 Depth 2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 10
	v_readlane_b32 s1, v39, 9
	v_writelane_b32 v39, s1, 11
	scratch_load_b32 v0, off, s33 offset:52
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v39, s0, 12
	v_writelane_b32 v39, s0, 13
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v39, s0, 14
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB99_3
; %bb.2:                                ;   in Loop: Header=BB99_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	scratch_load_b32 v31, off, s33 offset:140 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v39, s2, 15
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v39, 15
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:56
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v39, s0, 16
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB99_4
.LBB99_3:                               ; %Flow5
                                        ;   in Loop: Header=BB99_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 14
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v39, 11
	v_readlane_b32 s1, v39, 13
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v39, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 17
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB99_1
	s_branch .LBB99_11
.LBB99_4:                               ;   Parent Loop BB99_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 18
	v_readlane_b32 s1, v39, 16
	v_writelane_b32 v39, s1, 19
	scratch_load_b32 v0, off, s33 offset:56
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v39, s0, 20
	v_writelane_b32 v39, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v39, s0, 22
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB99_6
; %bb.5:                                ;   in Loop: Header=BB99_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	scratch_load_b32 v31, off, s33 offset:140 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:56
	s_mov_b32 s6, 1
	v_writelane_b32 v39, s6, 23
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s6, v0
	s_mov_b32 s3, 0
	v_writelane_b32 v39, s3, 24
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s2, 4
	v_writelane_b32 v39, s2, 25
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b64 v[1:2], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s6, s6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[10:13], off, s33 offset:80
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v8, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v9, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v10
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v12
	v_mov_b32_e32 v7, v13
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, FermatTest256@rel32@lo+4
	s_addc_u32 s1, s1, FermatTest256@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s2, v39, 23
	v_readlane_b32 s1, v39, 24
	v_readlane_b32 s0, v39, 25
	scratch_load_b128 v[2:5], off, s33 offset:96
	scratch_load_b64 v[10:11], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:112
	scratch_load_b64 v[10:11], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB99_7
.LBB99_6:                               ; %Flow
                                        ;   in Loop: Header=BB99_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v39, 19
	v_readlane_b32 s1, v39, 21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v39, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 26
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB99_4
	s_branch .LBB99_8
.LBB99_7:                               ;   in Loop: Header=BB99_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 20
	scratch_load_b32 v1, off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:56
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v39, s0, 21
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB99_6
.LBB99_8:                               ;   in Loop: Header=BB99_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 26
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB99_1 Depth=1
; %bb.10:                               ;   in Loop: Header=BB99_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 12
	scratch_load_b32 v0, off, s33 offset:52
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:52
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v39, s0, 13
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:128 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB99_3
.LBB99_11:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:128 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 17
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel fermatTestBenchMark256
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 2736
		.amdhsa_kernarg_size 280
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 40
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end99:
	.size	fermatTestBenchMark256, .Lfunc_end99-fermatTestBenchMark256
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2100
; NumSgprs: 36
; NumVgprs: 40
; ScratchSize: 2736
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 4
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 40
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.hidden	montgomeryMul384                ; -- Begin function montgomeryMul384
	.globl	montgomeryMul384
	.p2align	2
	.type	montgomeryMul384,@function
montgomeryMul384:                       ; @montgomeryMul384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s23, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v42, s33 offset:292 ; 4-byte Folded Spill
	scratch_store_b32 off, v43, s33 offset:296 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x130
	scratch_store_b32 off, v40, s33 offset:4 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33         ; 4-byte Folded Spill
	v_writelane_b32 v42, s30, 0
	v_writelane_b32 v42, s31, 1
	scratch_store_b32 off, v31, s33 offset:240 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr43 : SGPR spill to VGPR lane
	v_writelane_b32 v43, s6, 0
	v_writelane_b32 v43, s7, 1
	scratch_store_b32 off, v26, s33 offset:252 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:256 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:260 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:244 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:268 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:272 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:276 ; 4-byte Folded Spill
	scratch_store_b32 off, v19, s33 offset:248 ; 4-byte Folded Spill
	scratch_store_b32 off, v18, s33 offset:280 ; 4-byte Folded Spill
	scratch_store_b32 off, v17, s33 offset:284 ; 4-byte Folded Spill
	scratch_store_b32 off, v16, s33 offset:288 ; 4-byte Folded Spill
	v_mov_b32_e32 v16, v15
	scratch_load_b32 v15, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_store_b32 off, v16, s33 offset:264 ; 4-byte Folded Spill
	v_mov_b32_e32 v17, v14
	scratch_load_b32 v14, off, s33 offset:284 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v13
	scratch_load_b32 v13, off, s33 offset:280 ; 4-byte Folded Reload
	v_mov_b32_e32 v19, v12
	v_mov_b32_e32 v12, v11
	scratch_load_b32 v11, off, s33 offset:276 ; 4-byte Folded Reload
	v_mov_b32_e32 v21, v10
	scratch_load_b32 v10, off, s33 offset:272 ; 4-byte Folded Reload
	v_mov_b32_e32 v22, v9
	scratch_load_b32 v9, off, s33 offset:268 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v8
	scratch_load_b32 v8, off, s33 offset:264 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v7
	scratch_load_b32 v7, off, s33 offset:260 ; 4-byte Folded Reload
	v_mov_b32_e32 v28, v6
	scratch_load_b32 v6, off, s33 offset:256 ; 4-byte Folded Reload
	v_mov_b32_e32 v29, v5
	scratch_load_b32 v5, off, s33 offset:252 ; 4-byte Folded Reload
	v_mov_b32_e32 v30, v4
	scratch_load_b32 v4, off, s33 offset:248 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v3
	v_mov_b32_e32 v24, v2
	v_mov_b32_e32 v25, v1
	v_mov_b32_e32 v26, v0
	scratch_load_b32 v0, off, s33 offset:244 ; 4-byte Folded Reload
	v_writelane_b32 v43, s15, 2
	v_writelane_b32 v43, s14, 3
	v_writelane_b32 v43, s13, 4
	v_writelane_b32 v43, s12, 5
	v_writelane_b32 v43, s10, 6
	v_writelane_b32 v43, s11, 7
	v_writelane_b32 v43, s8, 8
	v_writelane_b32 v43, s9, 9
	v_writelane_b32 v43, s4, 10
	v_writelane_b32 v43, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v15
	v_mov_b32_e32 v10, v14
	v_mov_b32_e32 v11, v13
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr12 killed $vgpr12 def $vgpr12_vgpr13_vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v13, v19
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v30
	v_mov_b32_e32 v22, v29
	v_mov_b32_e32 v23, v28
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v26, s33 offset:8
	scratch_store_b32 off, v25, s33 offset:12
	scratch_store_b32 off, v24, s33 offset:16
	scratch_store_b128 off, v[20:23], s33 offset:32
	scratch_store_b128 off, v[16:19], s33 offset:48
	scratch_store_b128 off, v[12:15], s33 offset:64
	scratch_store_b128 off, v[8:11], s33 offset:80
	s_waitcnt vmcnt(1)
	scratch_store_b128 off, v[4:7], s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_store_b32 off, v27, s33 offset:128
	scratch_load_b32 v0, off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	scratch_load_b32 v0, off, s33 offset:12
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v0, off
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[32:35], v0, off
	scratch_load_b128 v[15:18], off, s33 offset:32
	scratch_load_b128 v[19:22], off, s33 offset:48
	scratch_load_b128 v[36:39], off, s33 offset:64
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v24, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v25, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v26, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v27, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xe0
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v20, v36
	v_mov_b32_e32 v21, v37
	v_mov_b32_e32 v22, v38
	v_mov_b32_e32 v23, v39
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v32
	v_mov_b32_e32 v9, v33
	v_mov_b32_e32 v10, v34
	v_mov_b32_e32 v11, v35
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul384schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul384schoolBook_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:240 ; 4-byte Folded Reload
	v_readlane_b32 s4, v43, 10
	v_readlane_b32 s5, v43, 11
	v_readlane_b32 s6, v43, 0
	v_readlane_b32 s7, v43, 1
	v_readlane_b32 s8, v43, 8
	v_readlane_b32 s9, v43, 9
	v_readlane_b32 s10, v43, 6
	v_readlane_b32 s11, v43, 7
	v_readlane_b32 s12, v43, 5
	v_readlane_b32 s13, v43, 4
	v_readlane_b32 s14, v43, 3
	v_readlane_b32 s15, v43, 2
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[7:10], off, s33 offset:160
	scratch_load_b128 v[11:14], off, s33 offset:176
	scratch_load_b128 v[15:18], off, s33 offset:192
	scratch_load_b128 v[19:22], off, s33 offset:208
	scratch_load_b128 v[23:26], off, s33 offset:224
	scratch_load_b128 v[27:30], off, s33 offset:80
	scratch_load_b128 v[32:35], off, s33 offset:96
	scratch_load_b128 v[36:39], off, s33 offset:112
	scratch_load_b32 v0, off, s33 offset:128
	scratch_load_b32 v1, off, s33 offset:8
	scratch_load_b32 v2, off, s33 offset:12
	scratch_load_b32 v48, off, s33 offset:16
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v49, v35
	s_mov_b32 s0, s32
	scratch_store_b32 off, v49, s0
	s_mov_b32 s1, 32
	s_add_i32 s1, s0, s1
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v48, s1
	s_mov_b32 s1, 28
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v2, s1
	s_mov_b32 s1, 24
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v1, s1
	s_mov_b32 s1, 20
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 16
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v39
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 12
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v38
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 8
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v37
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 4
	s_add_i32 s0, s0, s1
	v_mov_b32_e32 v0, v36
	scratch_store_b32 off, v0, s0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v29
	v_mov_b32_e32 v27, v30
	v_mov_b32_e32 v28, v32
	v_mov_b32_e32 v29, v33
	v_mov_b32_e32 v30, v34
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc1_384_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc1_384_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v42, 0
	v_readlane_b32 s31, v42, 1
	scratch_load_b32 v41, off, s33          ; 4-byte Folded Reload
	scratch_load_b32 v40, off, s33 offset:4 ; 4-byte Folded Reload
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v42, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_load_b32 v43, off, s33 offset:296 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffed0
	s_mov_b32 s33, s23
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end100:
	.size	montgomeryMul384, .Lfunc_end100-montgomeryMul384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1496
; NumSgprs: 34
; NumVgprs: 50
; ScratchSize: 1552
; MemoryBound: 0
	.text
	.hidden	FermatTest384                   ; -- Begin function FermatTest384
	.globl	FermatTest384
	.p2align	2
	.type	FermatTest384,@function
FermatTest384:                          ; @FermatTest384
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s26, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v44, s33 offset:1424 ; 4-byte Folded Spill
	scratch_store_b32 off, v45, s33 offset:1428 ; 4-byte Folded Spill
	scratch_store_b32 off, v46, s33 offset:1432 ; 4-byte Folded Spill
	scratch_store_b32 off, v47, s33 offset:1436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x5b0
	scratch_store_b32 off, v40, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:8 ; 4-byte Folded Spill
	scratch_store_b32 off, v42, s33 offset:4 ; 4-byte Folded Spill
	scratch_store_b32 off, v43, s33         ; 4-byte Folded Spill
	v_writelane_b32 v44, s30, 0
	v_writelane_b32 v44, s31, 1
	scratch_store_b32 off, v31, s33 offset:1280 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr47 : SGPR spill to VGPR lane
	v_writelane_b32 v47, s6, 0
	v_writelane_b32 v47, s7, 1
	scratch_store_b32 off, v11, s33 offset:1300 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:1304 ; 4-byte Folded Spill
	scratch_store_b32 off, v9, s33 offset:1308 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:1296 ; 4-byte Folded Spill
	v_mov_b32_e32 v9, v7
	scratch_load_b32 v7, off, s33 offset:1308 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v6
	scratch_load_b32 v6, off, s33 offset:1304 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v5
	scratch_load_b32 v5, off, s33 offset:1300 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v3
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v1
	v_mov_b32_e32 v8, v0
	scratch_load_b32 v0, off, s33 offset:1296 ; 4-byte Folded Reload
	v_writelane_b32 v47, s15, 2
	v_writelane_b32 v47, s14, 3
	v_writelane_b32 v47, s13, 4
	v_writelane_b32 v47, s12, 5
	v_writelane_b32 v47, s10, 6
	v_writelane_b32 v47, s11, 7
	v_writelane_b32 v47, s8, 8
	v_writelane_b32 v47, s9, 9
	v_writelane_b32 v47, s4, 10
	v_writelane_b32 v47, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v17
	v_mov_b32_e32 v10, v16
	v_mov_b32_e32 v11, v15
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[8:11], s33 offset:16
	scratch_store_b128 off, v[4:7], s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_store_b32 off, v12, s33 offset:64
	scratch_store_b32 off, v13, s33 offset:68
	scratch_store_b32 off, v14, s33 offset:72
	scratch_load_b32 v0, off, s33 offset:16
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, invert_limb@rel32@lo+4
	s_addc_u32 s1, s1, invert_limb@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	v_readlane_b32 s15, v47, 2
	v_readlane_b32 s14, v47, 3
	v_readlane_b32 s13, v47, 4
	v_readlane_b32 s12, v47, 5
	v_readlane_b32 s10, v47, 6
	v_readlane_b32 s11, v47, 7
	v_readlane_b32 s8, v47, 8
	v_readlane_b32 s9, v47, 9
	v_readlane_b32 s6, v47, 0
	v_readlane_b32 s7, v47, 1
	v_readlane_b32 s4, v47, 10
	v_readlane_b32 s5, v47, 11
	scratch_store_b32 off, v0, s33 offset:848
	s_mov_b32 s16, 0
	v_writelane_b32 v47, s16, 12
	s_mov_b32 s0, 1
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s16
	v_mov_b32_e32 v5, s16
	v_mov_b32_e32 v4, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:912
	s_mov_b32 s0, s16
	s_mov_b32 s1, s16
	s_mov_b32 s2, s16
	s_mov_b32 s3, s16
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:928
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:944
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	v_mov_b32_e32 v2, s2
	v_mov_b32_e32 v3, s3
	scratch_store_b128 off, v[0:3], s33 offset:960
	scratch_load_b128 v[3:6], off, s33 offset:960
	scratch_load_b128 v[7:10], off, s33 offset:944
	scratch_load_b128 v[11:14], off, s33 offset:928
	scratch_load_b128 v[15:18], off, s33 offset:912
	scratch_load_b128 v[19:22], off, s33 offset:16
	scratch_load_b128 v[23:26], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	s_add_i32 s0, s33, 0x360
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v28, s33 offset:1284 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x370
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v29, s33 offset:1288 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0x380
	v_mov_b32_e32 v30, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v30, s33 offset:1292 ; 4-byte Folded Spill
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v24, v32
	v_mov_b32_e32 v25, v33
	v_mov_b32_e32 v26, v34
	v_mov_b32_e32 v27, v35
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, modulo512to384@rel32@lo+4
	s_addc_u32 s1, s1, modulo512to384@rel32@hi+12
	v_writelane_b32 v47, s0, 13
	v_writelane_b32 v47, s1, 14
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v30, off, s33 offset:1292 ; 4-byte Folded Reload
	scratch_load_b32 v29, off, s33 offset:1288 ; 4-byte Folded Reload
	scratch_load_b32 v28, off, s33 offset:1284 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	v_readlane_b32 s4, v47, 10
	v_readlane_b32 s5, v47, 11
	v_readlane_b32 s6, v47, 0
	v_readlane_b32 s7, v47, 1
	v_readlane_b32 s8, v47, 8
	v_readlane_b32 s9, v47, 9
	v_readlane_b32 s10, v47, 6
	v_readlane_b32 s11, v47, 7
	v_readlane_b32 s12, v47, 5
	v_readlane_b32 s13, v47, 4
	v_readlane_b32 s14, v47, 3
	v_readlane_b32 s15, v47, 2
	v_readlane_b32 s0, v47, 13
	v_readlane_b32 s1, v47, 14
	scratch_load_b128 v[0:3], off, s33 offset:864
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[0:3], off, s33 offset:880
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[0:3], off, s33 offset:896
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	v_mov_b32_e32 v0, 2
	scratch_store_b32 off, v0, s33 offset:912
	scratch_load_b128 v[3:6], off, s33 offset:960
	scratch_load_b128 v[7:10], off, s33 offset:944
	scratch_load_b128 v[11:14], off, s33 offset:928
	scratch_load_b128 v[15:18], off, s33 offset:912
	scratch_load_b128 v[19:22], off, s33 offset:16
	scratch_load_b128 v[23:26], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v24, v32
	v_mov_b32_e32 v25, v33
	v_mov_b32_e32 v26, v34
	v_mov_b32_e32 v27, v35
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v47, 12
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:856
	scratch_load_b128 v[0:3], off, s33 offset:864
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b128 v[0:3], off, s33 offset:880
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[0:3], off, s33 offset:896
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:860
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:860
	scratch_load_b32 v0, off, s33 offset:860
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v47, s0, 15
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_2
; %bb.1:
	scratch_load_b32 v0, off, s33 offset:856
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:856
	v_mov_b32_e32 v0, 32
	scratch_store_b32 off, v0, s33 offset:860
.LBB101_2:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 15
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:864
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1072
	scratch_load_b128 v[0:3], off, s33 offset:880
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1088
	scratch_load_b128 v[0:3], off, s33 offset:896
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1104
	v_mov_b32_e32 v0, 2
	scratch_store_b32 off, v0, s33 offset:1120
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v47, s0, 16
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB101_3:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 17
	v_readlane_b32 s1, v47, 16
	v_writelane_b32 v47, s1, 18
	scratch_load_b32 v0, off, s33 offset:1120
	s_mov_b32 s1, 16
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 19
	v_writelane_b32 v47, s0, 20
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v47, s0, 21
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_5
; %bb.4:                                ;   in Loop: Header=BB101_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v47, 2
	v_readlane_b32 s14, v47, 3
	v_readlane_b32 s13, v47, 4
	v_readlane_b32 s12, v47, 5
	v_readlane_b32 s10, v47, 6
	v_readlane_b32 s11, v47, 7
	v_readlane_b32 s8, v47, 8
	v_readlane_b32 s9, v47, 9
	v_readlane_b32 s6, v47, 0
	v_readlane_b32 s7, v47, 1
	v_readlane_b32 s4, v47, 10
	v_readlane_b32 s5, v47, 11
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	scratch_load_b128 v[6:9], off, s33 offset:864
	scratch_load_b128 v[10:13], off, s33 offset:880
	scratch_load_b128 v[14:17], off, s33 offset:896
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[22:25], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	scratch_load_b32 v27, off, s33 offset:848
	s_add_i32 s0, s33, 0x430
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x440
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x450
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v23, v32
	v_mov_b32_e32 v24, v33
	v_mov_b32_e32 v25, v34
	v_mov_b32_e32 v26, v35
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, montgomeryMul384@rel32@lo+4
	s_addc_u32 s1, s1, montgomeryMul384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:1072
	scratch_load_b32 v4, off, s33 offset:1120
	s_add_i32 s0, s33, 0x50
	v_mov_b32_e32 v5, s0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr1
	s_add_i32 s1, s33, 0x50
	s_mov_b32 s2, s1
                                        ; kill: def $sgpr2 killed $sgpr2 def $sgpr2_sgpr3
	s_mov_b32 s3, s0
	s_mov_b32 s0, 48
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[6:7], s1, v4, s0, s[2:3]
	v_mov_b32_e32 v4, v6
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:1088
	scratch_load_b32 v4, off, s33 offset:1120
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v4, s0
	s_mov_b32 s1, 16
	v_add3_u32 v4, v4, v5, s1
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:1104
	scratch_load_b32 v4, off, s33 offset:1120
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v4, s0
	s_mov_b32 s0, 32
	v_add3_u32 v4, v4, v5, s0
	scratch_store_b128 v4, v[0:3], off
	s_branch .LBB101_6
.LBB101_5:                              ; %Flow11
                                        ;   in Loop: Header=BB101_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 21
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v47, 18
	v_readlane_b32 s1, v47, 20
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v47, s1, 17
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 22
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB101_3
	s_branch .LBB101_7
.LBB101_6:                              ;   in Loop: Header=BB101_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 19
	scratch_load_b32 v0, off, s33 offset:1120
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1120
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 20
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_5
.LBB101_7:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 22
	s_or_b32 exec_lo, exec_lo, s0
; %bb.8:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b128 v[0:3], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1136
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1152
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1168
	scratch_load_b32 v0, off, s33 offset:1136
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1136
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:1184
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v47, s0, 23
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB101_9:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 24
	v_readlane_b32 s1, v47, 23
	v_writelane_b32 v47, s1, 25
	scratch_load_b32 v0, off, s33 offset:1184
	scratch_load_b32 v1, off, s33 offset:856
	s_mov_b32 s1, 12
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, s1, v1
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 26
	v_writelane_b32 v47, s0, 27
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v47, s0, 28
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_11
; %bb.10:                               ;   in Loop: Header=BB101_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v47, 2
	v_readlane_b32 s14, v47, 3
	v_readlane_b32 s13, v47, 4
	v_readlane_b32 s12, v47, 5
	v_readlane_b32 s10, v47, 6
	v_readlane_b32 s11, v47, 7
	v_readlane_b32 s8, v47, 8
	v_readlane_b32 s9, v47, 9
	v_readlane_b32 s6, v47, 0
	v_readlane_b32 s7, v47, 1
	v_readlane_b32 s4, v47, 10
	v_readlane_b32 s5, v47, 11
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x470
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x480
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x490
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb3@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB101_12
.LBB101_11:                             ; %Flow10
                                        ;   in Loop: Header=BB101_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 28
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v47, 25
	v_readlane_b32 s1, v47, 27
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v47, s1, 24
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 23
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 29
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB101_9
	s_branch .LBB101_13
.LBB101_12:                             ;   in Loop: Header=BB101_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 26
	scratch_load_b32 v0, off, s33 offset:1184
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1184
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 27
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_11
.LBB101_13:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 29
	s_or_b32 exec_lo, exec_lo, s0
; %bb.14:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v47, 2
	v_readlane_b32 s14, v47, 3
	v_readlane_b32 s13, v47, 4
	v_readlane_b32 s12, v47, 5
	v_readlane_b32 s10, v47, 6
	v_readlane_b32 s11, v47, 7
	v_readlane_b32 s8, v47, 8
	v_readlane_b32 s9, v47, 9
	v_readlane_b32 s6, v47, 0
	v_readlane_b32 s7, v47, 1
	v_readlane_b32 s4, v47, 10
	v_readlane_b32 s5, v47, 11
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:860
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v47, s1, 30
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_15
	s_branch .LBB101_17
.LBB101_15:                             ; %Flow9
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 30
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v47, 31
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1312 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
                                        ; implicit-def: $vgpr47 : SGPR spill to VGPR lane
	v_writelane_b32 v47, s0, 0
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB101_18
; %bb.16:
	scratch_load_b32 v0, off, s33 offset:860
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1312 ; 4-byte Folded Spill
	s_branch .LBB101_18
.LBB101_17:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v47, s0, 31
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1268 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_15
.LBB101_18:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 0
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1312 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1180
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1180
	scratch_load_b128 v[0:3], off, s33 offset:864
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1072
	scratch_load_b128 v[0:3], off, s33 offset:880
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1088
	scratch_load_b128 v[0:3], off, s33 offset:896
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1104
	v_mov_b32_e32 v1, 0
	scratch_store_b32 off, v1, s33 offset:1188
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:1192
	scratch_load_b32 v0, off, s33 offset:860
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	v_cmp_eq_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v47, s1, 1
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_19
	s_branch .LBB101_21
.LBB101_19:                             ; %Flow8
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 1
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v47, 2
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1316 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v47, s0, 3
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB101_22
; %bb.20:
	scratch_load_b32 v0, off, s33 offset:860
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1316 ; 4-byte Folded Spill
	s_branch .LBB101_22
.LBB101_21:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_writelane_b32 v47, s0, 2
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_19
.LBB101_22:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 3
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1316 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1196
	scratch_load_b32 v0, off, s33 offset:860
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1200
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v47, s0, 4
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB101_23:                             ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB101_26 Depth 2
                                        ;       Child Loop BB101_39 Depth 3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 5
	v_readlane_b32 s1, v47, 4
	v_writelane_b32 v47, s1, 6
	scratch_load_b32 v0, off, s33 offset:856
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 7
	v_writelane_b32 v47, s0, 8
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v47, s0, 9
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_25
; %bb.24:                               ;   in Loop: Header=BB101_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v47, s0, 10
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_26
.LBB101_25:                             ; %Flow7
                                        ;   in Loop: Header=BB101_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 9
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v47, 6
	v_readlane_b32 s1, v47, 8
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v47, s1, 5
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 4
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 11
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB101_23
	s_branch .LBB101_58
.LBB101_26:                             ;   Parent Loop BB101_23 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB101_39 Depth 3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 12
	v_readlane_b32 s1, v47, 10
	v_writelane_b32 v47, s1, 13
	scratch_load_b32 v0, off, s33 offset:1200
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 14
	v_writelane_b32 v47, s0, 15
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v47, s0, 16
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_29
; %bb.27:                               ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v0, off, s33 offset:1192
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v47, s0, 17
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_30
; %bb.28:                               ;   in Loop: Header=BB101_26 Depth=2
	scratch_load_b32 v1, off, s33 offset:1180
	scratch_load_b32 v0, off, s33 offset:1188
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	v_lshrrev_b32_e64 v0, v0, v1
	v_lshl_add_u32 v0, v0, 1, v0
	scratch_store_b32 off, v0, s33 offset:1264
	scratch_load_b32 v0, off, s33 offset:1264
	s_add_i32 s1, s33, 0x50
	v_mov_b32_e32 v1, s1
	s_mov_b32 s1, 4
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s1, v1
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[2:5], s33 offset:1216
	scratch_load_b32 v0, off, s33 offset:1264
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s1, v0
	s_mov_b32 s2, 16
	v_add3_u32 v0, v0, v1, s2
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[2:5], s33 offset:1232
	scratch_load_b32 v0, off, s33 offset:1264
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s1, v0
	v_add3_u32 v0, v0, v1, s0
	scratch_load_b128 v[0:3], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1248
	s_branch .LBB101_30
.LBB101_29:                             ; %Flow6
                                        ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 16
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v47, 13
	v_readlane_b32 s1, v47, 15
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v47, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v47, s1, 18
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB101_26
	s_branch .LBB101_56
.LBB101_30:                             ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 17
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1192
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v47, s1, 19
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_31
	s_branch .LBB101_33
.LBB101_31:                             ; %Flow5
                                        ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 19
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v47, 20
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1320 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v47, s0, 21
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB101_34
; %bb.32:                               ;   in Loop: Header=BB101_26 Depth=2
	scratch_load_b32 v0, off, s33 offset:1196
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1320 ; 4-byte Folded Spill
	s_branch .LBB101_34
.LBB101_33:                             ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v47, s0, 20
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_31
.LBB101_34:                             ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 21
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1320 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1196
	scratch_load_b32 v4, off, s33 offset:1188
	scratch_load_b128 v[0:3], off, s33 offset:1168
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_lshlrev_b32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:1168
	scratch_load_b32 v1, off, s33 offset:1188
	scratch_load_b32 v0, off, s33 offset:1200
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1200
	scratch_load_b32 v0, off, s33 offset:1192
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v47, s1, 22
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_35
	s_branch .LBB101_37
.LBB101_35:                             ; %Flow4
                                        ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 22
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v47, 23
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1324 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v47, s0, 24
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB101_38
; %bb.36:                               ;   in Loop: Header=BB101_26 Depth=2
	scratch_load_b32 v0, off, s33 offset:1196
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1324 ; 4-byte Folded Spill
	s_branch .LBB101_38
.LBB101_37:                             ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v47, s0, 23
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_35
.LBB101_38:                             ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 24
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1324 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1188
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v47, s0, 25
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB101_39:                             ;   Parent Loop BB101_23 Depth=1
                                        ;     Parent Loop BB101_26 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 26
	v_readlane_b32 s1, v47, 25
	v_writelane_b32 v47, s1, 27
	scratch_load_b32 v0, off, s33 offset:1196
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 28
	v_writelane_b32 v47, s0, 29
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v47, s0, 30
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
                                        ; implicit-def: $vgpr47 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_44
; %bb.40:                               ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v0, off, s33 offset:1192
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1328 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v47, s1, 31
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_41
	s_branch .LBB101_43
.LBB101_41:                             ; %Flow2
                                        ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 31
	s_or_saveexec_b32 s0, s0
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b128 v[0:3], off, s33 offset:1328 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1344 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v47, s0, 0
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB101_45
; %bb.42:                               ;   in Loop: Header=BB101_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1072
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1344 ; 16-byte Folded Spill
	s_branch .LBB101_45
.LBB101_43:                             ;   in Loop: Header=BB101_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1216
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1328 ; 16-byte Folded Spill
	s_branch .LBB101_41
.LBB101_44:                             ; %Flow3
                                        ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 30
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v46, 27
	v_readlane_b32 s1, v46, 29
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v46, s1, 26
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 25
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 s1, s0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v47, s1, 1
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB101_39
	s_branch .LBB101_54
.LBB101_45:                             ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 0
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1344 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1216
	scratch_load_b32 v0, off, s33 offset:1192
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1360 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v47, s1, 2
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_46
	s_branch .LBB101_48
.LBB101_46:                             ; %Flow1
                                        ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 2
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1360 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1376 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v47, s0, 3
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB101_49
; %bb.47:                               ;   in Loop: Header=BB101_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1088
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1376 ; 16-byte Folded Spill
	s_branch .LBB101_49
.LBB101_48:                             ;   in Loop: Header=BB101_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1232
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1360 ; 16-byte Folded Spill
	s_branch .LBB101_46
.LBB101_49:                             ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 3
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1376 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1232
	scratch_load_b32 v0, off, s33 offset:1192
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1392 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v47, s1, 4
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB101_50
	s_branch .LBB101_52
.LBB101_50:                             ; %Flow
                                        ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 4
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1392 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1408 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v47, s0, 5
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1276 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB101_53
; %bb.51:                               ;   in Loop: Header=BB101_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1104
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1408 ; 16-byte Folded Spill
	s_branch .LBB101_53
.LBB101_52:                             ;   in Loop: Header=BB101_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1248
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1392 ; 16-byte Folded Spill
	s_branch .LBB101_50
.LBB101_53:                             ;   in Loop: Header=BB101_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v45, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(1)
	v_readlane_b32 s0, v45, 5
	s_or_b32 exec_lo, exec_lo, s0
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v46, 2
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	scratch_load_b128 v[0:3], off, s33 offset:1408 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1248
	scratch_load_b128 v[6:9], off, s33 offset:1216
	scratch_load_b128 v[10:13], off, s33 offset:1232
	scratch_load_b128 v[14:17], off, s33 offset:1248
	scratch_load_b128 v[18:21], off, s33 offset:16
	scratch_load_b128 v[22:25], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	scratch_load_b32 v27, off, s33 offset:848
	s_add_i32 s0, s33, 0x430
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x440
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x450
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v23, v32
	v_mov_b32_e32 v24, v33
	v_mov_b32_e32 v25, v34
	v_mov_b32_e32 v26, v35
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, montgomeryMul384@rel32@lo+4
	s_addc_u32 s1, s1, montgomeryMul384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v47, 28
	scratch_load_b32 v0, off, s33 offset:1196
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1196
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 29
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_44
.LBB101_54:                             ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1276 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 1
	s_or_b32 exec_lo, exec_lo, s0
; %bb.55:                               ;   in Loop: Header=BB101_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 14
	scratch_load_b32 v0, off, s33 offset:1192
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1192
	v_mov_b32_e32 v0, 4
	scratch_store_b32 off, v0, s33 offset:1196
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 15
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_29
.LBB101_56:                             ;   in Loop: Header=BB101_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 18
	s_or_b32 exec_lo, exec_lo, s0
; %bb.57:                               ;   in Loop: Header=BB101_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v46, 2
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x470
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x480
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x490
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb3@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v47, 7
	scratch_load_b32 v0, off, s33 offset:856
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:856
	v_mov_b32_e32 v0, 32
	scratch_store_b32 off, v0, s33 offset:1200
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v47, s0, 8
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v47, s33 offset:1272 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB101_25
.LBB101_58:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1272 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v47, 11
	s_or_b32 exec_lo, exec_lo, s0
; %bb.59:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v47, off, s33 offset:1268 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v47, 2
	v_readlane_b32 s14, v47, 3
	v_readlane_b32 s13, v47, 4
	v_readlane_b32 s12, v47, 5
	v_readlane_b32 s10, v47, 6
	v_readlane_b32 s11, v47, 7
	v_readlane_b32 s8, v47, 8
	v_readlane_b32 s9, v47, 9
	v_readlane_b32 s6, v47, 0
	v_readlane_b32 s7, v47, 1
	v_readlane_b32 s4, v47, 10
	v_readlane_b32 s5, v47, 11
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1280 ; 4-byte Folded Reload
	v_readlane_b32 s4, v47, 10
	v_readlane_b32 s5, v47, 11
	v_readlane_b32 s6, v47, 0
	v_readlane_b32 s7, v47, 1
	v_readlane_b32 s8, v47, 8
	v_readlane_b32 s9, v47, 9
	v_readlane_b32 s10, v47, 6
	v_readlane_b32 s11, v47, 7
	v_readlane_b32 s12, v47, 5
	v_readlane_b32 s13, v47, 4
	v_readlane_b32 s14, v47, 3
	v_readlane_b32 s15, v47, 2
	scratch_load_b128 v[3:6], off, s33 offset:1072
	scratch_load_b128 v[7:10], off, s33 offset:1088
	scratch_load_b128 v[20:23], off, s33 offset:1104
	scratch_load_b128 v[16:19], off, s33 offset:16
	scratch_load_b128 v[12:15], off, s33 offset:32
	scratch_load_b128 v[24:27], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:848
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v2, off, s33 offset:68
	scratch_load_b32 v11, off, s33 offset:72
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v28, v15
	s_mov_b32 s0, s32
	scratch_store_b32 off, v28, s0
	s_mov_b32 s1, 32
	s_add_i32 s1, s0, s1
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v11, s1
	s_mov_b32 s1, 28
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v2, s1
	s_mov_b32 s1, 24
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v1, s1
	s_mov_b32 s1, 20
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 16
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v27
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 12
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v26
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 8
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v25
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 4
	s_add_i32 s0, s0, s1
	v_mov_b32_e32 v0, v24
	scratch_store_b32 off, v0, s0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v20
	v_mov_b32_e32 v9, v21
	v_mov_b32_e32 v10, v22
	v_mov_b32_e32 v11, v23
	v_mov_b32_e32 v24, v16
	v_mov_b32_e32 v25, v17
	v_mov_b32_e32 v26, v18
	v_mov_b32_e32 v27, v19
	v_mov_b32_e32 v28, v12
	v_mov_b32_e32 v29, v13
	v_mov_b32_e32 v30, v14
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc1_384_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc1_384_v3@rel32@hi+12
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v12, v23
	v_mov_b32_e32 v13, v23
	v_mov_b32_e32 v14, v23
	v_mov_b32_e32 v15, v23
	v_mov_b32_e32 v16, v23
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v23
	v_mov_b32_e32 v19, v23
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v23
	v_mov_b32_e32 v22, v23
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v44, 0
	v_readlane_b32 s31, v44, 1
	scratch_load_b32 v43, off, s33          ; 4-byte Folded Reload
	scratch_load_b32 v42, off, s33 offset:4 ; 4-byte Folded Reload
	scratch_load_b32 v41, off, s33 offset:8 ; 4-byte Folded Reload
	scratch_load_b32 v40, off, s33 offset:12 ; 4-byte Folded Reload
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v44, off, s33 offset:1424 ; 4-byte Folded Reload
	scratch_load_b32 v45, off, s33 offset:1428 ; 4-byte Folded Reload
	scratch_load_b32 v46, off, s33 offset:1432 ; 4-byte Folded Reload
	scratch_load_b32 v47, off, s33 offset:1436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffa50
	s_mov_b32 s33, s26
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end101:
	.size	FermatTest384, .Lfunc_end101-FermatTest384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 8748
; NumSgprs: 36
; NumVgprs: 50
; ScratchSize: 3008
; MemoryBound: 0
	.text
	.protected	fermatTestBenchMark384  ; -- Begin function fermatTestBenchMark384
	.globl	fermatTestBenchMark384
	.p2align	8
	.type	fermatTestBenchMark384,@function
fermatTestBenchMark384:                 ; @fermatTestBenchMark384
; %bb.0:
	s_mov_b32 s32, 0xb0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr40 : SGPR spill to VGPR lane
	v_writelane_b32 v40, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v40, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v40, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v40, s10, 3
	v_writelane_b32 v40, s11, 4
	v_writelane_b32 v40, s2, 5
	v_writelane_b32 v40, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	v_writelane_b32 v40, s4, 7
	v_writelane_b32 v40, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:172 ; 4-byte Folded Spill
	s_load_b64 s[8:9], s[0:1], 0x0
	s_load_b64 s[6:7], s[0:1], 0x8
	s_load_b32 s2, s[0:1], 0x10
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:24
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:168 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:168 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:164 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:164 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:48
	scratch_store_b32 off, v0, s33 offset:52
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 9
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
.LBB102_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB102_4 Depth 2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 10
	v_readlane_b32 s1, v40, 9
	v_writelane_b32 v40, s1, 11
	scratch_load_b32 v0, off, s33 offset:52
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 12
	v_writelane_b32 v40, s0, 13
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 14
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB102_3
; %bb.2:                                ;   in Loop: Header=BB102_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:172 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v40, s2, 15
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v40, 15
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:56
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 16
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB102_4
.LBB102_3:                              ; %Flow5
                                        ;   in Loop: Header=BB102_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 14
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 11
	v_readlane_b32 s1, v40, 13
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v40, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 17
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB102_1
	s_branch .LBB102_11
.LBB102_4:                              ;   Parent Loop BB102_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 18
	v_readlane_b32 s1, v40, 16
	v_writelane_b32 v40, s1, 19
	scratch_load_b32 v0, off, s33 offset:56
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 20
	v_writelane_b32 v40, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 22
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB102_6
; %bb.5:                                ;   in Loop: Header=BB102_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:172 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 1, v0
	s_mov_b32 s3, 0
	v_writelane_b32 v40, s3, 23
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s2, 4
	v_writelane_b32 v40, s2, 24
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b64 v[1:2], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:56
	s_mov_b32 s6, 3
	v_writelane_b32 v40, s6, 25
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s7, v0, s6, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s6, v0, s6, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b128 v[3:6], off, s33 offset:64
	scratch_load_b128 v[7:10], off, s33 offset:80
	scratch_load_b128 v[15:18], off, s33 offset:96
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v12, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v13, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v15
	v_mov_b32_e32 v9, v16
	v_mov_b32_e32 v10, v17
	v_mov_b32_e32 v11, v18
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, FermatTest384@rel32@lo+4
	s_addc_u32 s1, s1, FermatTest384@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s2, v40, 25
	v_readlane_b32 s1, v40, 23
	v_readlane_b32 s0, v40, 24
	scratch_load_b128 v[2:5], off, s33 offset:112
	scratch_load_b64 v[10:11], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, 1, v0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:128
	scratch_load_b64 v[10:11], off, s33 offset:40
	scratch_load_b32 v6, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:144
	scratch_load_b64 v[10:11], off, s33 offset:40
	scratch_load_b32 v6, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s2, v6, s2, 2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB102_7
.LBB102_6:                              ; %Flow
                                        ;   in Loop: Header=BB102_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 19
	v_readlane_b32 s1, v40, 21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v40, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 26
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB102_4
	s_branch .LBB102_8
.LBB102_7:                              ;   in Loop: Header=BB102_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 20
	scratch_load_b32 v1, off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:56
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 21
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB102_6
.LBB102_8:                              ;   in Loop: Header=BB102_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 26
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB102_1 Depth=1
; %bb.10:                               ;   in Loop: Header=BB102_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 12
	scratch_load_b32 v0, off, s33 offset:52
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:52
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 13
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:160 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB102_3
.LBB102_11:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:160 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 17
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel fermatTestBenchMark384
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 3184
		.amdhsa_kernarg_size 280
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 50
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end102:
	.size	fermatTestBenchMark384, .Lfunc_end102-fermatTestBenchMark384
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2336
; NumSgprs: 36
; NumVgprs: 50
; ScratchSize: 3184
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 6
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 50
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.hidden	montgomeryMul448                ; -- Begin function montgomeryMul448
	.globl	montgomeryMul448
	.p2align	2
	.type	montgomeryMul448,@function
montgomeryMul448:                       ; @montgomeryMul448
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s23, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v42, s33 offset:332 ; 4-byte Folded Spill
	scratch_store_b32 off, v43, s33 offset:336 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x160
	scratch_store_b32 off, v40, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:8 ; 4-byte Folded Spill
	v_writelane_b32 v42, s30, 0
	v_writelane_b32 v42, s31, 1
	scratch_store_b32 off, v31, s33 offset:272 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr43 : SGPR spill to VGPR lane
	v_writelane_b32 v43, s6, 0
	v_writelane_b32 v43, s7, 1
	scratch_store_b32 off, v30, s33 offset:276 ; 4-byte Folded Spill
	scratch_store_b32 off, v29, s33 offset:292 ; 4-byte Folded Spill
	scratch_store_b32 off, v28, s33 offset:296 ; 4-byte Folded Spill
	scratch_store_b32 off, v27, s33 offset:300 ; 4-byte Folded Spill
	scratch_store_b32 off, v26, s33 offset:284 ; 4-byte Folded Spill
	scratch_store_b32 off, v25, s33 offset:308 ; 4-byte Folded Spill
	scratch_store_b32 off, v24, s33 offset:312 ; 4-byte Folded Spill
	scratch_store_b32 off, v23, s33 offset:316 ; 4-byte Folded Spill
	scratch_store_b32 off, v22, s33 offset:288 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:324 ; 4-byte Folded Spill
	scratch_store_b32 off, v20, s33 offset:328 ; 4-byte Folded Spill
	v_mov_b32_e32 v20, v18
	scratch_load_b32 v18, off, s33 offset:328 ; 4-byte Folded Reload
	scratch_store_b32 off, v20, s33 offset:304 ; 4-byte Folded Spill
	v_mov_b32_e32 v33, v17
	scratch_load_b32 v17, off, s33 offset:324 ; 4-byte Folded Reload
	scratch_store_b32 off, v16, s33 offset:320 ; 4-byte Folded Spill
	v_mov_b32_e32 v21, v15
	v_mov_b32_e32 v22, v14
	scratch_load_b32 v14, off, s33 offset:320 ; 4-byte Folded Reload
	v_mov_b32_e32 v23, v13
	scratch_load_b32 v13, off, s33 offset:316 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v12
	scratch_load_b32 v12, off, s33 offset:312 ; 4-byte Folded Reload
	v_mov_b32_e32 v25, v11
	scratch_load_b32 v11, off, s33 offset:308 ; 4-byte Folded Reload
	v_mov_b32_e32 v26, v10
	scratch_load_b32 v10, off, s33 offset:304 ; 4-byte Folded Reload
	v_mov_b32_e32 v27, v9
	scratch_load_b32 v9, off, s33 offset:300 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v8
	scratch_load_b32 v8, off, s33 offset:296 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v7
	scratch_load_b32 v7, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_store_b32 off, v15, s33 offset:280 ; 4-byte Folded Spill
	v_mov_b32_e32 v15, v6
	scratch_load_b32 v6, off, s33 offset:288 ; 4-byte Folded Reload
	v_mov_b32_e32 v34, v5
	v_mov_b32_e32 v24, v4
	v_mov_b32_e32 v28, v3
	v_mov_b32_e32 v29, v2
	scratch_load_b32 v2, off, s33 offset:284 ; 4-byte Folded Reload
	v_mov_b32_e32 v30, v1
	scratch_load_b32 v1, off, s33 offset:280 ; 4-byte Folded Reload
	v_mov_b32_e32 v32, v0
	scratch_load_b32 v0, off, s33 offset:276 ; 4-byte Folded Reload
	v_writelane_b32 v43, s15, 2
	v_writelane_b32 v43, s14, 3
	v_writelane_b32 v43, s13, 4
	v_writelane_b32 v43, s12, 5
	v_writelane_b32 v43, s10, 6
	v_writelane_b32 v43, s11, 7
	v_writelane_b32 v43, s8, 8
	v_writelane_b32 v43, s9, 9
	v_writelane_b32 v43, s4, 10
	v_writelane_b32 v43, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v3, v9
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v4, v8
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v7, v13
	v_mov_b32_e32 v8, v12
	v_mov_b32_e32 v9, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v19
	v_mov_b32_e32 v12, v18
	v_mov_b32_e32 v13, v17
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr16 killed $vgpr16 def $vgpr16_vgpr17_vgpr18_vgpr19 killed $exec
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v22
	v_mov_b32_e32 v19, v21
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr20 killed $vgpr20 def $vgpr20_vgpr21_vgpr22_vgpr23 killed $exec
	v_mov_b32_e32 v21, v27
	v_mov_b32_e32 v22, v26
	v_mov_b32_e32 v23, v25
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr24 killed $vgpr24 def $vgpr24_vgpr25_vgpr26_vgpr27 killed $exec
	v_mov_b32_e32 v25, v34
	v_mov_b32_e32 v26, v15
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v27, v1
	scratch_load_b32 v15, off, s33
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v15
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v33
	scratch_load_b32 v33, off, s33 offset:4
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b32 off, v32, s33 offset:16
	scratch_store_b32 off, v30, s33 offset:20
	scratch_store_b32 off, v29, s33 offset:24
	scratch_store_b32 off, v28, s33 offset:28
	scratch_store_b128 off, v[24:27], s33 offset:32
	scratch_store_b128 off, v[20:23], s33 offset:48
	scratch_store_b128 off, v[16:19], s33 offset:64
	scratch_store_b64 off, v[14:15], s33 offset:80
	scratch_store_b128 off, v[10:13], s33 offset:96
	scratch_store_b128 off, v[6:9], s33 offset:112
	scratch_store_b128 off, v[2:5], s33 offset:128
	scratch_store_b64 off, v[0:1], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[3:6], v0, off
	scratch_load_b32 v0, off, s33 offset:20
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[7:10], v0, off
	scratch_load_b32 v0, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_load_b128 v[34:37], v0, off
	scratch_load_b32 v0, off, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_load_b64 v[32:33], v0, off
	scratch_load_b128 v[17:20], off, s33 offset:32
	scratch_load_b128 v[21:24], off, s33 offset:48
	scratch_load_b128 v[48:51], off, s33 offset:64
	scratch_load_b64 v[0:1], off, s33 offset:80
	s_mov_b32 s0, s32
	s_add_i32 s1, s33, 0xd0
	v_mov_b32_e32 v2, s1
	scratch_store_b32 off, v2, s0
	s_mov_b32 s1, 12
	v_writelane_b32 v43, s1, 12
	s_add_i32 s1, s0, s1
	s_add_i32 s2, s33, 0x100
	v_mov_b32_e32 v2, s2
	scratch_store_b32 off, v2, s1
	s_mov_b32 s1, 8
	v_writelane_b32 v43, s1, 13
	s_add_i32 s1, s0, s1
	s_add_i32 s2, s33, 0xf0
	v_mov_b32_e32 v2, s2
	scratch_store_b32 off, v2, s1
	s_mov_b32 s1, 4
	v_writelane_b32 v43, s1, 14
	s_add_i32 s0, s0, s1
	s_add_i32 s1, s33, 0xe0
	v_mov_b32_e32 v2, s1
	scratch_store_b32 off, v2, s0
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v30, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v22, v48
	v_mov_b32_e32 v23, v49
	v_mov_b32_e32 v24, v50
	v_mov_b32_e32 v25, v51
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v26, v0
	v_mov_b32_e32 v27, v1
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v34
	v_mov_b32_e32 v9, v35
	v_mov_b32_e32 v10, v36
	v_mov_b32_e32 v11, v37
	v_mov_b32_e32 v12, v32
	v_mov_b32_e32 v13, v33
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul448schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul448schoolBook_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:272 ; 4-byte Folded Reload
	v_readlane_b32 s3, v43, 12
	v_readlane_b32 s2, v43, 13
	v_readlane_b32 s1, v43, 14
	v_readlane_b32 s4, v43, 10
	v_readlane_b32 s5, v43, 11
	v_readlane_b32 s6, v43, 0
	v_readlane_b32 s7, v43, 1
	v_readlane_b32 s8, v43, 8
	v_readlane_b32 s9, v43, 9
	v_readlane_b32 s10, v43, 6
	v_readlane_b32 s11, v43, 7
	v_readlane_b32 s12, v43, 5
	v_readlane_b32 s13, v43, 4
	v_readlane_b32 s14, v43, 3
	v_readlane_b32 s15, v43, 2
	scratch_load_b128 v[3:6], off, s33 offset:160
	scratch_load_b128 v[7:10], off, s33 offset:176
	scratch_load_b128 v[11:14], off, s33 offset:192
	scratch_load_b128 v[15:18], off, s33 offset:208
	scratch_load_b128 v[19:22], off, s33 offset:224
	scratch_load_b128 v[23:26], off, s33 offset:240
	scratch_load_b128 v[27:30], off, s33 offset:256
	scratch_load_b128 v[32:35], off, s33 offset:96
	scratch_load_b128 v[36:39], off, s33 offset:112
	scratch_load_b128 v[48:51], off, s33 offset:128
	scratch_load_b64 v[0:1], off, s33 offset:144
	scratch_load_b32 v2, off, s33 offset:4
	scratch_load_b32 v52, off, s33 offset:16
	scratch_load_b32 v53, off, s33 offset:20
	scratch_load_b32 v54, off, s33 offset:24
	scratch_load_b32 v55, off, s33 offset:28
	s_waitcnt vmcnt(8)
	v_mov_b32_e32 v64, v35
	s_mov_b32 s0, s32
	scratch_store_b32 off, v64, s0
	s_mov_b32 s16, 60
	s_add_i32 s16, s0, s16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v55, s16
	s_mov_b32 s16, 56
	s_add_i32 s16, s0, s16
	scratch_store_b32 off, v54, s16
	s_mov_b32 s16, 52
	s_add_i32 s16, s0, s16
	scratch_store_b32 off, v53, s16
	s_mov_b32 s16, 48
	s_add_i32 s16, s0, s16
	scratch_store_b32 off, v52, s16
	s_mov_b32 s16, 44
	s_add_i32 s16, s0, s16
	scratch_store_b32 off, v2, s16
	s_mov_b32 s16, 40
	s_add_i32 s16, s0, s16
	v_mov_b32_e32 v2, v1
	scratch_store_b32 off, v2, s16
	s_mov_b32 s16, 36
	s_add_i32 s16, s0, s16
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s16
	s_mov_b32 s16, 32
	s_add_i32 s16, s0, s16
	v_mov_b32_e32 v0, v51
	scratch_store_b32 off, v0, s16
	s_mov_b32 s16, 28
	s_add_i32 s16, s0, s16
	v_mov_b32_e32 v0, v50
	scratch_store_b32 off, v0, s16
	s_mov_b32 s16, 24
	s_add_i32 s16, s0, s16
	v_mov_b32_e32 v0, v49
	scratch_store_b32 off, v0, s16
	s_mov_b32 s16, 20
	s_add_i32 s16, s0, s16
	v_mov_b32_e32 v0, v48
	scratch_store_b32 off, v0, s16
	s_mov_b32 s16, 16
	s_add_i32 s16, s0, s16
	v_mov_b32_e32 v0, v39
	scratch_store_b32 off, v0, s16
	s_add_i32 s3, s0, s3
	v_mov_b32_e32 v0, v38
	scratch_store_b32 off, v0, s3
	s_add_i32 s2, s0, s2
	v_mov_b32_e32 v0, v37
	scratch_store_b32 off, v0, s2
	s_add_i32 s0, s0, s1
	v_mov_b32_e32 v0, v36
	scratch_store_b32 off, v0, s0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v29
	v_mov_b32_e32 v27, v30
	v_mov_b32_e32 v28, v32
	v_mov_b32_e32 v29, v33
	v_mov_b32_e32 v30, v34
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc1_448_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc1_448_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v42, 0
	v_readlane_b32 s31, v42, 1
	scratch_load_b32 v41, off, s33 offset:8 ; 4-byte Folded Reload
	scratch_load_b32 v40, off, s33 offset:12 ; 4-byte Folded Reload
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v42, off, s33 offset:332 ; 4-byte Folded Reload
	scratch_load_b32 v43, off, s33 offset:336 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffea0
	s_mov_b32 s33, s23
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end103:
	.size	montgomeryMul448, .Lfunc_end103-montgomeryMul448
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1888
; NumSgprs: 34
; NumVgprs: 65
; ScratchSize: 1824
; MemoryBound: 0
	.text
	.hidden	FermatTest448                   ; -- Begin function FermatTest448
	.globl	FermatTest448
	.p2align	2
	.type	FermatTest448,@function
FermatTest448:                          ; @FermatTest448
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s26, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v44, s33 offset:1744 ; 4-byte Folded Spill
	scratch_store_b32 off, v45, s33 offset:1748 ; 4-byte Folded Spill
	scratch_store_b32 off, v46, s33 offset:1752 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x6e0
	scratch_store_b32 off, v40, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:8 ; 4-byte Folded Spill
	scratch_store_b32 off, v42, s33 offset:4 ; 4-byte Folded Spill
	scratch_store_b32 off, v43, s33         ; 4-byte Folded Spill
	v_writelane_b32 v44, s30, 0
	v_writelane_b32 v44, s31, 1
	scratch_store_b32 off, v31, s33 offset:1588 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr46 : SGPR spill to VGPR lane
	v_writelane_b32 v46, s6, 0
	v_writelane_b32 v46, s7, 1
	v_mov_b32_e32 v18, v13
	scratch_store_b32 off, v12, s33 offset:1596 ; 4-byte Folded Spill
	scratch_store_b32 off, v11, s33 offset:1608 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:1612 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, v8
	scratch_load_b32 v8, off, s33 offset:1612 ; 4-byte Folded Reload
	scratch_store_b32 off, v10, s33 offset:1604 ; 4-byte Folded Spill
	v_mov_b32_e32 v11, v7
	scratch_load_b32 v7, off, s33 offset:1608 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v6
	v_mov_b32_e32 v13, v5
	v_mov_b32_e32 v6, v4
	scratch_store_b32 off, v3, s33 offset:1600 ; 4-byte Folded Spill
	v_mov_b32_e32 v19, v2
	scratch_load_b32 v2, off, s33 offset:1604 ; 4-byte Folded Reload
	v_mov_b32_e32 v20, v1
	scratch_load_b32 v1, off, s33 offset:1600 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v0
	scratch_load_b32 v0, off, s33 offset:1596 ; 4-byte Folded Reload
	v_writelane_b32 v46, s15, 2
	v_writelane_b32 v46, s14, 3
	v_writelane_b32 v46, s13, 4
	v_writelane_b32 v46, s12, 5
	v_writelane_b32 v46, s10, 6
	v_writelane_b32 v46, s11, 7
	v_writelane_b32 v46, s8, 8
	v_writelane_b32 v46, s9, 9
	v_writelane_b32 v46, s4, 10
	v_writelane_b32 v46, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v9
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v4, v8
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7_vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v7, v13
	v_mov_b32_e32 v8, v12
	v_mov_b32_e32 v9, v11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v20
	v_mov_b32_e32 v12, v19
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v13, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v18
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[10:13], s33 offset:16
	scratch_store_b128 off, v[6:9], s33 offset:32
	scratch_store_b128 off, v[2:5], s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:64
	scratch_store_b32 off, v14, s33 offset:72
	scratch_store_b32 off, v15, s33 offset:76
	scratch_store_b32 off, v16, s33 offset:80
	scratch_store_b32 off, v17, s33 offset:84
	scratch_load_b32 v0, off, s33 offset:16
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, invert_limb@rel32@lo+4
	s_addc_u32 s1, s1, invert_limb@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	v_readlane_b32 s15, v46, 2
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	scratch_store_b32 off, v0, s33 offset:1120
	s_mov_b32 s0, 0
	v_writelane_b32 v46, s0, 12
	s_mov_b32 s16, s0
	s_mov_b32 s17, s0
	s_mov_b32 s18, s0
	s_mov_b32 s19, s0
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	v_mov_b32_e32 v2, s18
	v_mov_b32_e32 v3, s19
	scratch_store_b128 off, v[0:3], s33 offset:1200
	s_mov_b32 s1, 1
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s1
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:1216
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	v_mov_b32_e32 v2, s18
	v_mov_b32_e32 v3, s19
	scratch_store_b128 off, v[0:3], s33 offset:1232
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	v_mov_b32_e32 v2, s18
	v_mov_b32_e32 v3, s19
	scratch_store_b128 off, v[0:3], s33 offset:1248
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	v_mov_b32_e32 v2, s18
	v_mov_b32_e32 v3, s19
	scratch_store_b128 off, v[0:3], s33 offset:1264
	scratch_load_b128 v[3:6], off, s33 offset:1264
	scratch_load_b128 v[7:10], off, s33 offset:1248
	scratch_load_b128 v[11:14], off, s33 offset:1232
	scratch_load_b128 v[15:18], off, s33 offset:1216
	scratch_load_b128 v[19:22], off, s33 offset:1200
	scratch_load_b128 v[23:26], off, s33 offset:16
	scratch_load_b128 v[27:30], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v1
	v_mov_b32_e32 v36, v0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v1, s0
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr36 killed $vgpr36 def $vgpr36_vgpr37_vgpr38_vgpr39 killed $exec
	v_mov_b32_e32 v37, v2
	v_mov_b32_e32 v38, v1
	v_mov_b32_e32 v39, v0
	scratch_store_b128 off, v[36:39], s33 offset:1280
	scratch_load_b128 v[36:39], off, s33 offset:1280
	v_mov_b32_e32 v0, v35
	s_mov_b32 s0, s32
	v_writelane_b32 v46, s0, 13
	scratch_store_b32 off, v0, s0
	s_mov_b32 s1, 32
	v_writelane_b32 v46, s1, 14
	s_add_i32 s1, s0, s1
	s_add_i32 s2, s33, 0x4a0
	v_mov_b32_e32 v48, s2
	scratch_store_b32 off, v48, s1
	s_mov_b32 s1, 28
	v_writelane_b32 v46, s1, 15
	s_add_i32 s1, s0, s1
	s_add_i32 s2, s33, 0x490
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:1592 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s1
	s_mov_b32 s20, 24
	s_add_i32 s1, s0, s20
	s_add_i32 s2, s33, 0x480
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:1580 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 20
	v_writelane_b32 v46, s1, 16
	s_add_i32 s1, s0, s1
	s_add_i32 s2, s33, 0x470
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:1584 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 16
	v_writelane_b32 v46, s1, 17
	s_add_i32 s1, s0, s1
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v39
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 12
	v_writelane_b32 v46, s1, 18
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v38
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 8
	v_writelane_b32 v46, s1, 19
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v37
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 4
	v_writelane_b32 v46, s1, 20
	s_add_i32 s0, s0, s1
	v_mov_b32_e32 v0, v36
	scratch_store_b32 off, v0, s0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v29
	v_mov_b32_e32 v27, v30
	v_mov_b32_e32 v28, v32
	v_mov_b32_e32 v29, v33
	v_mov_b32_e32 v30, v34
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, modulo640to512@rel32@lo+4
	s_addc_u32 s1, s1, modulo640to512@rel32@hi+12
	v_writelane_b32 v46, s0, 21
	v_writelane_b32 v46, s1, 22
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:1592 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	v_readlane_b32 s22, v46, 14
	v_readlane_b32 s21, v46, 15
	v_readlane_b32 s19, v46, 16
	v_readlane_b32 s18, v46, 17
	v_readlane_b32 s17, v46, 18
	v_readlane_b32 s16, v46, 19
	v_readlane_b32 s3, v46, 20
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s15, v46, 2
	v_readlane_b32 s0, v46, 21
	v_readlane_b32 s1, v46, 22
	v_readlane_b32 s2, v46, 12
                                        ; kill: def $vgpr3 killed $vgpr0 killed $exec
	scratch_load_b32 v0, off, s33 offset:1584 ; 4-byte Folded Reload
                                        ; kill: def $vgpr3 killed $vgpr1 killed $exec
	scratch_load_b32 v1, off, s33 offset:1580 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:1136
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[3:6], s33 offset:96
	scratch_load_b128 v[3:6], off, s33 offset:1152
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[3:6], s33 offset:112
	scratch_load_b128 v[3:6], off, s33 offset:1168
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[3:6], s33 offset:128
	scratch_load_b128 v[3:6], off, s33 offset:1184
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[3:6], s33 offset:144
	v_mov_b32_e32 v3, 2
	scratch_store_b32 off, v3, s33 offset:1224
	scratch_load_b128 v[3:6], off, s33 offset:1264
	scratch_load_b128 v[7:10], off, s33 offset:1248
	scratch_load_b128 v[11:14], off, s33 offset:1232
	scratch_load_b128 v[15:18], off, s33 offset:1216
	scratch_load_b128 v[19:22], off, s33 offset:1200
	scratch_load_b128 v[23:26], off, s33 offset:16
	scratch_load_b128 v[27:30], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	scratch_load_b64 v[36:37], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v51, v37
                                        ; kill: def $vgpr36 killed $vgpr36 killed $vgpr36_vgpr37 killed $exec
                                        ; implicit-def: $sgpr23
                                        ; implicit-def: $sgpr23
	v_mov_b32_e32 v50, s2
	v_mov_b32_e32 v49, s2
                                        ; kill: def $vgpr36 killed $vgpr36 def $vgpr36_vgpr37_vgpr38_vgpr39 killed $exec
	v_mov_b32_e32 v37, v51
	v_mov_b32_e32 v38, v50
	v_mov_b32_e32 v39, v49
	scratch_store_b128 off, v[36:39], s33 offset:1296
	scratch_load_b128 v[36:39], off, s33 offset:1296
	v_mov_b32_e32 v49, v35
	s_mov_b32 s2, s32
	v_writelane_b32 v46, s2, 23
	scratch_store_b32 off, v49, s2
	s_add_i32 s22, s2, s22
	scratch_store_b32 off, v48, s22
	s_add_i32 s21, s2, s21
	scratch_store_b32 off, v2, s21
	s_add_i32 s20, s2, s20
	scratch_store_b32 off, v1, s20
	s_add_i32 s19, s2, s19
	scratch_store_b32 off, v0, s19
	s_add_i32 s18, s2, s18
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v39
	scratch_store_b32 off, v0, s18
	s_add_i32 s17, s2, s17
	v_mov_b32_e32 v0, v38
	scratch_store_b32 off, v0, s17
	s_add_i32 s16, s2, s16
	v_mov_b32_e32 v0, v37
	scratch_store_b32 off, v0, s16
	s_add_i32 s2, s2, s3
	v_mov_b32_e32 v0, v36
	scratch_store_b32 off, v0, s2
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v29
	v_mov_b32_e32 v27, v30
	v_mov_b32_e32 v28, v32
	v_mov_b32_e32 v29, v33
	v_mov_b32_e32 v30, v34
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v46, 12
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1128
	scratch_load_b128 v[0:3], off, s33 offset:1136
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b128 v[0:3], off, s33 offset:1152
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b128 v[0:3], off, s33 offset:1168
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b128 v[0:3], off, s33 offset:1184
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:208
	scratch_load_b32 v0, off, s33 offset:1132
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1132
	scratch_load_b32 v0, off, s33 offset:1132
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v46, s0, 24
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1568 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_2
; %bb.1:
	scratch_load_b32 v0, off, s33 offset:1128
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1128
	v_mov_b32_e32 v0, 32
	scratch_store_b32 off, v0, s33 offset:1132
.LBB104_2:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 24
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1136
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1312
	scratch_load_b128 v[0:3], off, s33 offset:1152
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1328
	scratch_load_b128 v[0:3], off, s33 offset:1168
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1344
	scratch_load_b128 v[3:6], off, s33 offset:1184
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v0, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1360
	v_mov_b32_e32 v0, 2
	scratch_store_b32 off, v0, s33 offset:1368
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v46, s0, 25
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1568 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB104_3:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 26
	v_readlane_b32 s1, v46, 25
	v_writelane_b32 v46, s1, 27
	scratch_load_b32 v0, off, s33 offset:1368
	s_mov_b32 s1, 16
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 28
	v_writelane_b32 v46, s0, 29
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v46, s0, 30
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1568 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_5
; %bb.4:                                ;   in Loop: Header=BB104_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v46, 2
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	scratch_load_b128 v[7:10], off, s33 offset:1136
	scratch_load_b128 v[11:14], off, s33 offset:1152
	scratch_load_b128 v[48:51], off, s33 offset:1168
	scratch_load_b128 v[0:3], off, s33 offset:1184
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v0
	v_mov_b32_e32 v17, v1
	scratch_load_b128 v[21:24], off, s33 offset:16
	scratch_load_b128 v[25:28], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:1120
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v33
	s_mov_b32 s0, s32
	scratch_store_b32 off, v1, s0
	s_mov_b32 s1, 4
	s_add_i32 s0, s0, s1
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s0
	s_add_i32 s0, s33, 0x520
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x530
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x540
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x550
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v48
	v_mov_b32_e32 v13, v49
	v_mov_b32_e32 v14, v50
	v_mov_b32_e32 v15, v51
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v34
	v_mov_b32_e32 v27, v35
	v_mov_b32_e32 v28, v36
	v_mov_b32_e32 v29, v37
	v_mov_b32_e32 v30, v32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, montgomeryMul448@rel32@lo+4
	s_addc_u32 s1, s1, montgomeryMul448@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:1312
	scratch_load_b32 v5, off, s33 offset:1368
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v4, s0
	s_mov_b32 s0, 6
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v5, v5, s0, v4
	scratch_store_b128 v5, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:1328
	scratch_load_b32 v5, off, s33 offset:1368
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v5, s0, v5
	s_mov_b32 s1, 16
	v_add3_u32 v5, v4, v5, s1
	scratch_store_b128 v5, v[0:3], off
	scratch_load_b128 v[0:3], off, s33 offset:1344
	scratch_load_b32 v5, off, s33 offset:1368
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v5, s0, v5
	s_mov_b32 s1, 32
	v_add3_u32 v5, v4, v5, s1
	scratch_store_b128 v5, v[0:3], off
	scratch_load_b64 v[0:1], off, s33 offset:1360
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s1, 0
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
	v_mov_b32_e32 v5, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v5
	scratch_store_b128 off, v[0:3], s33 offset:1376
	scratch_load_b128 v[0:3], off, s33 offset:1376
	scratch_load_b32 v5, off, s33 offset:1368
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v5, s0, v5
	s_mov_b32 s0, 48
	v_add3_u32 v4, v4, v5, s0
	scratch_store_b128 v4, v[0:3], off
	s_branch .LBB104_6
.LBB104_5:                              ; %Flow12
                                        ;   in Loop: Header=BB104_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 30
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v46, 27
	v_readlane_b32 s1, v46, 29
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v46, s1, 26
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 25
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 31
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1568 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB104_3
	s_branch .LBB104_7
.LBB104_6:                              ;   in Loop: Header=BB104_3 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 28
	scratch_load_b32 v0, off, s33 offset:1368
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1368
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 29
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1568 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_5
.LBB104_7:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 31
	s_or_b32 exec_lo, exec_lo, s0
; %bb.8:
	scratch_load_b128 v[0:3], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1392
	scratch_load_b128 v[0:3], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1408
	scratch_load_b128 v[0:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1424
	scratch_load_b64 v[0:1], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:1440
	scratch_load_b32 v0, off, s33 offset:1392
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1392
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:1456
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $vgpr46 : SGPR spill to VGPR lane
	v_writelane_b32 v46, s0, 0
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB104_9:                              ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 1
	v_readlane_b32 s1, v46, 0
	v_writelane_b32 v46, s1, 2
	scratch_load_b32 v0, off, s33 offset:1456
	scratch_load_b32 v1, off, s33 offset:1128
	s_mov_b32 s1, 16
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, s1, v1
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 3
	v_writelane_b32 v46, s0, 4
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v46, s0, 5
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_11
; %bb.10:                               ;   in Loop: Header=BB104_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v46, 2
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x570
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x580
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x590
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x5a0
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb4@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB104_12
.LBB104_11:                             ; %Flow11
                                        ;   in Loop: Header=BB104_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 5
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v46, 2
	v_readlane_b32 s1, v46, 4
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v46, s1, 1
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 0
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 6
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB104_9
	s_branch .LBB104_13
.LBB104_12:                             ;   in Loop: Header=BB104_9 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 3
	scratch_load_b32 v0, off, s33 offset:1456
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1456
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 4
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_11
.LBB104_13:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 6
	s_or_b32 exec_lo, exec_lo, s0
; %bb.14:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v45, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v45, 2
	v_readlane_b32 s14, v45, 3
	v_readlane_b32 s13, v45, 4
	v_readlane_b32 s12, v45, 5
	v_readlane_b32 s10, v45, 6
	v_readlane_b32 s11, v45, 7
	v_readlane_b32 s8, v45, 8
	v_readlane_b32 s9, v45, 9
	v_readlane_b32 s6, v45, 0
	v_readlane_b32 s7, v45, 1
	v_readlane_b32 s4, v45, 10
	v_readlane_b32 s5, v45, 11
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:1132
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 7
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_15
	s_branch .LBB104_17
.LBB104_15:                             ; %Flow10
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 7
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v46, 8
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1616 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 9
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_18
; %bb.16:
	scratch_load_b32 v0, off, s33 offset:1132
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1616 ; 4-byte Folded Spill
	s_branch .LBB104_18
.LBB104_17:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v46, s0, 8
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_15
.LBB104_18:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 9
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1616 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:1452
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1452
	scratch_load_b128 v[0:3], off, s33 offset:1136
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1312
	scratch_load_b128 v[0:3], off, s33 offset:1152
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1328
	scratch_load_b128 v[0:3], off, s33 offset:1168
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1344
	scratch_load_b128 v[3:6], off, s33 offset:1184
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v0, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1360
	v_mov_b32_e32 v1, 0
	scratch_store_b32 off, v1, s33 offset:1460
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:1464
	scratch_load_b32 v0, off, s33 offset:1132
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	v_cmp_eq_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 10
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_19
	s_branch .LBB104_21
.LBB104_19:                             ; %Flow9
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 10
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v46, 11
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1620 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 12
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_22
; %bb.20:
	scratch_load_b32 v0, off, s33 offset:1132
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:1620 ; 4-byte Folded Spill
	s_branch .LBB104_22
.LBB104_21:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_writelane_b32 v46, s0, 11
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_19
.LBB104_22:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 12
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1620 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1468
	scratch_load_b32 v0, off, s33 offset:1132
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1472
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v46, s0, 13
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB104_23:                             ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB104_26 Depth 2
                                        ;       Child Loop BB104_39 Depth 3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 14
	v_readlane_b32 s1, v46, 13
	v_writelane_b32 v46, s1, 15
	scratch_load_b32 v0, off, s33 offset:1128
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 16
	v_writelane_b32 v46, s0, 17
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v46, s0, 18
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_25
; %bb.24:                               ;   in Loop: Header=BB104_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v46, s0, 19
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_26
.LBB104_25:                             ; %Flow8
                                        ;   in Loop: Header=BB104_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 18
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v46, 15
	v_readlane_b32 s1, v46, 17
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v46, s1, 14
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 20
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB104_23
	s_branch .LBB104_62
.LBB104_26:                             ;   Parent Loop BB104_23 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB104_39 Depth 3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 21
	v_readlane_b32 s1, v46, 19
	v_writelane_b32 v46, s1, 22
	scratch_load_b32 v0, off, s33 offset:1472
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 23
	v_writelane_b32 v46, s0, 24
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v46, s0, 25
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_29
; %bb.27:                               ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v46, s0, 26
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_30
; %bb.28:                               ;   in Loop: Header=BB104_26 Depth=2
	scratch_load_b32 v1, off, s33 offset:1452
	scratch_load_b32 v0, off, s33 offset:1460
	s_mov_b32 s1, 32
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, s1, v0
	v_lshrrev_b32_e64 v0, v0, v1
	s_mov_b32 s0, 2
	v_lshlrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:1544
	scratch_load_b32 v0, off, s33 offset:1544
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v1, s0
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[2:5], s33 offset:1488
	scratch_load_b32 v0, off, s33 offset:1544
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	s_mov_b32 s2, 16
	v_add3_u32 v0, v0, v1, s2
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[2:5], s33 offset:1504
	scratch_load_b32 v0, off, s33 offset:1544
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	v_add3_u32 v0, v0, v1, s1
	scratch_load_b128 v[2:5], v0, off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[2:5], s33 offset:1520
	scratch_load_b32 v0, off, s33 offset:1544
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	s_mov_b32 s0, 48
	v_add3_u32 v0, v0, v1, s0
	scratch_load_b128 v[3:6], v0, off
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v0, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:1536
	s_branch .LBB104_30
.LBB104_29:                             ; %Flow7
                                        ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 25
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v46, 22
	v_readlane_b32 s1, v46, 24
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v46, s1, 21
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 19
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 27
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB104_26
	s_branch .LBB104_60
.LBB104_30:                             ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 26
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 28
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_31
	s_branch .LBB104_33
.LBB104_31:                             ; %Flow6
                                        ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 28
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v46, 29
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1624 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 30
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_34
; %bb.32:                               ;   in Loop: Header=BB104_26 Depth=2
	scratch_load_b32 v0, off, s33 offset:1468
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1624 ; 4-byte Folded Spill
	s_branch .LBB104_34
.LBB104_33:                             ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v46, s0, 29
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_31
.LBB104_34:                             ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 30
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1624 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1468
	scratch_load_b32 v4, off, s33 offset:1460
	scratch_load_b128 v[0:3], off, s33 offset:1440
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v3
	v_lshlrev_b32_e64 v4, v4, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:1440
	scratch_load_b32 v1, off, s33 offset:1460
	scratch_load_b32 v0, off, s33 offset:1472
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:1472
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 31
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
                                        ; implicit-def: $vgpr46 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_35
	s_branch .LBB104_37
.LBB104_35:                             ; %Flow5
                                        ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v45, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(1)
	v_readlane_b32 s0, v45, 31
	s_or_saveexec_b32 s0, s0
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v46, 0
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:1628 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 1
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_38
; %bb.36:                               ;   in Loop: Header=BB104_26 Depth=2
	scratch_load_b32 v0, off, s33 offset:1468
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1628 ; 4-byte Folded Spill
	s_branch .LBB104_38
.LBB104_37:                             ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v46, s0, 0
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_35
.LBB104_38:                             ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 1
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:1628 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:1460
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v46, s0, 2
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
.LBB104_39:                             ;   Parent Loop BB104_23 Depth=1
                                        ;     Parent Loop BB104_26 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 3
	v_readlane_b32 s1, v46, 2
	v_writelane_b32 v46, s1, 4
	scratch_load_b32 v0, off, s33 offset:1468
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 5
	v_writelane_b32 v46, s0, 6
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v46, s0, 7
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_44
; %bb.40:                               ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1632 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 8
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_41
	s_branch .LBB104_43
.LBB104_41:                             ; %Flow3
                                        ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 8
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1632 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1648 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 9
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_45
; %bb.42:                               ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1312
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1648 ; 16-byte Folded Spill
	s_branch .LBB104_45
.LBB104_43:                             ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1488
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1632 ; 16-byte Folded Spill
	s_branch .LBB104_41
.LBB104_44:                             ; %Flow4
                                        ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 7
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v46, 4
	v_readlane_b32 s1, v46, 6
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v46, s1, 3
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 2
	s_mov_b32 s1, s0
	v_writelane_b32 v46, s1, 10
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB104_39
	s_branch .LBB104_58
.LBB104_45:                             ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 9
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1648 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1488
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1664 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 11
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_46
	s_branch .LBB104_48
.LBB104_46:                             ; %Flow2
                                        ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 11
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1664 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1680 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 12
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_49
; %bb.47:                               ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1328
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1680 ; 16-byte Folded Spill
	s_branch .LBB104_49
.LBB104_48:                             ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1504
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1664 ; 16-byte Folded Spill
	s_branch .LBB104_46
.LBB104_49:                             ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 12
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1680 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1504
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr4_sgpr5_sgpr6_sgpr7
	v_mov_b32_e32 v0, s4
	v_mov_b32_e32 v1, s5
	v_mov_b32_e32 v2, s6
	v_mov_b32_e32 v3, s7
	scratch_store_b128 off, v[0:3], s33 offset:1696 ; 16-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 13
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_50
	s_branch .LBB104_52
.LBB104_50:                             ; %Flow1
                                        ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 13
	s_or_saveexec_b32 s0, s0
	scratch_load_b128 v[0:3], off, s33 offset:1696 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1712 ; 16-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 14
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_53
; %bb.51:                               ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1344
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1712 ; 16-byte Folded Spill
	s_branch .LBB104_53
.LBB104_52:                             ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b128 v[0:3], off, s33 offset:1520
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1696 ; 16-byte Folded Spill
	s_branch .LBB104_50
.LBB104_53:                             ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 14
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b128 v[0:3], off, s33 offset:1712 ; 16-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:1520
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr2_sgpr3
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:1728 ; 8-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v46, s1, 15
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB104_54
	s_branch .LBB104_56
.LBB104_54:                             ; %Flow
                                        ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 15
	s_or_saveexec_b32 s0, s0
	scratch_load_b64 v[0:1], off, s33 offset:1728 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1736 ; 8-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v46, s0, 16
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB104_57
; %bb.55:                               ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b64 v[0:1], off, s33 offset:1360
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1736 ; 8-byte Folded Spill
	s_branch .LBB104_57
.LBB104_56:                             ;   in Loop: Header=BB104_39 Depth=3
	scratch_load_b64 v[0:1], off, s33 offset:1536
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1728 ; 8-byte Folded Spill
	s_branch .LBB104_54
.LBB104_57:                             ;   in Loop: Header=BB104_39 Depth=3
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v45, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 16
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v45, 2
	v_readlane_b32 s14, v45, 3
	v_readlane_b32 s13, v45, 4
	v_readlane_b32 s12, v45, 5
	v_readlane_b32 s10, v45, 6
	v_readlane_b32 s11, v45, 7
	v_readlane_b32 s8, v45, 8
	v_readlane_b32 s9, v45, 9
	v_readlane_b32 s6, v45, 0
	v_readlane_b32 s7, v45, 1
	v_readlane_b32 s4, v45, 10
	v_readlane_b32 s5, v45, 11
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	scratch_load_b64 v[0:1], off, s33 offset:1736 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:1536
	scratch_load_b128 v[7:10], off, s33 offset:1488
	scratch_load_b128 v[11:14], off, s33 offset:1504
	scratch_load_b128 v[48:51], off, s33 offset:1520
	scratch_load_b64 v[17:18], off, s33 offset:1536
	scratch_load_b128 v[21:24], off, s33 offset:16
	scratch_load_b128 v[25:28], off, s33 offset:32
	scratch_load_b128 v[34:37], off, s33 offset:48
	scratch_load_b64 v[32:33], off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:1120
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v33
	s_mov_b32 s0, s32
	scratch_store_b32 off, v1, s0
	s_mov_b32 s1, 4
	s_add_i32 s0, s0, s1
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s0
	s_add_i32 s0, s33, 0x520
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x530
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x540
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x550
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v48
	v_mov_b32_e32 v13, v49
	v_mov_b32_e32 v14, v50
	v_mov_b32_e32 v15, v51
	v_mov_b32_e32 v16, v17
	v_mov_b32_e32 v17, v18
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v34
	v_mov_b32_e32 v27, v35
	v_mov_b32_e32 v28, v36
	v_mov_b32_e32 v29, v37
	v_mov_b32_e32 v30, v32
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, montgomeryMul448@rel32@lo+4
	s_addc_u32 s1, s1, montgomeryMul448@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v46, 5
	scratch_load_b32 v0, off, s33 offset:1468
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1468
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 6
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1576 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_44
.LBB104_58:                             ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1576 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 10
	s_or_b32 exec_lo, exec_lo, s0
; %bb.59:                               ;   in Loop: Header=BB104_26 Depth=2
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 23
	scratch_load_b32 v0, off, s33 offset:1464
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_xor_b32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1464
	v_mov_b32_e32 v0, 4
	scratch_store_b32 off, v0, s33 offset:1468
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 24
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_29
.LBB104_60:                             ;   in Loop: Header=BB104_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 27
	s_or_b32 exec_lo, exec_lo, s0
; %bb.61:                               ;   in Loop: Header=BB104_23 Depth=1
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v45, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v45, 2
	v_readlane_b32 s14, v45, 3
	v_readlane_b32 s13, v45, 4
	v_readlane_b32 s12, v45, 5
	v_readlane_b32 s10, v45, 6
	v_readlane_b32 s11, v45, 7
	v_readlane_b32 s8, v45, 8
	v_readlane_b32 s9, v45, 9
	v_readlane_b32 s6, v45, 0
	v_readlane_b32 s7, v45, 1
	v_readlane_b32 s4, v45, 10
	v_readlane_b32 s5, v45, 11
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x570
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x580
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x590
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x5a0
	v_mov_b32_e32 v3, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshiftByLimb4@rel32@lo+4
	s_addc_u32 s1, s1, lshiftByLimb4@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v46, 16
	scratch_load_b32 v0, off, s33 offset:1128
	s_mov_b32 s1, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:1128
	v_mov_b32_e32 v0, 32
	scratch_store_b32 off, v0, s33 offset:1472
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v46, s0, 17
	s_or_saveexec_b32 s25, -1
	scratch_store_b32 off, v46, s33 offset:1572 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s25
	s_branch .LBB104_25
.LBB104_62:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1572 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v46, 20
	s_or_b32 exec_lo, exec_lo, s0
; %bb.63:
	s_or_saveexec_b32 s25, -1
	scratch_load_b32 v46, off, s33 offset:1568 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s25
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v46, 2
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:1588 ; 4-byte Folded Reload
	v_readlane_b32 s4, v46, 10
	v_readlane_b32 s5, v46, 11
	v_readlane_b32 s6, v46, 0
	v_readlane_b32 s7, v46, 1
	v_readlane_b32 s8, v46, 8
	v_readlane_b32 s9, v46, 9
	v_readlane_b32 s10, v46, 6
	v_readlane_b32 s11, v46, 7
	v_readlane_b32 s12, v46, 5
	v_readlane_b32 s13, v46, 4
	v_readlane_b32 s14, v46, 3
	v_readlane_b32 s15, v46, 2
	scratch_load_b128 v[3:6], off, s33 offset:1312
	scratch_load_b128 v[7:10], off, s33 offset:1328
	scratch_load_b128 v[11:14], off, s33 offset:1344
	scratch_load_b64 v[0:1], off, s33 offset:1360
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v1
	v_mov_b32_e32 v15, v0
	s_mov_b32 s2, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v1, s2
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16_vgpr17_vgpr18 killed $exec
	v_mov_b32_e32 v16, v2
	v_mov_b32_e32 v17, v1
	v_mov_b32_e32 v18, v0
	scratch_store_b128 off, v[15:18], s33 offset:1552
	scratch_load_b128 v[20:23], off, s33 offset:1552
	scratch_load_b128 v[16:19], off, s33 offset:16
	scratch_load_b128 v[24:27], off, s33 offset:32
	scratch_load_b128 v[32:35], off, s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:64
	scratch_load_b32 v2, off, s33 offset:1120
	scratch_load_b32 v15, off, s33 offset:72
	scratch_load_b32 v28, off, s33 offset:76
	scratch_load_b32 v29, off, s33 offset:80
	scratch_load_b32 v30, off, s33 offset:84
	s_waitcnt vmcnt(8)
	v_mov_b32_e32 v36, v19
	s_mov_b32 s0, s32
	scratch_store_b32 off, v36, s0
	s_mov_b32 s1, 60
	s_add_i32 s1, s0, s1
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v30, s1
	s_mov_b32 s1, 56
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v29, s1
	s_mov_b32 s1, 52
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v28, s1
	s_mov_b32 s1, 48
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v15, s1
	s_mov_b32 s1, 44
	s_add_i32 s1, s0, s1
	scratch_store_b32 off, v2, s1
	s_mov_b32 s1, 40
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v2, v1
	scratch_store_b32 off, v2, s1
	s_mov_b32 s1, 36
	s_add_i32 s1, s0, s1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 32
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v35
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 28
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v34
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 24
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v33
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 20
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v32
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 16
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v27
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 12
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v26
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 8
	s_add_i32 s1, s0, s1
	v_mov_b32_e32 v0, v25
	scratch_store_b32 off, v0, s1
	s_mov_b32 s1, 4
	s_add_i32 s0, s0, s1
	v_mov_b32_e32 v0, v24
	scratch_store_b32 off, v0, s0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v20
	v_mov_b32_e32 v13, v21
	v_mov_b32_e32 v14, v22
	v_mov_b32_e32 v15, v23
	v_mov_b32_e32 v28, v16
	v_mov_b32_e32 v29, v17
	v_mov_b32_e32 v30, v18
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, redc1_448_v3@rel32@lo+4
	s_addc_u32 s1, s1, redc1_448_v3@rel32@hi+12
	v_mov_b32_e32 v16, s2
	v_mov_b32_e32 v17, s2
	v_mov_b32_e32 v18, s2
	v_mov_b32_e32 v19, s2
	v_mov_b32_e32 v20, s2
	v_mov_b32_e32 v21, s2
	v_mov_b32_e32 v22, s2
	v_mov_b32_e32 v23, s2
	v_mov_b32_e32 v24, s2
	v_mov_b32_e32 v25, s2
	v_mov_b32_e32 v26, s2
	v_mov_b32_e32 v27, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v44, 0
	v_readlane_b32 s31, v44, 1
	scratch_load_b32 v43, off, s33          ; 4-byte Folded Reload
	scratch_load_b32 v42, off, s33 offset:4 ; 4-byte Folded Reload
	scratch_load_b32 v41, off, s33 offset:8 ; 4-byte Folded Reload
	scratch_load_b32 v40, off, s33 offset:12 ; 4-byte Folded Reload
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v44, off, s33 offset:1744 ; 4-byte Folded Reload
	scratch_load_b32 v45, off, s33 offset:1748 ; 4-byte Folded Reload
	scratch_load_b32 v46, off, s33 offset:1752 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffff920
	s_mov_b32 s33, s26
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end104:
	.size	FermatTest448, .Lfunc_end104-FermatTest448
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 10200
; NumSgprs: 36
; NumVgprs: 65
; ScratchSize: 3584
; MemoryBound: 0
	.text
	.protected	fermatTestBenchMark448  ; -- Begin function fermatTestBenchMark448
	.globl	fermatTestBenchMark448
	.p2align	8
	.type	fermatTestBenchMark448,@function
fermatTestBenchMark448:                 ; @fermatTestBenchMark448
; %bb.0:
	s_mov_b32 s32, 0xd0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr40 : SGPR spill to VGPR lane
	v_writelane_b32 v40, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v40, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v40, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v40, s10, 3
	v_writelane_b32 v40, s11, 4
	v_writelane_b32 v40, s2, 5
	v_writelane_b32 v40, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	v_writelane_b32 v40, s4, 7
	v_writelane_b32 v40, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:180 ; 4-byte Folded Spill
	s_load_b64 s[8:9], s[0:1], 0x0
	s_load_b64 s[6:7], s[0:1], 0x8
	s_load_b32 s2, s[0:1], 0x10
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:24
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:176 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:176 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:172 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:172 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:28
	scratch_store_b32 off, v0, s33 offset:32
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 9
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
.LBB105_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB105_4 Depth 2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 10
	v_readlane_b32 s1, v40, 9
	v_writelane_b32 v40, s1, 11
	scratch_load_b32 v0, off, s33 offset:32
	s_mov_b32 s1, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 12
	v_writelane_b32 v40, s0, 13
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 14
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB105_3
; %bb.2:                                ;   in Loop: Header=BB105_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v40, s2, 15
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v40, 15
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:36
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 16
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB105_4
.LBB105_3:                              ; %Flow5
                                        ;   in Loop: Header=BB105_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 14
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 11
	v_readlane_b32 s1, v40, 13
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v40, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 17
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB105_1
	s_branch .LBB105_11
.LBB105_4:                              ;   Parent Loop BB105_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 18
	v_readlane_b32 s1, v40, 16
	v_writelane_b32 v40, s1, 19
	scratch_load_b32 v0, off, s33 offset:36
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 20
	v_writelane_b32 v40, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 22
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB105_6
; %bb.5:                                ;   in Loop: Header=BB105_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b64 v[2:3], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[2:3], s33 offset:200 ; 8-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:36
	s_mov_b32 s6, 14
	v_writelane_b32 v40, s6, 23
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v1, v0, s6
	s_mov_b32 s3, 0
	v_writelane_b32 v40, s3, 24
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s3
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v5, v0
	s_mov_b32 s2, 2
	v_writelane_b32 v40, s2, 25
	v_lshlrev_b64 v[7:8], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v5, v8
	v_add_co_u32 v4, s7, v4, v6
	v_add_co_ci_u32_e64 v0, s7, v0, v5, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	global_load_b32 v0, v[4:5], off
	s_mov_b32 s7, 1
	v_writelane_b32 v40, s7, 26
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	v_or_b32_e64 v4, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v6, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v6
	v_lshlrev_b64 v[8:9], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v4, s7, v4, v7
	v_add_co_ci_u32_e64 v6, s7, v5, v6, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v6
	global_load_b32 v6, v[4:5], off
	v_add_nc_u32_e64 v4, v1, s2
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v7, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
	v_lshlrev_b64 v[9:10], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v8, v9
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v7, v10
	v_add_co_u32 v4, s7, v4, v8
	v_add_co_ci_u32_e64 v7, s7, v5, v7, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
	global_load_b32 v5, v[4:5], off
	s_mov_b32 s7, 3
	v_add_nc_u32_e64 v7, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v1, s3
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
	v_lshlrev_b64 v[7:8], s2, v[7:8]
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v8
	v_add_co_u32 v1, s7, v1, v4
	v_add_co_ci_u32_e64 v3, s7, v2, v3, s7
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	global_load_b32 v4, v[1:2], off
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:48
	scratch_load_b64 v[2:3], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[2:3], s33 offset:192 ; 8-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v1, v0, s6
	s_mov_b32 s7, 4
	v_add_nc_u32_e64 v4, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_lshlrev_b64 v[7:8], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v5, v8
	v_add_co_u32 v4, s7, v4, v6
	v_add_co_ci_u32_e64 v0, s7, v0, v5, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	global_load_b32 v0, v[4:5], off
	s_mov_b32 s7, 5
	v_add_nc_u32_e64 v4, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v6, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v6
	v_lshlrev_b64 v[8:9], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v4, s7, v4, v7
	v_add_co_ci_u32_e64 v6, s7, v5, v6, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v6
	global_load_b32 v6, v[4:5], off
	s_mov_b32 s7, 6
	v_add_nc_u32_e64 v4, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v7, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
	v_lshlrev_b64 v[9:10], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v8, v9
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v7, v10
	v_add_co_u32 v4, s7, v4, v8
	v_add_co_ci_u32_e64 v7, s7, v5, v7, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
	global_load_b32 v5, v[4:5], off
	s_mov_b32 s7, 7
	v_add_nc_u32_e64 v7, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v1, s3
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
	v_lshlrev_b64 v[7:8], s2, v[7:8]
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v8
	v_add_co_u32 v1, s7, v1, v4
	v_add_co_ci_u32_e64 v3, s7, v2, v3, s7
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	global_load_b32 v4, v[1:2], off
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b64 v[2:3], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[2:3], s33 offset:184 ; 8-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v1, v0, s6
	s_mov_b32 s7, 8
	v_add_nc_u32_e64 v4, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_lshlrev_b64 v[7:8], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v5, v8
	v_add_co_u32 v4, s7, v4, v6
	v_add_co_ci_u32_e64 v0, s7, v0, v5, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	global_load_b32 v0, v[4:5], off
	s_mov_b32 s7, 9
	v_add_nc_u32_e64 v4, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v6, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v6
	v_lshlrev_b64 v[8:9], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v4, s7, v4, v7
	v_add_co_ci_u32_e64 v6, s7, v5, v6, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v6
	global_load_b32 v6, v[4:5], off
	s_mov_b32 s7, 10
	v_add_nc_u32_e64 v4, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v7, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
	v_lshlrev_b64 v[9:10], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v8, v9
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v7, v10
	v_add_co_u32 v4, s7, v4, v8
	v_add_co_ci_u32_e64 v7, s7, v5, v7, s7
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
	global_load_b32 v5, v[4:5], off
	s_mov_b32 s7, 11
	v_add_nc_u32_e64 v7, v1, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v1, s3
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v1
	v_lshlrev_b64 v[7:8], s2, v[7:8]
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v8
	v_add_co_u32 v1, s7, v1, v4
	v_add_co_ci_u32_e64 v3, s7, v2, v3, s7
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	global_load_b32 v4, v[1:2], off
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v2, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[2:3], off, s33 offset:8
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v1, v0, s6
	s_mov_b32 s6, 12
	v_add_nc_u32_e64 v4, v1, s6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	v_lshlrev_b64 v[7:8], s2, v[4:5]
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v5, v8
	v_add_co_u32 v4, s6, v4, v6
	v_add_co_ci_u32_e64 v0, s6, v0, v5, s6
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	global_load_b32 v0, v[4:5], off
	s_mov_b32 s6, 13
	v_add_nc_u32_e64 v4, v1, s6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v1, s3
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v1
	v_lshlrev_b64 v[5:6], s2, v[4:5]
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v1, s2, v1, v4
	v_add_co_ci_u32_e64 v3, s2, v2, v3, s2
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	global_load_b32 v2, v[1:2], off
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b128 v[3:6], off, s33 offset:48
	scratch_load_b128 v[7:10], off, s33 offset:64
	scratch_load_b128 v[20:23], off, s33 offset:80
	scratch_load_b64 v[18:19], off, s33 offset:96
	s_mov_b64 s[6:7], 24
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v15, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v8, v20
	v_mov_b32_e32 v9, v21
	v_mov_b32_e32 v10, v22
	v_mov_b32_e32 v11, v23
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v18
	v_mov_b32_e32 v13, v19
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, FermatTest448@rel32@lo+4
	s_addc_u32 s1, s1, FermatTest448@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s3, v40, 26
	v_readlane_b32 s2, v40, 23
	v_readlane_b32 s1, v40, 24
	v_readlane_b32 s0, v40, 25
	scratch_load_b32 v2, off, s33 offset:112
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, s2
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s4, v0, v4
	v_add_co_ci_u32_e64 v3, s4, v1, v3, s4
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:116
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v0, v0, s2
	v_or_b32_e64 v0, v0, s3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:120
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:124
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 3
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:128
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 4
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:132
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 5
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:136
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 6
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:140
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 7
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:144
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 8
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:148
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 9
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:152
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 10
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:156
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 11
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:160
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v3, s2, 12
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s3, v0, v4
	v_add_co_ci_u32_e64 v3, s3, v1, v3, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:164
	scratch_load_b64 v[7:8], off, s33 offset:16
	scratch_load_b32 v3, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s2, v3, s2, 13
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v3, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	v_lshlrev_b64 v[5:6], s0, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
	s_branch .LBB105_7
.LBB105_6:                              ; %Flow
                                        ;   in Loop: Header=BB105_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 19
	v_readlane_b32 s1, v40, 21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v40, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 27
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB105_4
	s_branch .LBB105_8
.LBB105_7:                              ;   in Loop: Header=BB105_4 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 20
	scratch_load_b32 v1, off, s33 offset:28
	scratch_load_b32 v0, off, s33 offset:36
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:36
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 21
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB105_6
.LBB105_8:                              ;   in Loop: Header=BB105_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 27
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB105_1 Depth=1
; %bb.10:                               ;   in Loop: Header=BB105_1 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 12
	scratch_load_b32 v0, off, s33 offset:32
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:32
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 13
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:168 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB105_3
.LBB105_11:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:168 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 17
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel fermatTestBenchMark448
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 3792
		.amdhsa_kernarg_size 280
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 65
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end105:
	.size	fermatTestBenchMark448, .Lfunc_end105-fermatTestBenchMark448
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 4364
; NumSgprs: 36
; NumVgprs: 65
; ScratchSize: 3792
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 8
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 65
; Occupancy: 12
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	modulo384to256test      ; -- Begin function modulo384to256test
	.globl	modulo384to256test
	.p2align	8
	.type	modulo384to256test,@function
modulo384to256test:                     ; @modulo384to256test
; %bb.0:
	s_mov_b32 s32, 0xd0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr28 : SGPR spill to VGPR lane
	v_writelane_b32 v28, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v28, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v28, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v28, s10, 3
	v_writelane_b32 v28, s11, 4
	v_writelane_b32 v28, s2, 5
	v_writelane_b32 v28, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v28, 5
	v_readlane_b32 s1, v28, 6
	v_writelane_b32 v28, s4, 7
	v_writelane_b32 v28, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:204 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:200 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:200 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:196 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:196 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:64
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v28, s0, 9
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
.LBB106_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB106_4 Depth 2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 10
	v_readlane_b32 s1, v28, 9
	v_writelane_b32 v28, s1, 11
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s1, 32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 12
	v_writelane_b32 v28, s0, 13
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v28, s0, 14
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB106_3
; %bb.2:                                ;   in Loop: Header=BB106_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v28, 0
	v_readlane_b32 s13, v28, 1
	v_readlane_b32 s12, v28, 2
	v_readlane_b32 s10, v28, 3
	v_readlane_b32 s11, v28, 4
	v_readlane_b32 s4, v28, 7
	v_readlane_b32 s5, v28, 8
	v_readlane_b32 s0, v28, 5
	v_readlane_b32 s1, v28, 6
	scratch_load_b32 v31, off, s33 offset:204 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v28, s2, 15
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v28, 15
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:72
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v28, s0, 16
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB106_4
.LBB106_3:                              ; %Flow7
                                        ;   in Loop: Header=BB106_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 14
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v28, 11
	v_readlane_b32 s1, v28, 13
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v28, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB106_1
	s_branch .LBB106_11
.LBB106_4:                              ;   Parent Loop BB106_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 18
	v_readlane_b32 s1, v28, 16
	v_writelane_b32 v28, s1, 19
	scratch_load_b32 v0, off, s33 offset:72
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 20
	v_writelane_b32 v28, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v28, s0, 22
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB106_6
; %bb.5:                                ;   in Loop: Header=BB106_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v28, 0
	v_readlane_b32 s13, v28, 1
	v_readlane_b32 s12, v28, 2
	v_readlane_b32 s10, v28, 3
	v_readlane_b32 s11, v28, 4
	v_readlane_b32 s4, v28, 7
	v_readlane_b32 s5, v28, 8
	v_readlane_b32 s0, v28, 5
	v_readlane_b32 s1, v28, 6
	scratch_load_b32 v31, off, s33 offset:204 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 1, v0
	s_mov_b32 s3, 0
	v_writelane_b32 v28, s3, 23
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s2, 4
	v_writelane_b32 v28, s2, 24
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s6, 3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s7, v0, s6, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s6, v0, s6, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s6, 1
	v_writelane_b32 v28, s6, 25
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s6, v0
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s6, s6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	scratch_load_b128 v[11:14], off, s33 offset:112
	scratch_load_b128 v[15:18], off, s33 offset:128
	scratch_load_b128 v[22:25], off, s33 offset:144
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v20, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v21, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v22
	v_mov_b32_e32 v17, v23
	v_mov_b32_e32 v18, v24
	v_mov_b32_e32 v19, v25
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, modulo384to256@rel32@lo+4
	s_addc_u32 s1, s1, modulo384to256@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s2, v28, 25
	v_readlane_b32 s1, v28, 23
	v_readlane_b32 s0, v28, 24
	scratch_load_b128 v[2:5], off, s33 offset:160
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:176
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB106_7
.LBB106_6:                              ; %Flow
                                        ;   in Loop: Header=BB106_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v28, 19
	v_readlane_b32 s1, v28, 21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v28, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v28, s1, 26
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB106_4
	s_branch .LBB106_8
.LBB106_7:                              ;   in Loop: Header=BB106_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 20
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:72
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 21
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB106_6
.LBB106_8:                              ;   in Loop: Header=BB106_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 26
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB106_1 Depth=1
; %bb.10:                               ;   in Loop: Header=BB106_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 12
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v28, s0, 13
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v28, s33 offset:192 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB106_3
.LBB106_11:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v28, off, s33 offset:192 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v28, 17
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel modulo384to256test
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 736
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 32
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end106:
	.size	modulo384to256test, .Lfunc_end106-modulo384to256test
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2532
; NumSgprs: 36
; NumVgprs: 32
; ScratchSize: 736
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 3
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 32
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	modulo512to384test      ; -- Begin function modulo512to384test
	.globl	modulo512to384test
	.p2align	8
	.type	modulo512to384test,@function
modulo512to384test:                     ; @modulo512to384test
; %bb.0:
	s_mov_b32 s32, 0x100
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr37 : SGPR spill to VGPR lane
	v_writelane_b32 v37, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v37, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v37, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v37, s10, 3
	v_writelane_b32 v37, s11, 4
	v_writelane_b32 v37, s2, 5
	v_writelane_b32 v37, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v37, 5
	v_readlane_b32 s1, v37, 6
	v_writelane_b32 v37, s4, 7
	v_writelane_b32 v37, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:252 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:248 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:248 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:244 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:244 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:64
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v37, s0, 9
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
.LBB107_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB107_4 Depth 2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 10
	v_readlane_b32 s1, v37, 9
	v_writelane_b32 v37, s1, 11
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s1, 32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v37, s0, 12
	v_writelane_b32 v37, s0, 13
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v37, s0, 14
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB107_3
; %bb.2:                                ;   in Loop: Header=BB107_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_readlane_b32 s0, v37, 5
	v_readlane_b32 s1, v37, 6
	scratch_load_b32 v31, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v37, s2, 15
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v37, 15
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:72
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v37, s0, 16
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB107_4
.LBB107_3:                              ; %Flow7
                                        ;   in Loop: Header=BB107_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 14
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v37, 11
	v_readlane_b32 s1, v37, 13
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v37, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v37, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v37, s1, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB107_1
	s_branch .LBB107_11
.LBB107_4:                              ;   Parent Loop BB107_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 18
	v_readlane_b32 s1, v37, 16
	v_writelane_b32 v37, s1, 19
	scratch_load_b32 v0, off, s33 offset:72
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v37, s0, 20
	v_writelane_b32 v37, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v37, s0, 22
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB107_6
; %bb.5:                                ;   in Loop: Header=BB107_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_readlane_b32 s0, v37, 5
	v_readlane_b32 s1, v37, 6
	scratch_load_b32 v31, off, s33 offset:252 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s7, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s7, v0
	s_mov_b32 s3, 0
	v_writelane_b32 v37, s3, 23
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s2, 4
	v_writelane_b32 v37, s2, 24
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s6, 1
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s7, s6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s7, s7
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s6, 3
	v_writelane_b32 v37, s6, 25
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s7, s6
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 1, v0
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s7, v0, s6, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s6, v0, s6, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s2, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	scratch_load_b128 v[11:14], off, s33 offset:112
	scratch_load_b128 v[15:18], off, s33 offset:128
	scratch_load_b128 v[19:22], off, s33 offset:144
	scratch_load_b128 v[23:26], off, s33 offset:160
	scratch_load_b128 v[32:35], off, s33 offset:176
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v28, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v29, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xe0
	v_mov_b32_e32 v30, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(6)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(5)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(4)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v24, v32
	v_mov_b32_e32 v25, v33
	v_mov_b32_e32 v26, v34
	v_mov_b32_e32 v27, v35
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, modulo512to384@rel32@lo+4
	s_addc_u32 s1, s1, modulo512to384@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s2, v37, 25
	v_readlane_b32 s1, v37, 23
	v_readlane_b32 s0, v37, 24
	scratch_load_b128 v[2:5], off, s33 offset:192
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, 1, v0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:208
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s2, 1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:224
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v6, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s2, v6, s2, 2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB107_7
.LBB107_6:                              ; %Flow
                                        ;   in Loop: Header=BB107_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v37, 19
	v_readlane_b32 s1, v37, 21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v37, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v37, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v37, s1, 26
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB107_4
	s_branch .LBB107_8
.LBB107_7:                              ;   in Loop: Header=BB107_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 20
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:72
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v37, s0, 21
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB107_6
.LBB107_8:                              ;   in Loop: Header=BB107_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 26
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB107_1 Depth=1
; %bb.10:                               ;   in Loop: Header=BB107_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 12
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v37, s0, 13
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v37, s33 offset:240 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB107_3
.LBB107_11:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v37, off, s33 offset:240 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v37, 17
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel modulo512to384test
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 928
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 38
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end107:
	.size	modulo512to384test, .Lfunc_end107-modulo512to384test
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2900
; NumSgprs: 36
; NumVgprs: 38
; ScratchSize: 928
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 4
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 38
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	modulo640to512test      ; -- Begin function modulo640to512test
	.globl	modulo640to512test
	.p2align	8
	.type	modulo640to512test,@function
modulo640to512test:                     ; @modulo640to512test
; %bb.0:
	s_mov_b32 s32, 0x130
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr42 : SGPR spill to VGPR lane
	v_writelane_b32 v42, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v42, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v42, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v42, s10, 3
	v_writelane_b32 v42, s11, 4
	v_writelane_b32 v42, s2, 5
	v_writelane_b32 v42, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v42, 5
	v_readlane_b32 s1, v42, 6
	v_writelane_b32 v42, s4, 7
	v_writelane_b32 v42, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:300 ; 4-byte Folded Spill
	s_load_b64 s[16:17], s[0:1], 0x0
	s_load_b64 s[8:9], s[0:1], 0x8
	s_load_b64 s[6:7], s[0:1], 0x10
	s_load_b32 s2, s[0:1], 0x18
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s2
	scratch_store_b32 off, v0, s33 offset:32
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:56
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:296 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:296 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:292 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:292 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:64
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v42, s0, 9
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
.LBB108_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB108_4 Depth 2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 10
	v_readlane_b32 s1, v42, 9
	v_writelane_b32 v42, s1, 11
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s1, 32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 12
	v_writelane_b32 v42, s0, 13
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 14
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB108_3
; %bb.2:                                ;   in Loop: Header=BB108_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v42, 0
	v_readlane_b32 s13, v42, 1
	v_readlane_b32 s12, v42, 2
	v_readlane_b32 s10, v42, 3
	v_readlane_b32 s11, v42, 4
	v_readlane_b32 s4, v42, 7
	v_readlane_b32 s5, v42, 8
	v_readlane_b32 s0, v42, 5
	v_readlane_b32 s1, v42, 6
	scratch_load_b32 v31, off, s33 offset:300 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
	s_mov_b32 s2, 0
	v_writelane_b32 v42, s2, 15
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v42, 15
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	scratch_store_b32 off, v0, s33 offset:72
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v42, s0, 16
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB108_4
.LBB108_3:                              ; %Flow7
                                        ;   in Loop: Header=BB108_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 14
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v42, 11
	v_readlane_b32 s1, v42, 13
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v42, s1, 10
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 17
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB108_1
	s_branch .LBB108_11
.LBB108_4:                              ;   Parent Loop BB108_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 18
	v_readlane_b32 s1, v42, 16
	v_writelane_b32 v42, s1, 19
	scratch_load_b32 v0, off, s33 offset:72
	scratch_load_b32 v1, off, s33 offset:32
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 20
	v_writelane_b32 v42, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 22
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB108_6
; %bb.5:                                ;   in Loop: Header=BB108_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v42, 0
	v_readlane_b32 s13, v42, 1
	v_readlane_b32 s12, v42, 2
	v_readlane_b32 s10, v42, 3
	v_readlane_b32 s11, v42, 4
	v_readlane_b32 s4, v42, 7
	v_readlane_b32 s5, v42, 8
	v_readlane_b32 s0, v42, 5
	v_readlane_b32 s1, v42, 6
	scratch_load_b32 v31, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 2, v0
	s_mov_b32 s2, 0
	v_writelane_b32 v42, s2, 23
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s3, 4
	v_writelane_b32 v42, s3, 24
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s6, 5
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s7, v0, s6, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s7, v0, s6, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s7, v0, s6, 3
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:40
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s6, v0, s6, 4
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s6, v0, v3
	v_add_co_ci_u32_e64 v2, s6, v1, v2, s6
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s6, 2
	v_writelane_b32 v42, s6, 25
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v3, s6, v0
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s7, 1
	v_writelane_b32 v42, s7, 26
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s6, s7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:176
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s6, s6
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s7, v0, v3
	v_add_co_ci_u32_e64 v2, s7, v1, v2, s7
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:192
	scratch_load_b64 v[1:2], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:72
	s_mov_b32 s7, 3
	v_writelane_b32 v42, s7, 27
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, s6, s7
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:208
	scratch_load_b128 v[3:6], off, s33 offset:80
	scratch_load_b128 v[7:10], off, s33 offset:96
	scratch_load_b128 v[11:14], off, s33 offset:112
	scratch_load_b128 v[15:18], off, s33 offset:128
	scratch_load_b128 v[19:22], off, s33 offset:144
	scratch_load_b128 v[23:26], off, s33 offset:160
	scratch_load_b128 v[27:30], off, s33 offset:176
	scratch_load_b128 v[32:35], off, s33 offset:192
	scratch_load_b128 v[36:39], off, s33 offset:208
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v35
	s_mov_b32 s2, s32
	v_writelane_b32 v42, s2, 28
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	scratch_store_b32 off, v0, s2
	s_mov_b32 s6, 32
	s_add_i32 s6, s2, s6
	s_add_i32 s7, s33, 0x110
	v_mov_b32_e32 v0, s7
	scratch_store_b32 off, v0, s6
	s_mov_b32 s6, 28
	s_add_i32 s6, s2, s6
	s_add_i32 s7, s33, 0x100
	v_mov_b32_e32 v0, s7
	scratch_store_b32 off, v0, s6
	s_mov_b32 s6, 24
	s_add_i32 s6, s2, s6
	s_add_i32 s7, s33, 0xf0
	v_mov_b32_e32 v0, s7
	scratch_store_b32 off, v0, s6
	s_mov_b32 s6, 20
	s_add_i32 s6, s2, s6
	s_add_i32 s7, s33, 0xe0
	v_mov_b32_e32 v0, s7
	scratch_store_b32 off, v0, s6
	s_mov_b32 s6, 16
	s_add_i32 s6, s2, s6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v39
	scratch_store_b32 off, v0, s6
	s_mov_b32 s6, 12
	s_add_i32 s6, s2, s6
	v_mov_b32_e32 v0, v38
	scratch_store_b32 off, v0, s6
	s_mov_b32 s6, 8
	s_add_i32 s6, s2, s6
	v_mov_b32_e32 v0, v37
	scratch_store_b32 off, v0, s6
	s_add_i32 s2, s2, s3
	v_mov_b32_e32 v0, v36
	scratch_store_b32 off, v0, s2
	s_mov_b64 s[6:7], 32
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	v_mov_b32_e32 v18, v21
	v_mov_b32_e32 v19, v22
	v_mov_b32_e32 v20, v23
	v_mov_b32_e32 v21, v24
	v_mov_b32_e32 v22, v25
	v_mov_b32_e32 v23, v26
	v_mov_b32_e32 v24, v27
	v_mov_b32_e32 v25, v28
	v_mov_b32_e32 v26, v29
	v_mov_b32_e32 v27, v30
	v_mov_b32_e32 v28, v32
	v_mov_b32_e32 v29, v33
	v_mov_b32_e32 v30, v34
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, modulo640to512@rel32@lo+4
	s_addc_u32 s1, s1, modulo640to512@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s4, v42, 26
	v_readlane_b32 s3, v42, 27
	v_readlane_b32 s2, v42, 25
	v_readlane_b32 s1, v42, 23
	v_readlane_b32 s0, v42, 24
	scratch_load_b128 v[2:5], off, s33 offset:224
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
                                        ; implicit-def: $sgpr5
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s5, v0, v7
	v_add_co_ci_u32_e64 v6, s5, v1, v6, s5
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:240
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s4
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s4, v0, v7
	v_add_co_ci_u32_e64 v6, s4, v1, v6, s4
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:256
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s2
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s4, v0, v7
	v_add_co_ci_u32_e64 v6, s4, v1, v6, s4
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:272
	scratch_load_b64 v[10:11], off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s3
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	s_branch .LBB108_7
.LBB108_6:                              ; %Flow
                                        ;   in Loop: Header=BB108_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v42, 19
	v_readlane_b32 s1, v42, 21
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v42, s1, 18
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 29
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB108_4
	s_branch .LBB108_8
.LBB108_7:                              ;   in Loop: Header=BB108_4 Depth=2
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 20
	scratch_load_b32 v1, off, s33 offset:64
	scratch_load_b32 v0, off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:72
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 21
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB108_6
.LBB108_8:                              ;   in Loop: Header=BB108_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 29
	s_or_b32 exec_lo, exec_lo, s0
; %bb.9:                                ;   in Loop: Header=BB108_1 Depth=1
; %bb.10:                               ;   in Loop: Header=BB108_1 Depth=1
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 12
	scratch_load_b32 v0, off, s33 offset:68
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:68
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 13
	s_or_saveexec_b32 s20, -1
	scratch_store_b32 off, v42, s33 offset:288 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s20
	s_branch .LBB108_3
.LBB108_11:
	s_or_saveexec_b32 s20, -1
	scratch_load_b32 v42, off, s33 offset:288 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s20
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 17
	s_or_b32 exec_lo, exec_lo, s0
; %bb.12:
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel modulo640to512test
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 1152
		.amdhsa_kernarg_size 288
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 43
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end108:
	.size	modulo640to512test, .Lfunc_end108-modulo640to512test
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 3416
; NumSgprs: 36
; NumVgprs: 43
; ScratchSize: 1152
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 5
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 43
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	searchNonce             ; -- Begin function searchNonce
	.globl	searchNonce
	.p2align	8
	.type	searchNonce,@function
searchNonce:                            ; @searchNonce
; %bb.0:
	s_mov_b32 s32, 0x260
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr40 : SGPR spill to VGPR lane
	v_writelane_b32 v40, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v40, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v40, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v40, s10, 3
	v_writelane_b32 v40, s11, 4
	v_writelane_b32 v40, s2, 5
	v_writelane_b32 v40, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	v_writelane_b32 v40, s4, 7
	v_writelane_b32 v40, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:456 ; 4-byte Folded Spill
	s_load_b64 s[18:19], s[0:1], 0x0
	s_load_b64 s[16:17], s[0:1], 0x8
	s_load_b64 s[8:9], s[0:1], 0x10
	s_load_b64 s[6:7], s[0:1], 0x18
	s_load_b64 s[2:3], s[0:1], 0x20
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s18
	v_mov_b32_e32 v1, s19
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:32
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:40
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:448 ; 8-byte Folded Spill
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v40, s8, 9
	v_writelane_b32 v40, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_group_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_group_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s8, v40, 9
	v_readlane_b32 s9, v40, 10
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:448 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s1, 0x2410
	v_mad_u64_u32 v[5:6], s0, v0, s1, 0
	v_mov_b32_e32 v7, v6
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v0
	s_mov_b32 s0, 32
	v_lshrrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s1, v0, s1, v[7:8]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:48
	scratch_load_b64 v[1:2], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	s_mov_b32 s0, 0x2000
	v_writelane_b32 v40, s0, 11
	v_add_co_u32 v0, s1, s0, v0
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 0
	v_writelane_b32 v40, s0, 12
	v_add_co_ci_u32_e64 v2, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:1024
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:56
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s1, v40, 11
	v_readlane_b32 s0, v40, 12
	scratch_load_b32 v0, off, s33 offset:56
	scratch_load_b64 v[2:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v2
	v_add_co_u32 v1, s1, s1, v1
	v_mov_b32_e32 v2, v3
	v_add_co_ci_u32_e64 v3, s0, s0, v2, s1
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	global_load_b32 v1, v[1:2], off offset:1028
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, v1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 13
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_1
	s_branch .LBB109_70
.LBB109_1:                              ; %Flow22
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 13
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v40, s0, 14
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB109_6
; %bb.2:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	global_load_b128 v[0:3], v[0:1], off offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	global_load_b128 v[0:3], v[0:1], off offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	global_load_b128 v[0:3], v[0:1], off offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v40, s8, 15
	v_writelane_b32 v40, s9, 16
	s_add_i32 s0, s33, 64
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sha256SwapByteOrder@rel32@lo+4
	s_addc_u32 s1, s1, sha256SwapByteOrder@rel32@hi+12
	v_writelane_b32 v40, s0, 17
	v_writelane_b32 v40, s1, 18
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s8, v40, 15
	v_readlane_b32 s9, v40, 16
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s0, v40, 17
	v_readlane_b32 s1, v40, 18
	s_add_i32 s2, s33, 0x50
	v_mov_b32_e32 v0, s2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s8, v40, 15
	v_readlane_b32 s9, v40, 16
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s0, v40, 17
	v_readlane_b32 s1, v40, 18
	s_add_i32 s2, s33, 0x60
	v_mov_b32_e32 v0, s2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s8, v40, 15
	v_readlane_b32 s9, v40, 16
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s0, v40, 17
	v_readlane_b32 s1, v40, 18
	s_add_i32 s2, s33, 0x70
	v_mov_b32_e32 v0, s2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s8, v40, 15
	v_readlane_b32 s9, v40, 16
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s0, v40, 17
	v_readlane_b32 s1, v40, 18
	s_add_i32 s2, s33, 0x80
	v_mov_b32_e32 v0, s2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b64 v[6:7], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:56
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 2
	v_lshlrev_b64 v[4:5], s0, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s0, v1, v3
	v_add_co_ci_u32_e64 v0, s0, v0, v2, s0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s0, 0x2000
	v_add_co_u32 v0, s1, s0, v0
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v2, s1, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:244
	scratch_load_b32 v0, off, s33 offset:244
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr2_sgpr3
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:460 ; 8-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 19
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_3
	s_branch .LBB109_5
.LBB109_3:                              ; %Flow21
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 19
	s_or_saveexec_b32 s0, s0
	scratch_load_b64 v[0:1], off, s33 offset:460 ; 8-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:468 ; 8-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v40, s0, 20
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB109_7
; %bb.4:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z13get_global_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z13get_global_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:468 ; 8-byte Folded Spill
	s_branch .LBB109_7
.LBB109_5:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s2, 0xffffff00
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s2
	s_mov_b32 s2, 0
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v2, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:488 ; 8-byte Folded Spill
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v40, s8, 21
	v_writelane_b32 v40, s9, 22
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:484 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b64 v[2:3], off, s33 offset:488 ; 8-byte Folded Reload
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s8, v40, 21
	v_readlane_b32 s9, v40, 22
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_mov_b32_e32 v5, v0
	scratch_load_b32 v0, off, s33 offset:484 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v1
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v1, s0, v1, v4
	v_add_co_ci_u32_e64 v3, s0, v2, v3, s0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	scratch_store_b64 off, v[1:2], s33 offset:476 ; 8-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:476 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:460 ; 8-byte Folded Spill
	s_branch .LBB109_3
.LBB109_6:                              ; %Flow23
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 14
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB109_71
.LBB109_7:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 20
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b64 v[0:1], off, s33 offset:468 ; 8-byte Folded Reload
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:244
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:248
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 23
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
.LBB109_8:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB109_11 Depth 2
                                        ;       Child Loop BB109_19 Depth 3
                                        ;         Child Loop BB109_22 Depth 4
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 24
	v_readlane_b32 s1, v40, 23
	v_writelane_b32 v40, s1, 25
	scratch_load_b32 v0, off, s33 offset:248
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 26
	v_writelane_b32 v40, s0, 27
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 28
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
                                        ; implicit-def: $vgpr40 : SGPR spill to VGPR lane
                                        ; implicit-def: $vgpr40 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_10
; %bb.9:                                ;   in Loop: Header=BB109_8 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:244
	s_getpc_b64 s[2:3]
	s_add_u32 s2, s2, ES@rel32@lo+4
	s_addc_u32 s3, s3, ES@rel32@hi+12
	s_load_b32 s2, s[2:3], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s2
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v39, s8, 29
	v_writelane_b32 v39, s9, 30
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6rotatejj@rel32@lo+4
	s_addc_u32 s1, s1, _Z6rotatejj@rel32@hi+12
	v_writelane_b32 v39, s0, 31
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	v_writelane_b32 v40, s1, 0
	v_mov_b32_e32 v1, 24
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 31
	v_readlane_b32 s1, v40, 0
	scratch_store_b32 off, v0, s33 offset:548 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:244
	s_getpc_b64 s[2:3]
	s_add_u32 s2, s2, ES@rel32@lo+8
	s_addc_u32 s3, s3, ES@rel32@hi+16
	s_load_b32 s2, s[2:3], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_and_b32_e64 v0, v0, s2
	v_mov_b32_e32 v1, 8
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_mov_b32_e32 v1, v0
	scratch_load_b32 v0, off, s33 offset:548 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	v_or_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:140
	scratch_load_b128 v[5:8], off, s33 offset:64
	scratch_load_b128 v[9:12], off, s33 offset:80
	scratch_load_b128 v[13:16], off, s33 offset:96
	scratch_load_b128 v[17:20], off, s33 offset:112
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v0, s33 offset:544 ; 4-byte Folded Spill
	s_add_i32 s0, s33, 0xa0
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v1, s33 offset:540 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, SHA256_fresh@rel32@lo+4
	s_addc_u32 s1, s1, SHA256_fresh@rel32@hi+12
	v_writelane_b32 v40, s0, 1
	v_writelane_b32 v40, s1, 2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:544 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:540 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	scratch_load_b128 v[5:8], off, s33 offset:128
	s_mov_b32 s1, 0
	v_writelane_b32 v40, s1, 3
	s_mov_b32 s16, 0x80000000
                                        ; kill: def $sgpr16 killed $sgpr16 def $sgpr16_sgpr17_sgpr18_sgpr19
	s_mov_b32 s17, s1
	s_mov_b32 s18, s1
	s_mov_b32 s19, s1
	v_writelane_b32 v40, s16, 4
	v_writelane_b32 v40, s17, 5
	v_writelane_b32 v40, s18, 6
	v_writelane_b32 v40, s19, 7
	v_mov_b32_e32 v9, s16
	v_mov_b32_e32 v10, s17
	v_mov_b32_e32 v11, s18
	v_mov_b32_e32 v12, s19
	scratch_store_b128 off, v[9:12], s33 offset:256
	scratch_load_b128 v[9:12], off, s33 offset:256
	v_mov_b32_e32 v13, s1
	v_mov_b32_e32 v4, s1
	v_mov_b32_e32 v3, s1
	v_mov_b32_e32 v2, s1
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14_vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v14, v4
	v_mov_b32_e32 v15, v3
	v_mov_b32_e32 v16, v2
	scratch_store_b128 off, v[13:16], s33 offset:272
	scratch_load_b128 v[13:16], off, s33 offset:272
	s_mov_b32 s0, 0x280
	v_mov_b32_e32 v17, s1
	v_mov_b32_e32 v4, s1
	v_mov_b32_e32 v3, s1
	v_mov_b32_e32 v2, s0
                                        ; kill: def $vgpr17 killed $vgpr17 def $vgpr17_vgpr18_vgpr19_vgpr20 killed $exec
	v_mov_b32_e32 v18, v4
	v_mov_b32_e32 v19, v3
	v_mov_b32_e32 v20, v2
	scratch_store_b128 off, v[17:20], s33 offset:288
	scratch_load_b128 v[17:20], off, s33 offset:288
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sha256@rel32@lo+4
	s_addc_u32 s1, s1, sha256@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s16, v40, 4
	v_readlane_b32 s17, v40, 5
	v_readlane_b32 s18, v40, 6
	v_readlane_b32 s19, v40, 7
	v_readlane_b32 s0, v40, 1
	v_readlane_b32 s1, v40, 2
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s3, v40, 3
	scratch_load_b128 v[5:8], off, s33 offset:144
	scratch_load_b128 v[9:12], off, s33 offset:160
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	v_mov_b32_e32 v2, s18
	v_mov_b32_e32 v3, s19
	scratch_store_b128 off, v[0:3], s33 offset:304
	scratch_load_b128 v[13:16], off, s33 offset:304
	s_mov_b32 s2, 0x100
	v_mov_b32_e32 v0, s3
	v_mov_b32_e32 v18, s3
	v_mov_b32_e32 v17, s3
	v_mov_b32_e32 v4, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v18
	v_mov_b32_e32 v2, v17
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:320
	scratch_load_b128 v[17:20], off, s33 offset:320
	s_add_i32 s2, s33, 0xb0
	v_mov_b32_e32 v0, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v0, s33 offset:536 ; 4-byte Folded Spill
	s_add_i32 s2, s33, 0xc0
	v_mov_b32_e32 v1, s2
                                        ; implicit-def: $sgpr2
	scratch_store_b32 off, v1, s33 offset:532 ; 4-byte Folded Spill
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v14, v17
	v_mov_b32_e32 v15, v18
	v_mov_b32_e32 v16, v19
	v_mov_b32_e32 v17, v20
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:536 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, sha256SwapByteOrder@rel32@lo+4
	s_addc_u32 s1, s1, sha256SwapByteOrder@rel32@hi+12
	v_writelane_b32 v40, s0, 8
	v_writelane_b32 v40, s1, 9
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:532 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s0, v40, 8
	v_readlane_b32 s1, v40, 9
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_writelane_b32 v40, s0, 10
	v_writelane_b32 v40, s1, 11
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:496 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s2, v40, 3
	scratch_load_b128 v[0:3], off, s33 offset:176
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:516 ; 16-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_writelane_b32 v40, s0, 12
	v_writelane_b32 v40, s1, 13
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s0, v40, 12
	v_readlane_b32 s1, v40, 13
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s2, v40, 3
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b128 v[1:4], off, s33 offset:516 ; 16-byte Folded Reload
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v5
	s_mov_b32 s3, 5
	v_writelane_b32 v40, s3, 14
	v_lshlrev_b32_e64 v0, s3, v0
	s_waitcnt vmcnt(0)
	ds_store_b128 v0, v[1:4]
	scratch_load_b128 v[0:3], off, s33 offset:192
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:500 ; 16-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b128 v[2:5], off, s33 offset:500 ; 16-byte Folded Reload
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s8, v39, 29
	v_readlane_b32 s9, v39, 30
	v_readlane_b32 s2, v40, 14
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v40, 10
	v_readlane_b32 s1, v40, 11
	v_mov_b32_e32 v6, v0
	scratch_load_b32 v0, off, s33 offset:496 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v1
	v_mov_b32_e32 v1, v6
	v_lshlrev_b32_e64 v1, s2, v1
	s_waitcnt vmcnt(1)
	ds_store_b128 v1, v[2:5] offset:16
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v40, 3
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:336
	v_writelane_b32 v40, s0, 15
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_11
.LBB109_10:                             ; %Flow20
                                        ;   in Loop: Header=BB109_8 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v39, 28
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v39, 25
	v_readlane_b32 s1, v39, 27
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v39, s1, 24
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 23
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 s1, s0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v40, s1, 16
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB109_8
	s_branch .LBB109_42
.LBB109_11:                             ;   Parent Loop BB109_8 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB109_19 Depth 3
                                        ;         Child Loop BB109_22 Depth 4
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(1)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v40, 15
	v_writelane_b32 v40, s2, 17
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:336
	s_mov_b32 s2, 0
	v_writelane_b32 v40, s2, 18
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:552 ; 8-byte Folded Spill
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z14get_local_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z14get_local_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v40, 18
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v4, v1
	scratch_load_b64 v[0:1], off, s33 offset:552 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	s_waitcnt vmcnt(0)
	v_cmp_lt_u64_e64 s1, v[0:1], v[2:3]
	v_writelane_b32 v40, s0, 19
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 20
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_13
; %bb.12:                               ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v0, off, s33 offset:248
	s_mov_b32 s0, 0x100
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 19
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
.LBB109_13:                             ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 20
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s1, v40, 19
	s_mov_b32 s0, -1
	v_writelane_b32 v40, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 22
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_38
; %bb.14:                               ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v0, off, s33 offset:336
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	ds_load_b128 v[0:3], v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b32 v0, off, s33 offset:336
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	ds_load_b128 v[0:3], v0 offset:16
	s_waitcnt lgkmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:160
	scratch_load_b32 v0, off, s33 offset:172
	s_mov_b32 s0, 31
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s0, v0
	scratch_load_b32 v1, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, v1
	s_mov_b32 s0, 0
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 23
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_16
; %bb.15:                               ;   in Loop: Header=BB109_11 Depth=2
.LBB109_16:                             ; %Flow17
                                        ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 23
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v40, s0, 24
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB109_18
; %bb.17:                               ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:560 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s33 offset:340
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:344
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:560 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:348
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 25
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_19
.LBB109_18:                             ; %Flow18
                                        ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 24
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB109_39
.LBB109_19:                             ;   Parent Loop BB109_8 Depth=1
                                        ;     Parent Loop BB109_11 Depth=2
                                        ; =>    This Loop Header: Depth=3
                                        ;         Child Loop BB109_22 Depth 4
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v39, 26
	v_readlane_b32 s2, v39, 27
	v_readlane_b32 s0, v39, 28
	v_readlane_b32 s3, v39, 25
	v_writelane_b32 v39, s3, 29
	v_writelane_b32 v39, s1, 30
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v0, off, s33 offset:348
	s_mov_b32 s1, 0x401
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s3, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v39, s0, 31
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_or_b32 s2, s2, exec_lo
	v_writelane_b32 v40, s2, 0
	v_writelane_b32 v40, s2, 1
	v_writelane_b32 v40, s0, 2
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 3
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_21
; %bb.20:                               ;   in Loop: Header=BB109_19 Depth=3
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_waitcnt vmcnt(1)
	v_writelane_b32 v40, s8, 4
	v_writelane_b32 v40, s9, 5
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_writelane_b32 v40, s0, 6
	v_writelane_b32 v40, s1, 7
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:564 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v40, 4
	v_readlane_b32 s9, v40, 5
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	scratch_load_b128 v[3:6], off, s33 offset:144
	scratch_load_b128 v[12:15], off, s33 offset:160
	scratch_load_b64 v[1:2], off, s33 offset:24
	s_mov_b32 s0, 0
	scratch_load_b32 v9, off, s33 offset:348
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v9
	v_mov_b32_e32 v8, v10
	v_lshlrev_b64 v[16:17], s0, v[7:8]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v7, v16
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v17
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v8, v[0:1], off
	scratch_load_b64 v[1:2], off, s33 offset:32
	s_mov_b32 s0, 3
	v_lshlrev_b64 v[9:10], s0, v[9:10]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v7, v9
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v10
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b64 v[0:1], v[0:1], off
	scratch_load_b64 v[18:19], off, s33 offset:40
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v10, v16
	v_mov_b32_e32 v2, v19
	v_mov_b32_e32 v7, v17
	v_add_co_u32 v9, s0, v9, v10
	v_add_co_ci_u32_e64 v2, s0, v2, v7, s0
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v2
	global_load_b32 v11, v[9:10], off
	v_mov_b32_e32 v9, v0
	s_mov_b32 s0, 32
	v_lshrrev_b64 v[0:1], s0, v[0:1]
	v_mov_b32_e32 v10, v0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v12
	v_mov_b32_e32 v5, v13
	v_mov_b32_e32 v6, v14
	v_mov_b32_e32 v7, v15
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, longModuloByMul256@rel32@lo+4
	s_addc_u32 s1, s1, longModuloByMul256@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v40, 4
	v_readlane_b32 s9, v40, 5
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	s_mov_b32 s2, 0
	v_writelane_b32 v40, s2, 8
	v_cmp_eq_u32_e64 s0, v0, s2
	v_cndmask_b32_e64 v0, 0, 1, s0
	scratch_store_b32 off, v0, s33 offset:568 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s2
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:568 ; 4-byte Folded Reload
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s8, v40, 4
	v_readlane_b32 s9, v40, 5
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v40, 6
	v_readlane_b32 s1, v40, 7
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:564 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v1, v3
	s_waitcnt vmcnt(1)
	ds_store_b8 v1, v2 offset:8192
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v40, 8
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v6, s0
	v_mov_b32_e32 v5, s0
	v_mov_b32_e32 v4, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:352
	v_mov_b32_e32 v0, s0
	scratch_store_b32 off, v0, s33 offset:368
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 9
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_22
.LBB109_21:                             ; %Flow15
                                        ;   in Loop: Header=BB109_19 Depth=3
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 3
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s3, v39, 30
	v_readlane_b32 s4, v39, 29
	v_readlane_b32 s2, v40, 1
	v_readlane_b32 s1, v40, 2
	s_mov_b32 s0, s2
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s4
	s_and_not1_b32 s3, s3, exec_lo
	s_and_b32 s4, s1, exec_lo
	s_or_b32 s3, s3, s4
	v_writelane_b32 v40, s3, 10
	v_writelane_b32 v39, s3, 26
	v_writelane_b32 v39, s2, 27
	v_writelane_b32 v39, s1, 28
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 25
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 11
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB109_19
	s_branch .LBB109_72
.LBB109_22:                             ;   Parent Loop BB109_8 Depth=1
                                        ;     Parent Loop BB109_11 Depth=2
                                        ;       Parent Loop BB109_19 Depth=3
                                        ; =>      This Inner Loop Header: Depth=4
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 12
	v_readlane_b32 s1, v40, 9
	v_writelane_b32 v40, s1, 13
	scratch_load_b32 v0, off, s33 offset:368
	s_mov_b32 s1, 16
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 14
	v_writelane_b32 v40, s0, 15
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 16
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_24
; %bb.23:                               ;   in Loop: Header=BB109_22 Depth=4
	scratch_load_b32 v0, off, s33 offset:368
	s_mov_b32 s0, 4
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	ds_load_b128 v[0:3], v0 offset:8192
	scratch_load_b128 v[7:10], off, s33 offset:352
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v5, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v10
	v_or_b32_e64 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_or_b32_e64 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_or_b32_e64 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:352
	s_branch .LBB109_25
.LBB109_24:                             ; %Flow14
                                        ;   in Loop: Header=BB109_22 Depth=4
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 16
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 13
	v_readlane_b32 s1, v40, 15
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v40, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 9
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 17
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB109_22
	s_branch .LBB109_26
.LBB109_25:                             ;   in Loop: Header=BB109_22 Depth=4
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 14
	scratch_load_b32 v0, off, s33 offset:368
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:368
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 15
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_24
.LBB109_26:                             ;   in Loop: Header=BB109_19 Depth=3
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 17
	s_or_b32 exec_lo, exec_lo, s0
; %bb.27:                               ;   in Loop: Header=BB109_19 Depth=3
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b128 v[0:3], off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v7, v3
	v_mov_b32_e32 v4, v1
	v_or_b32_e64 v4, v4, v7
	v_or_b32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:352
	scratch_load_b128 v[2:5], off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v3
	v_mov_b32_e32 v0, v2
	v_or_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:352
	scratch_load_b32 v0, off, s33 offset:352
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, -1
	v_writelane_b32 v40, s0, 18
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 19
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_30
	s_branch .LBB109_29
.LBB109_28:                             ;   in Loop: Header=BB109_11 Depth=2
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:340
	s_branch .LBB109_32
.LBB109_29:                             ;   in Loop: Header=BB109_19 Depth=3
	s_branch .LBB109_31
.LBB109_30:                             ; %Flow16
                                        ;   in Loop: Header=BB109_19 Depth=3
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s3, v40, 19
	s_or_b32 exec_lo, exec_lo, s3
	v_readlane_b32 s1, v40, 0
	v_readlane_b32 s0, v39, 31
	v_readlane_b32 s2, v40, 18
	s_mov_b32 s3, 0
	s_and_not1_b32 s0, s0, exec_lo
	s_and_not1_b32 s1, s1, exec_lo
	s_and_b32 s2, s2, exec_lo
	s_or_b32 s1, s1, s2
	v_writelane_b32 v40, s1, 1
	v_writelane_b32 v40, s0, 2
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_21
.LBB109_31:                             ;   in Loop: Header=BB109_19 Depth=3
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v0, off, s33 offset:344
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:344
	scratch_load_b32 v0, off, s33 offset:348
	s_mov_b32 s0, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:348
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v40, s0, 18
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_30
.LBB109_32:                             ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 20
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:340
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 21
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_35
; %bb.33:                               ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 0
	scratch_load_b32 v2, off, s33 offset:248
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v4, 0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	s_waitcnt vmcnt(0)
	v_cmp_eq_u64_e64 s1, v[0:1], v[2:3]
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 22
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_36
; %bb.34:                               ;   in Loop: Header=BB109_11 Depth=2
	scratch_load_b128 v[0:3], off, s33 offset:144
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:208
	scratch_load_b128 v[0:3], off, s33 offset:160
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:224
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s0, 0xffffff00
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v0, s0
	scratch_load_b32 v1, off, s33 offset:336
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:240
	s_branch .LBB109_36
.LBB109_35:                             ; %Flow13
                                        ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 21
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB109_37
.LBB109_36:                             ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 22
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:248
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:248
	s_branch .LBB109_35
.LBB109_37:                             ;   in Loop: Header=BB109_11 Depth=2
	s_branch .LBB109_18
.LBB109_38:                             ; %Flow19
                                        ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v39, 22
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s1, v39, 17
	v_readlane_b32 s0, v39, 21
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s1
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 15
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 s1, s0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v40, s1, 23
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB109_11
	s_branch .LBB109_40
.LBB109_39:                             ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v0, off, s33 offset:336
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:336
	s_mov_b32 s0, 0
	s_xor_b32 s0, exec_lo, -1
	v_writelane_b32 v40, s0, 21
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:436 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_38
.LBB109_40:                             ;   in Loop: Header=BB109_8 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 23
	s_or_b32 exec_lo, exec_lo, s0
; %bb.41:                               ;   in Loop: Header=BB109_8 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z15get_global_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z15get_global_sizej@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s0, v40, 26
	scratch_store_b32 off, v0, s33 offset:572 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:572 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:244
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:244
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 27
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:432 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_10
.LBB109_42:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 16
	s_or_b32 exec_lo, exec_lo, s0
; %bb.43:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_waitcnt vmcnt(1)
	v_writelane_b32 v40, s8, 24
	v_writelane_b32 v40, s9, 25
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_writelane_b32 v40, s0, 26
	v_writelane_b32 v40, s1, 27
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:580 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v40, 24
	v_readlane_b32 s9, v40, 25
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	scratch_load_b128 v[3:6], off, s33 offset:208
	scratch_load_b128 v[10:13], off, s33 offset:224
	s_add_i32 s0, s33, 0x180
	v_mov_b32_e32 v8, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x190
	v_mov_b32_e32 v9, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v10
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v12
	v_mov_b32_e32 v7, v13
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, FermatTest256@rel32@lo+4
	s_addc_u32 s1, s1, FermatTest256@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v40, 24
	v_readlane_b32 s9, v40, 25
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	scratch_load_b32 v0, off, s33 offset:384
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:384
	scratch_load_b128 v[0:3], off, s33 offset:400
	scratch_load_b128 v[7:10], off, s33 offset:384
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v5, v3
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v10
	v_or_b32_e64 v4, v4, v5
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v5, v9
	v_or_b32_e64 v5, v5, v6
	v_mov_b32_e32 v11, v1
	v_mov_b32_e32 v6, v8
	v_or_b32_e64 v6, v6, v11
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v0, v7
	v_or_b32_e64 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:384
	scratch_load_b128 v[0:3], off, s33 offset:400
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v7, v3
	scratch_load_b128 v[0:3], off, s33 offset:384
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v0
	v_mov_b32_e32 v4, v1
	v_or_b32_e64 v4, v4, v7
	v_or_b32_e64 v5, v5, v6
	v_mov_b32_e32 v0, v5
	v_mov_b32_e32 v1, v4
	scratch_store_b128 off, v[0:3], s33 offset:384
	scratch_load_b128 v[2:5], off, s33 offset:384
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v3
	v_mov_b32_e32 v0, v2
	v_or_b32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:384
	scratch_load_b32 v1, off, s33 offset:384
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:576 ; 4-byte Folded Spill
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v1, v0
	v_cndmask_b32_e64 v1, 0, 1, s0
	scratch_store_b32 off, v1, s33 offset:372
	scratch_load_b32 v1, off, s33 offset:372
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:584 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_writelane_b32 v40, s0, 28
	v_writelane_b32 v40, s1, 29
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:584 ; 4-byte Folded Reload
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s8, v40, 24
	v_readlane_b32 s9, v40, 25
	v_readlane_b32 s0, v40, 26
	v_readlane_b32 s1, v40, 27
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:580 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v1, v3
	s_waitcnt vmcnt(1)
	ds_store_b8 v1, v2 offset:8192
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:576 ; 4-byte Folded Reload
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s8, v40, 24
	v_readlane_b32 s9, v40, 25
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s0, v40, 28
	v_readlane_b32 s1, v40, 29
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:420
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:576 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 2
	v_alignbit_b32 v1, v1, v2, s0
	scratch_store_b32 off, v1, s33 offset:424
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:428
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v40, s0, 30
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
.LBB109_44:                             ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 31
	v_readlane_b32 s1, v40, 30
                                        ; implicit-def: $vgpr40 : SGPR spill to VGPR lane
	v_writelane_b32 v40, s1, 0
	scratch_load_b32 v0, off, s33 offset:428
	s_mov_b32 s1, 64
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 1
	v_writelane_b32 v40, s0, 2
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 3
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_49
; %bb.45:                               ;   in Loop: Header=BB109_44 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v0, off, s33 offset:428
	scratch_load_b32 v1, off, s33 offset:424
	s_waitcnt vmcnt(0)
	v_cmp_ge_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 4
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_46
	s_branch .LBB109_48
.LBB109_46:                             ; %Flow11
                                        ;   in Loop: Header=BB109_44 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 4
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v40, 5
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:588 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v40, s0, 6
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB109_50
; %bb.47:                               ;   in Loop: Header=BB109_44 Depth=1
	scratch_load_b32 v0, off, s33 offset:428
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	ds_load_b32 v0, v0 offset:8192
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:588 ; 4-byte Folded Spill
	s_branch .LBB109_50
.LBB109_48:                             ;   in Loop: Header=BB109_44 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v40, s0, 5
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_46
.LBB109_49:                             ; %Flow12
                                        ;   in Loop: Header=BB109_44 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 3
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v40, 0
	v_readlane_b32 s1, v40, 2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	s_waitcnt vmcnt(0)
	v_writelane_b32 v39, s1, 31
	s_mov_b32 s1, s0
	v_writelane_b32 v39, s1, 30
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v39, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 s1, s0
	v_writelane_b32 v40, s1, 7
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB109_44
	s_branch .LBB109_52
.LBB109_50:                             ;   in Loop: Header=BB109_44 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 6
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v1, off, s33 offset:588 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:420
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:420
; %bb.51:                               ;   in Loop: Header=BB109_44 Depth=1
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 1
	scratch_load_b32 v0, off, s33 offset:428
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:428
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v40, s0, 2
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_49
.LBB109_52:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 7
	s_or_b32 exec_lo, exec_lo, s0
; %bb.53:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:420
	s_mov_b32 s2, 0xff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v2, s2
	v_bfe_u32 v1, v2, 8, 8
	v_add_nc_u32_e64 v0, v0, v1
	v_bfe_u32 v1, v2, 16, 8
	s_mov_b32 s2, 24
	v_lshrrev_b32_e64 v2, s2, v2
	v_add3_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:416
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0
	v_cmp_eq_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 8
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_54
	s_branch .LBB109_56
.LBB109_54:                             ; %Flow10
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 8
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v40, 9
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:592 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v40, s0, 10
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB109_57
; %bb.55:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	ds_load_u8 v0, v0 offset:8191
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:592 ; 4-byte Folded Spill
	s_branch .LBB109_57
.LBB109_56:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v40, s0, 9
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_54
.LBB109_57:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v40, 10
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:592 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:416
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 11
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_58
	s_branch .LBB109_60
.LBB109_58:                             ; %Flow9
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 11
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v40, 12
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:596 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v40, s0, 13
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB109_61
; %bb.59:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	ds_load_u8 v0, v0 offset:8190
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:596 ; 4-byte Folded Spill
	s_branch .LBB109_61
.LBB109_60:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v40, s0, 12
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_58
.LBB109_61:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v40, 13
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:596 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:416
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s2, s0
	v_and_b32_e64 v0, v0, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 14
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_62
	s_branch .LBB109_64
.LBB109_62:                             ; %Flow
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 14
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v40, 15
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:600 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v40, s0, 16
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB109_65
; %bb.63:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	ds_load_u8 v0, v0 offset:8189
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:600 ; 4-byte Folded Spill
	s_branch .LBB109_65
.LBB109_64:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v40, s0, 15
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_branch .LBB109_62
.LBB109_65:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 16
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v1, off, s33 offset:600 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:416
	scratch_load_b32 v0, off, s33 offset:372
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 17
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_67
; %bb.66:
	scratch_load_b128 v[2:5], off, s33 offset:208
	scratch_load_b64 v[10:11], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:416
	s_mov_b32 s2, 1
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s1, 4
	v_lshlrev_b64 v[8:9], s1, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b128 v[2:5], off, s33 offset:224
	scratch_load_b64 v[10:11], off, s33 offset:48
	scratch_load_b32 v0, off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s2, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s1, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s1, v0, v7
	v_add_co_ci_u32_e64 v6, s1, v1, v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off
	scratch_load_b32 v2, off, s33 offset:240
	scratch_load_b64 v[0:1], off, s33 offset:48
	scratch_load_b32 v3, off, s33 offset:416
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v5, s0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s0, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s0, v3, v4
	v_add_co_ci_u32_e64 v0, s0, v0, v1, s0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x2000
	v_add_co_u32 v0, s1, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off
.LBB109_67:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s2, v40, 17
	s_or_b32 exec_lo, exec_lo, s2
	v_readlane_b32 s14, v39, 0
	v_readlane_b32 s13, v39, 1
	v_readlane_b32 s12, v39, 2
	v_readlane_b32 s10, v39, 3
	v_readlane_b32 s11, v39, 4
	v_readlane_b32 s4, v39, 7
	v_readlane_b32 s5, v39, 8
	v_readlane_b32 s0, v39, 5
	v_readlane_b32 s1, v39, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:56
	scratch_load_b64 v[2:3], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v1, v2
	s_mov_b32 s2, 0x2000
	v_add_co_u32 v1, s3, s2, v1
	v_mov_b32_e32 v2, v3
	s_mov_b32 s2, 0
	v_add_co_ci_u32_e64 v3, s2, s2, v2, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
	global_store_b32 v[1:2], v0, off offset:1024
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0xff
	v_cmp_eq_u64_e64 s1, v[0:1], s[0:1]
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v40, s0, 18
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:444 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_69
; %bb.68:
	scratch_load_b32 v2, off, s33 offset:416
	scratch_load_b64 v[3:4], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x2000
	v_add_co_u32 v0, s1, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:1028
.LBB109_69:
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v39, off, s33 offset:444 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:432 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(1)
	v_readlane_b32 s2, v39, 18
	s_or_b32 exec_lo, exec_lo, s2
	s_waitcnt vmcnt(0)
	v_readlane_b32 s14, v40, 0
	v_readlane_b32 s13, v40, 1
	v_readlane_b32 s12, v40, 2
	v_readlane_b32 s10, v40, 3
	v_readlane_b32 s11, v40, 4
	v_readlane_b32 s4, v40, 7
	v_readlane_b32 s5, v40, 8
	v_readlane_b32 s0, v40, 5
	v_readlane_b32 s1, v40, 6
	scratch_load_b32 v31, off, s33 offset:456 ; 4-byte Folded Reload
	s_mov_b64 s[6:7], 40
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	s_branch .LBB109_6
.LBB109_70:
	scratch_load_b32 v2, off, s33 offset:56
	scratch_load_b64 v[3:4], off, s33 offset:48
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x2000
	v_add_co_u32 v0, s1, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:1024
	s_branch .LBB109_1
.LBB109_71:
	s_endpgm
.LBB109_72:                             ; %loop.exit.guard
                                        ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 11
	s_or_b32 exec_lo, exec_lo, s0
; %bb.73:                               ; %loop.exit.guard
                                        ;   in Loop: Header=BB109_11 Depth=2
	s_or_saveexec_b32 s24, -1
	scratch_load_b32 v40, off, s33 offset:440 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s24
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v40, 10
	s_mov_b32 s1, -1
	s_xor_b32 s0, s0, s1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v40, s1, 20
	s_or_saveexec_b32 s24, -1
	scratch_store_b32 off, v40, s33 offset:440 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s24
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB109_32
	s_branch .LBB109_28
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel searchNonce
		.amdhsa_group_segment_fixed_size 8448
		.amdhsa_private_segment_fixed_size 3200
		.amdhsa_kernarg_size 296
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 41
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end109:
	.size	searchNonce, .Lfunc_end109-searchNonce
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 15484
; NumSgprs: 36
; NumVgprs: 41
; ScratchSize: 3200
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 8448 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 5
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 41
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	sieve                   ; -- Begin function sieve
	.globl	sieve
	.p2align	8
	.type	sieve,@function
sieve:                                  ; @sieve
; %bb.0:
	s_mov_b32 s32, 0xe0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr37 : SGPR spill to VGPR lane
	v_writelane_b32 v37, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v37, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v37, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v37, s10, 3
	v_writelane_b32 v37, s11, 4
	v_writelane_b32 v37, s2, 5
	v_writelane_b32 v37, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v37, 5
	v_readlane_b32 s1, v37, 6
	v_writelane_b32 v37, s4, 7
	v_writelane_b32 v37, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:184 ; 4-byte Folded Spill
	s_load_b64 s[24:25], s[0:1], 0x0
	s_load_b64 s[22:23], s[0:1], 0x8
	s_load_b64 s[20:21], s[0:1], 0x10
	s_load_b64 s[18:19], s[0:1], 0x18
	s_load_b64 s[16:17], s[0:1], 0x20
	s_load_b64 s[8:9], s[0:1], 0x28
	s_load_b64 s[6:7], s[0:1], 0x30
	s_load_b64 s[2:3], s[0:1], 0x38
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s24
	v_mov_b32_e32 v1, s25
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s22
	v_mov_b32_e32 v1, s23
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s20
	v_mov_b32_e32 v1, s21
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s18
	v_mov_b32_e32 v1, s19
	scratch_store_b64 off, v[0:1], s33 offset:32
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:40
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:48
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:56
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:64
	scratch_load_b64 v[0:1], off, s33 offset:40
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:216 ; 8-byte Folded Spill
	s_mov_b64 s[6:7], 64
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v37, s8, 9
	v_writelane_b32 v37, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_group_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_group_idj@rel32@hi+12
	v_writelane_b32 v37, s0, 11
	v_writelane_b32 v37, s1, 12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:212 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:216 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s1, 0x2410
	v_mad_u64_u32 v[5:6], s0, v0, s1, 0
	v_mov_b32_e32 v7, v6
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s0
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v0
	s_mov_b32 s0, 32
	v_writelane_b32 v37, s0, 13
	v_lshrrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s1, v0, s1, v[7:8]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	s_mov_b32 s1, 0
	v_writelane_b32 v37, s1, 14
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[1:2], off, s33 offset:72
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	s_mov_b32 s0, 0x2000
	v_add_co_u32 v0, s2, s0, v0
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v2, s0, s0, v1, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:1024
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:80
	scratch_load_b64 v[1:2], off, s33 offset:72
	scratch_load_b32 v0, off, s33 offset:80
	s_mov_b32 s2, 1
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s2, v0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v5, s1
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[7:8], s0, v[3:4]
	v_mov_b32_e32 v3, v1
	v_mov_b32_e32 v6, v7
	v_mov_b32_e32 v4, v2
	v_mov_b32_e32 v5, v8
	v_add_co_u32 v3, s3, v3, v6
	v_add_co_ci_u32_e64 v5, s3, v4, v5, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	global_load_b128 v[3:6], v[3:4], off
	v_or_b32_e64 v7, v0, s2
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr7 killed $vgpr7 def $vgpr7_vgpr8 killed $exec
	v_mov_b32_e32 v8, v0
	v_lshlrev_b64 v[8:9], s0, v[7:8]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[7:10], v[0:1], off
	scratch_load_b64 v[0:1], off, s33 offset:32
	s_waitcnt vmcnt(0)
	global_load_b128 v[11:14], v[0:1], off
	global_load_b128 v[20:23], v[0:1], off offset:16
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v20
	v_mov_b32_e32 v13, v21
	v_mov_b32_e32 v14, v22
	v_mov_b32_e32 v15, v23
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul256schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul256schoolBook_v3@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:184 ; 4-byte Folded Reload
	scratch_load_b32 v18, off, s33 offset:212 ; 4-byte Folded Reload
	v_readlane_b32 s0, v37, 11
	v_readlane_b32 s1, v37, 12
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s14, v37, 0
	scratch_load_b128 v[0:3], off, s33 offset:96
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:168 ; 16-byte Folded Spill
	scratch_load_b128 v[7:10], off, s33 offset:112
	scratch_load_b128 v[32:35], off, s33 offset:128
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:204 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s0, v37, 11
	v_readlane_b32 s1, v37, 12
	v_readlane_b32 s2, v37, 14
	v_readlane_b32 s3, v37, 13
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v4, v1
	scratch_load_b64 v[0:1], off, s33 offset:204 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v6, v2
	s_mov_b32 s6, 0x1400000
	v_writelane_b32 v37, s6, 15
	v_mad_u64_u32 v[4:5], s7, v6, s6, 0
	v_mov_b32_e32 v11, v5
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v6, s7
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v6
	v_lshrrev_b64 v[2:3], s3, v[2:3]
	v_mov_b32_e32 v6, v2
	v_mad_u64_u32 v[2:3], s6, v6, s6, v[11:12]
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v6, s6
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v6
	v_lshlrev_b64 v[2:3], s3, v[2:3]
	v_mov_b32_e32 v11, v3
	v_mov_b32_e32 v5, v4
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v4, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v4
	v_mov_b32_e32 v4, v6
	v_or_b32_e64 v4, v4, v11
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v2, v5
	v_or_b32_e64 v2, v2, v3
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	s_mov_b32 s2, 3
	v_writelane_b32 v37, s2, 16
	v_lshrrev_b64 v[4:5], s2, v[2:3]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v5
	v_add_co_u32 v13, s2, v2, v3
	v_add_co_ci_u32_e64 v0, s2, v0, v1, s2
                                        ; kill: def $vgpr13 killed $vgpr13 def $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v0
	scratch_load_b64 v[0:1], off, s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:196 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s7, v37, 15
	v_readlane_b32 s6, v37, 13
	v_readlane_b32 s0, v37, 11
	v_readlane_b32 s1, v37, 12
	v_readlane_b32 s3, v37, 14
	v_readlane_b32 s2, v37, 16
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v4, v1
	scratch_load_b64 v[0:1], off, s33 offset:196 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v6, v2
	v_mad_u64_u32 v[4:5], s15, v6, s7, 0
	v_mov_b32_e32 v11, v5
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr16
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v6, s15
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v6
	v_lshrrev_b64 v[2:3], s6, v[2:3]
	v_mov_b32_e32 v6, v2
	v_mad_u64_u32 v[2:3], s7, v6, s7, v[11:12]
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3 killed $exec
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v6, s7
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v6
	v_lshlrev_b64 v[2:3], s6, v[2:3]
	v_mov_b32_e32 v11, v3
	v_mov_b32_e32 v5, v4
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v4, s3
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v4
	v_mov_b32_e32 v4, v6
	v_or_b32_e64 v4, v4, v11
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v2, v5
	v_or_b32_e64 v2, v2, v3
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	v_lshrrev_b64 v[4:5], s2, v[2:3]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v5
	v_add_co_u32 v15, s2, v2, v3
	v_add_co_ci_u32_e64 v0, s2, v0, v1, s2
                                        ; kill: def $vgpr15 killed $vgpr15 def $vgpr15_vgpr16 killed $exec
	v_mov_b32_e32 v16, v0
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:188 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:184 ; 4-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s3, v37, 15
	v_readlane_b32 s1, v37, 14
	v_readlane_b32 s0, v37, 16
	v_readlane_b32 s2, v37, 13
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:188 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[5:6], s6, v0, s3, 0
	v_mov_b32_e32 v11, v6
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v0
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s3, v0, s3, v[11:12]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v11, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v11
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v3, v3, v4
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshrrev_b64 v[4:5], s0, v[3:4]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:160 ; 8-byte Folded Spill
	scratch_load_b64 v[19:20], off, s33 offset:48
	scratch_load_b64 v[29:30], off, s33 offset:56
	scratch_load_b64 v[27:28], off, s33 offset:64
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z14get_local_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z14get_local_sizej@rel32@hi+12
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v18
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:184 ; 4-byte Folded Reload
	scratch_load_b128 v[3:6], off, s33 offset:168 ; 16-byte Folded Reload
	v_readlane_b32 s14, v37, 0
	v_readlane_b32 s13, v37, 1
	v_readlane_b32 s12, v37, 2
	v_readlane_b32 s0, v37, 13
	v_readlane_b32 s4, v37, 7
	v_readlane_b32 s5, v37, 8
	v_readlane_b32 s8, v37, 9
	v_readlane_b32 s9, v37, 10
	v_readlane_b32 s10, v37, 3
	v_readlane_b32 s11, v37, 4
	v_mov_b32_e32 v11, v0
	v_mov_b32_e32 v2, v1
	scratch_load_b64 v[0:1], off, s33 offset:160 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr11 killed $vgpr11 def $vgpr11_vgpr12 killed $exec
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v2, v11
	s_mov_b32 s1, 0xffffff70
	v_add_nc_u32_e64 v26, v2, s1
	v_mov_b32_e32 v12, v13
	v_lshrrev_b64 v[13:14], s0, v[13:14]
                                        ; kill: def $vgpr13 killed $vgpr13 killed $vgpr13_vgpr14 killed $exec
	v_mov_b32_e32 v14, v15
	v_lshrrev_b64 v[15:16], s0, v[15:16]
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v16, v0
	v_lshrrev_b64 v[0:1], s0, v[0:1]
	v_mov_b32_e32 v17, v0
	v_lshrrev_b64 v[0:1], s0, v[19:20]
	v_mov_b32_e32 v21, v0
	v_lshrrev_b64 v[0:1], s0, v[29:30]
	v_mov_b32_e32 v23, v0
	v_lshrrev_b64 v[0:1], s0, v[27:28]
	v_mov_b32_e32 v25, v0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v32
	v_mov_b32_e32 v9, v33
	v_mov_b32_e32 v10, v34
	v_mov_b32_e32 v11, v35
	v_mov_b32_e32 v20, v19
	v_mov_b32_e32 v22, v29
	v_mov_b32_e32 v24, v27
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, weave@rel32@lo+4
	s_addc_u32 s1, s1, weave@rel32@hi+12
	v_mov_b32_e32 v19, 0x2000
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel sieve
		.amdhsa_group_segment_fixed_size 16384
		.amdhsa_private_segment_fixed_size 2364
		.amdhsa_kernarg_size 320
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 38
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end110:
	.size	sieve, .Lfunc_end110-sieve
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2644
; NumSgprs: 36
; NumVgprs: 38
; ScratchSize: 2364
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 16384 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 4
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 38
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.hidden	mul384_1                        ; -- Begin function mul384_1
	.globl	mul384_1
	.p2align	2
	.type	mul384_1,@function
mul384_1:                               ; @mul384_1
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s20, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v20, s33 offset:180 ; 4-byte Folded Spill
	scratch_store_b32 off, v21, s33 offset:184 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xc0
	v_writelane_b32 v20, s30, 0
	v_writelane_b32 v20, s31, 1
	scratch_store_b32 off, v31, s33 offset:160 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr21 : SGPR spill to VGPR lane
	v_writelane_b32 v21, s6, 0
	v_writelane_b32 v21, s7, 1
	scratch_store_b32 off, v11, s33 offset:168 ; 4-byte Folded Spill
	scratch_store_b32 off, v10, s33 offset:172 ; 4-byte Folded Spill
	scratch_store_b32 off, v9, s33 offset:176 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:164 ; 4-byte Folded Spill
	v_mov_b32_e32 v9, v7
	scratch_load_b32 v7, off, s33 offset:176 ; 4-byte Folded Reload
	v_mov_b32_e32 v10, v6
	scratch_load_b32 v6, off, s33 offset:172 ; 4-byte Folded Reload
	v_mov_b32_e32 v11, v5
	scratch_load_b32 v5, off, s33 offset:168 ; 4-byte Folded Reload
	v_mov_b32_e32 v16, v3
	v_mov_b32_e32 v17, v2
	v_mov_b32_e32 v18, v1
	v_mov_b32_e32 v8, v0
	scratch_load_b32 v0, off, s33 offset:164 ; 4-byte Folded Reload
	v_writelane_b32 v21, s15, 2
	v_writelane_b32 v21, s14, 3
	v_writelane_b32 v21, s13, 4
	v_writelane_b32 v21, s12, 5
	v_writelane_b32 v21, s10, 6
	v_writelane_b32 v21, s11, 7
	v_writelane_b32 v21, s8, 8
	v_writelane_b32 v21, s9, 9
	v_writelane_b32 v21, s4, 10
	v_writelane_b32 v21, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(3)
	v_mov_b32_e32 v1, v7
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v2, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5_vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v5, v11
	v_mov_b32_e32 v6, v10
	v_mov_b32_e32 v7, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9_vgpr10_vgpr11 killed $exec
	v_mov_b32_e32 v9, v18
	v_mov_b32_e32 v10, v17
	v_mov_b32_e32 v11, v16
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
                                        ; implicit-def: $sgpr0_sgpr1_sgpr2_sgpr3
	scratch_store_b128 off, v[8:11], s33
	scratch_store_b128 off, v[4:7], s33 offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:32
	scratch_store_b32 off, v12, s33 offset:48
	scratch_store_b32 off, v13, s33 offset:52
	scratch_store_b32 off, v14, s33 offset:56
	scratch_store_b32 off, v15, s33 offset:60
	scratch_load_b128 v[7:10], off, s33
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_load_b32 v4, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:16
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_load_b32 v4, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[7:10], off, s33 offset:32
	scratch_load_b32 v1, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v10
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v4, v0, v1
	v_mov_b32_e32 v0, v9
	v_mul_lo_u32 v5, v0, v1
	v_mov_b32_e32 v0, v8
	v_mul_lo_u32 v6, v0, v1
	v_mov_b32_e32 v0, v7
	v_mul_lo_u32 v0, v0, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_load_b32 v4, off, s33 offset:60
	s_waitcnt vmcnt(0)
	scratch_store_b128 v4, v[0:3], off
	scratch_load_b128 v[3:6], off, s33
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z6mul_hiDv4_jS_@rel32@lo+4
	s_addc_u32 s1, s1, _Z6mul_hiDv4_jS_@rel32@hi+12
	v_writelane_b32 v21, s0, 12
	v_writelane_b32 v21, s1, 13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s0, v21, 12
	v_readlane_b32 s1, v21, 13
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s15, v21, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:64
	scratch_load_b128 v[3:6], off, s33 offset:16
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s0, v21, 12
	v_readlane_b32 s1, v21, 13
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s15, v21, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:80
	scratch_load_b128 v[3:6], off, s33 offset:32
	scratch_load_b32 v7, off, s33 offset:48
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v7
	v_mov_b32_e32 v6, v7
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s4, v21, 10
	v_readlane_b32 s5, v21, 11
	v_readlane_b32 s6, v21, 0
	v_readlane_b32 s7, v21, 1
	v_readlane_b32 s8, v21, 8
	v_readlane_b32 s9, v21, 9
	v_readlane_b32 s10, v21, 6
	v_readlane_b32 s11, v21, 7
	v_readlane_b32 s12, v21, 5
	v_readlane_b32 s13, v21, 4
	v_readlane_b32 s14, v21, 3
	v_readlane_b32 s15, v21, 2
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v5, v2
	v_mov_b32_e32 v4, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1_vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v4
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:52
	scratch_load_b32 v1, off, s33 offset:56
	scratch_load_b32 v2, off, s33 offset:60
	scratch_load_b128 v[3:6], off, s33 offset:64
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v5
	v_mov_b32_e32 v8, v4
	v_mov_b32_e32 v9, v3
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v3, 0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4_vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v4, v9
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v7
	scratch_store_b128 off, v[3:6], s33 offset:112
	scratch_load_b128 v[6:9], off, s33 offset:112
	scratch_load_b128 v[10:13], off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v12
	v_mov_b32_e32 v4, v11
	v_mov_b32_e32 v5, v10
	scratch_load_b32 v10, off, s33 offset:76
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr10 killed $vgpr10 def $vgpr10_vgpr11_vgpr12_vgpr13 killed $exec
	v_mov_b32_e32 v11, v5
	v_mov_b32_e32 v12, v4
	v_mov_b32_e32 v13, v3
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[10:13], s33 offset:128
	scratch_load_b128 v[10:13], off, s33 offset:128
	scratch_load_b128 v[14:17], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v3, v16
	v_mov_b32_e32 v4, v15
	v_mov_b32_e32 v5, v14
	scratch_load_b32 v14, off, s33 offset:92
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15_vgpr16_vgpr17 killed $exec
	v_mov_b32_e32 v15, v5
	v_mov_b32_e32 v16, v4
	v_mov_b32_e32 v17, v3
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[14:17], s33 offset:144
	scratch_load_b128 v[14:17], off, s33 offset:144
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v11, v14
	v_mov_b32_e32 v12, v15
	v_mov_b32_e32 v13, v16
	v_mov_b32_e32 v14, v17
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, add384@rel32@lo+4
	s_addc_u32 s1, s1, add384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_readlane_b32 s30, v20, 0
	v_readlane_b32 s31, v20, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v20, off, s33 offset:180 ; 4-byte Folded Reload
	scratch_load_b32 v21, off, s33 offset:184 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffff40
	s_mov_b32 s33, s20
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end111:
	.size	mul384_1, .Lfunc_end111-mul384_1
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 1668
; NumSgprs: 34
; NumVgprs: 32
; ScratchSize: 416
; MemoryBound: 0
	.text
	.hidden	extractMultipliers2             ; -- Begin function extractMultipliers2
	.globl	extractMultipliers2
	.p2align	2
	.type	extractMultipliers2,@function
extractMultipliers2:                    ; @extractMultipliers2
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s23, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v28, s33 offset:484 ; 4-byte Folded Spill
	scratch_store_b32 off, v29, s33 offset:488 ; 4-byte Folded Spill
	scratch_store_b32 off, v30, s33 offset:492 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x200
	v_writelane_b32 v28, s30, 0
	v_writelane_b32 v28, s31, 1
	scratch_store_b32 off, v31, s33 offset:436 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr30 : SGPR spill to VGPR lane
	v_writelane_b32 v30, s6, 0
	v_writelane_b32 v30, s7, 1
	scratch_store_b32 off, v9, s33 offset:448 ; 4-byte Folded Spill
	scratch_store_b32 off, v8, s33 offset:440 ; 4-byte Folded Spill
	scratch_store_b32 off, v4, s33 offset:444 ; 4-byte Folded Spill
	v_mov_b32_e32 v9, v3
	scratch_load_b32 v3, off, s33 offset:448 ; 4-byte Folded Reload
	v_mov_b32_e32 v4, v2
	scratch_load_b32 v2, off, s33 offset:444 ; 4-byte Folded Reload
	v_mov_b32_e32 v12, v1
	v_mov_b32_e32 v8, v0
	scratch_load_b32 v0, off, s33 offset:440 ; 4-byte Folded Reload
	v_writelane_b32 v30, s15, 2
	v_writelane_b32 v30, s14, 3
	v_writelane_b32 v30, s13, 4
	v_writelane_b32 v30, s12, 5
	v_writelane_b32 v30, s10, 6
	v_writelane_b32 v30, s11, 7
	v_writelane_b32 v30, s8, 8
	v_writelane_b32 v30, s9, 9
	v_writelane_b32 v30, s4, 10
	v_writelane_b32 v30, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v9
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr8 killed $vgpr8 def $vgpr8_vgpr9 killed $exec
	v_mov_b32_e32 v9, v12
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b64 off, v[8:9], s33
	scratch_store_b64 off, v[4:5], s33 offset:8
	s_waitcnt vmcnt(1)
	scratch_store_b64 off, v[2:3], s33 offset:16
	scratch_store_b32 off, v6, s33 offset:24
	scratch_store_b32 off, v7, s33 offset:28
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:32
	scratch_store_b32 off, v10, s33 offset:40
	scratch_store_b32 off, v11, s33 offset:44
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:432 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s33 offset:176
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z14get_local_sizej@rel32@lo+4
	s_addc_u32 s1, s1, _Z14get_local_sizej@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	v_readlane_b32 s15, v30, 2
	v_readlane_b32 s14, v30, 3
	v_readlane_b32 s13, v30, 4
	v_readlane_b32 s12, v30, 5
	v_readlane_b32 s4, v30, 10
	v_readlane_b32 s5, v30, 11
	v_readlane_b32 s6, v30, 0
	v_readlane_b32 s7, v30, 1
	v_readlane_b32 s8, v30, 8
	v_readlane_b32 s9, v30, 9
	v_readlane_b32 s10, v30, 6
	v_readlane_b32 s11, v30, 7
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:432 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 3
	v_alignbit_b32 v1, v1, v2, s0
	scratch_store_b32 off, v1, s33 offset:180
	scratch_load_b32 v1, off, s33 offset:180
	s_waitcnt vmcnt(0)
	v_sub_nc_u32_e64 v1, v1, 23
	scratch_store_b32 off, v1, s33 offset:184
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:432 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:428 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:428 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:188
	v_mov_b32_e32 v1, 0x7000
	scratch_store_b32 off, v1, s33 offset:192
	scratch_store_b32 off, v0, s33 offset:196
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v30, s0, 12
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
.LBB112_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB112_5 Depth 2
                                        ;       Child Loop BB112_10 Depth 3
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 13
	v_readlane_b32 s1, v30, 12
	v_writelane_b32 v30, s1, 14
	scratch_load_b32 v0, off, s33 offset:196
	scratch_load_b32 v1, off, s33 offset:184
	s_waitcnt vmcnt(0)
	v_cmp_le_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 15
	v_writelane_b32 v30, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v30, s0, 17
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_b32 s0, s0, s1
                                        ; implicit-def: $vgpr30 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_4
; %bb.2:                                ;   in Loop: Header=BB112_1 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b64 v[1:2], off, s33 offset:16
	scratch_load_b32 v0, off, s33 offset:196
	scratch_load_b32 v3, off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_mul_lo_u32 v3, v0, v3
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 2
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:200
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v30, s0, 18
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_5
.LBB112_3:                              ; %Flow5
                                        ;   in Loop: Header=BB112_5 Depth=2
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v30, 19
	s_or_b32 exec_lo, exec_lo, s1
	v_readlane_b32 s0, v30, 20
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 21
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_18
.LBB112_4:                              ; %Flow7
                                        ;   in Loop: Header=BB112_1 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v30, 14
	v_readlane_b32 s1, v30, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v30, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v30, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v30, s1, 22
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB112_1
	s_branch .LBB112_22
.LBB112_5:                              ;   Parent Loop BB112_1 Depth=1
                                        ; =>  This Loop Header: Depth=2
                                        ;       Child Loop BB112_10 Depth 3
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 23
	v_readlane_b32 s1, v30, 18
	v_writelane_b32 v30, s1, 24
	scratch_load_b32 v0, off, s33 offset:188
	scratch_load_b32 v1, off, s33 offset:192
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 20
	v_writelane_b32 v30, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v30, s0, 25
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_18
; %bb.6:                                ;   in Loop: Header=BB112_5 Depth=2
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b64 v[1:2], off, s33 offset:200
	s_mov_b32 s0, 0
	scratch_load_b32 v3, off, s33 offset:188
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, 0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:208
	scratch_load_b32 v0, off, s33 offset:208
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v30, s1, 26
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_9
	s_branch .LBB112_8
.LBB112_7:                              ;   in Loop: Header=BB112_5 Depth=2
	scratch_load_b32 v0, off, s33 offset:188
	s_mov_b32 s0, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:188
	s_branch .LBB112_3
.LBB112_8:                              ;   in Loop: Header=BB112_5 Depth=2
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:212
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v30, s0, 27
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_10
.LBB112_9:                              ; %Flow4
                                        ;   in Loop: Header=BB112_5 Depth=2
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 26
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v30, s0, 19
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB112_3
	s_branch .LBB112_7
.LBB112_10:                             ;   Parent Loop BB112_1 Depth=1
                                        ;     Parent Loop BB112_5 Depth=2
                                        ; =>    This Inner Loop Header: Depth=3
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v29, 28
	v_readlane_b32 s1, v29, 27
	v_writelane_b32 v29, s1, 29
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b32 v0, off, s33 offset:212
	scratch_load_b32 v1, off, s33 offset:180
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v29, s0, 30
	v_writelane_b32 v29, s0, 31
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v29, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v30, s0, 0
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_13
; %bb.11:                               ;   in Loop: Header=BB112_10 Depth=3
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b32 v0, off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, 1, v0
	v_cmp_eq_u32_e64 s1, v0, 1
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v30, s0, 1
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_14
; %bb.12:                               ;   in Loop: Header=BB112_10 Depth=3
	scratch_load_b32 v1, off, s33 offset:188
	s_mov_b32 s0, 5
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v1
	s_mov_b32 s0, 0xffff0000
	v_and_b32_e64 v0, v0, s0
	scratch_load_b32 v2, off, s33 offset:212
	s_mov_b32 s0, 3
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v3, s0, v2
	s_mov_b32 s0, 2
	v_lshl_add_u32 v1, v1, s0, v3
	s_mov_b32 s1, 0x1fff
	v_and_b32_e64 v1, v1, s1
	s_mov_b32 s1, 7
	v_and_b32_e64 v2, v2, s1
	s_mov_b32 s1, 13
	v_lshlrev_b32_e64 v2, s1, v2
	v_or3_b32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:216
	scratch_load_b32 v1, off, s33 offset:216
	scratch_load_b32 v0, off, s33 offset:196
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:176
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v2, v1, s1
	scratch_store_b32 off, v2, s33 offset:176
	s_add_i32 s1, s33, 48
	v_mov_b32_e32 v2, s1
	v_lshl_add_u32 v1, v1, s0, v2
	scratch_store_b32 v1, v0, off
	s_branch .LBB112_14
.LBB112_13:                             ; %Flow3
                                        ;   in Loop: Header=BB112_10 Depth=3
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 0
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v29, 29
	v_readlane_b32 s1, v29, 31
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v29, s1, 28
	s_mov_b32 s1, s0
	v_writelane_b32 v29, s1, 27
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v29, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_mov_b32 s1, s0
	v_writelane_b32 v30, s1, 2
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB112_10
	s_branch .LBB112_16
.LBB112_14:                             ;   in Loop: Header=BB112_10 Depth=3
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 1
	s_or_b32 exec_lo, exec_lo, s0
; %bb.15:                               ;   in Loop: Header=BB112_10 Depth=3
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 30
	scratch_load_b32 v0, off, s33 offset:212
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:212
	scratch_load_b32 v0, off, s33 offset:208
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s1, v0
	scratch_store_b32 off, v0, s33 offset:208
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 31
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_13
.LBB112_16:                             ;   in Loop: Header=BB112_5 Depth=2
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 2
	s_or_b32 exec_lo, exec_lo, s0
; %bb.17:                               ;   in Loop: Header=BB112_5 Depth=2
	scratch_load_b32 v0, off, s33 offset:188
	s_mov_b32 s0, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:188
	s_branch .LBB112_9
.LBB112_18:                             ; %Flow6
                                        ;   in Loop: Header=BB112_5 Depth=2
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v29, 25
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v29, 24
	v_readlane_b32 s1, v29, 21
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v29, s1, 23
	s_mov_b32 s1, s0
	v_writelane_b32 v29, s1, 18
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v29, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_mov_b32 s1, s0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v30, s1, 3
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB112_5
; %bb.19:                               ;   in Loop: Header=BB112_1 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 3
	s_or_b32 exec_lo, exec_lo, s0
; %bb.20:                               ;   in Loop: Header=BB112_1 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v30, 2
	v_readlane_b32 s14, v30, 3
	v_readlane_b32 s13, v30, 4
	v_readlane_b32 s12, v30, 5
	v_readlane_b32 s10, v30, 6
	v_readlane_b32 s11, v30, 7
	v_readlane_b32 s8, v30, 8
	v_readlane_b32 s9, v30, 9
	v_readlane_b32 s6, v30, 0
	v_readlane_b32 s7, v30, 1
	v_readlane_b32 s4, v30, 10
	v_readlane_b32 s5, v30, 11
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v0, off, s33 offset:192
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v1, s0, v0
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:188
; %bb.21:                               ;   in Loop: Header=BB112_1 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 15
	scratch_load_b32 v0, off, s33 offset:196
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:196
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 16
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:420 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_4
.LBB112_22:
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 22
	s_or_b32 exec_lo, exec_lo, s0
; %bb.23:
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v29, 2
	v_readlane_b32 s14, v29, 3
	v_readlane_b32 s13, v29, 4
	v_readlane_b32 s12, v29, 5
	v_readlane_b32 s10, v29, 6
	v_readlane_b32 s11, v29, 7
	v_readlane_b32 s8, v29, 8
	v_readlane_b32 s9, v29, 9
	v_readlane_b32 s6, v29, 0
	v_readlane_b32 s7, v29, 1
	v_readlane_b32 s4, v29, 10
	v_readlane_b32 s5, v29, 11
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:176
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:456 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:460 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:452 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:460 ; 4-byte Folded Reload
	v_readlane_b32 s15, v29, 2
	v_readlane_b32 s14, v29, 3
	v_readlane_b32 s13, v29, 4
	v_readlane_b32 s12, v29, 5
	v_readlane_b32 s10, v29, 6
	v_readlane_b32 s11, v29, 7
	v_readlane_b32 s8, v29, 8
	v_readlane_b32 s9, v29, 9
	v_readlane_b32 s6, v29, 0
	v_readlane_b32 s7, v29, 1
	v_readlane_b32 s4, v29, 10
	v_readlane_b32 s5, v29, 11
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:456 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(1)
	v_lshl_add_u32 v0, v0, s0, v2
	s_waitcnt vmcnt(0)
	ds_store_b32 v0, v1
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:452 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:220
	scratch_store_b32 off, v0, s33 offset:224
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v30, s0, 4
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
.LBB112_24:                             ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 5
	v_readlane_b32 s1, v30, 4
	v_writelane_b32 v30, s1, 6
	scratch_load_b32 v0, off, s33 offset:224
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 7
	v_writelane_b32 v30, s0, 8
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v30, s0, 9
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_29
; %bb.25:                               ;   in Loop: Header=BB112_24 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v29, 2
	v_readlane_b32 s14, v29, 3
	v_readlane_b32 s13, v29, 4
	v_readlane_b32 s12, v29, 5
	v_readlane_b32 s10, v29, 6
	v_readlane_b32 s11, v29, 7
	v_readlane_b32 s8, v29, 8
	v_readlane_b32 s9, v29, 9
	v_readlane_b32 s6, v29, 0
	v_readlane_b32 s7, v29, 1
	v_readlane_b32 s4, v29, 10
	v_readlane_b32 s5, v29, 11
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	s_mov_b32 s0, 0
	scratch_load_b32 v0, off, s33 offset:224
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, 0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:464 ; 8-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v4, v1
	scratch_load_b64 v[0:1], off, s33 offset:464 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
	s_waitcnt vmcnt(0)
	v_cmp_ge_u64_e64 s0, v[0:1], v[2:3]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v30, s1, 10
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_26
	s_branch .LBB112_28
.LBB112_26:                             ; %Flow1
                                        ;   in Loop: Header=BB112_24 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 10
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v30, 11
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:472 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v30, s0, 12
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB112_30
; %bb.27:                               ;   in Loop: Header=BB112_24 Depth=1
	scratch_load_b32 v1, off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:224
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	ds_load_b32 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:472 ; 4-byte Folded Spill
	s_branch .LBB112_30
.LBB112_28:                             ;   in Loop: Header=BB112_24 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v30, s0, 11
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_26
.LBB112_29:                             ; %Flow2
                                        ;   in Loop: Header=BB112_24 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 9
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v30, 6
	v_readlane_b32 s1, v30, 8
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v30, s1, 5
	s_mov_b32 s1, s0
	v_writelane_b32 v30, s1, 4
	s_mov_b32 s1, s0
	v_writelane_b32 v30, s1, 13
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB112_24
	s_branch .LBB112_32
.LBB112_30:                             ;   in Loop: Header=BB112_24 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 12
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v1, off, s33 offset:472 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:220
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:220
; %bb.31:                               ;   in Loop: Header=BB112_24 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 7
	scratch_load_b32 v0, off, s33 offset:224
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:224
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 8
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_29
.LBB112_32:
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 13
	s_or_b32 exec_lo, exec_lo, s0
; %bb.33:
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v29, 2
	v_readlane_b32 s14, v29, 3
	v_readlane_b32 s13, v29, 4
	v_readlane_b32 s12, v29, 5
	v_readlane_b32 s10, v29, 6
	v_readlane_b32 s11, v29, 7
	v_readlane_b32 s8, v29, 8
	v_readlane_b32 s9, v29, 9
	v_readlane_b32 s6, v29, 0
	v_readlane_b32 s7, v29, 1
	v_readlane_b32 s4, v29, 10
	v_readlane_b32 s5, v29, 11
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0xff
	v_cmp_eq_u64_e64 s1, v[0:1], s[0:1]
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v30, s0, 14
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_35
; %bb.34:
	scratch_load_b32 v0, off, s33 offset:220
	scratch_load_b32 v1, off, s33 offset:24
	s_waitcnt vmcnt(0)
	ds_load_b32 v1, v1 offset:1020
	s_waitcnt lgkmcnt(0)
	v_add_nc_u32_e64 v1, v0, v1
	scratch_load_b32 v0, off, s33 offset:28
	s_waitcnt vmcnt(0)
	ds_store_b32 v0, v1
.LBB112_35:
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 14
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v29, 2
	v_readlane_b32 s14, v29, 3
	v_readlane_b32 s13, v29, 4
	v_readlane_b32 s12, v29, 5
	v_readlane_b32 s10, v29, 6
	v_readlane_b32 s11, v29, 7
	v_readlane_b32 s8, v29, 8
	v_readlane_b32 s9, v29, 9
	v_readlane_b32 s6, v29, 0
	v_readlane_b32 s7, v29, 1
	v_readlane_b32 s4, v29, 10
	v_readlane_b32 s5, v29, 11
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:476 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v3, off, s33 offset:476 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	v_readlane_b32 s4, v29, 10
	v_readlane_b32 s5, v29, 11
	v_readlane_b32 s6, v29, 0
	v_readlane_b32 s7, v29, 1
	v_readlane_b32 s8, v29, 8
	v_readlane_b32 s9, v29, 9
	v_readlane_b32 s10, v29, 6
	v_readlane_b32 s11, v29, 7
	v_readlane_b32 s12, v29, 5
	v_readlane_b32 s13, v29, 4
	v_readlane_b32 s14, v29, 3
	v_readlane_b32 s15, v29, 2
	scratch_load_b64 v[1:2], off, s33
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	s_mov_b32 s1, 0x2000
	v_add_co_u32 v0, s2, s1, v0
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v2, s2, s0, v1, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:1024
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:228
	scratch_load_b64 v[1:2], off, s33
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v4, v3, v0
	s_mov_b32 s2, 0
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_mov_b32 s3, 4
	v_lshlrev_b64 v[5:6], s3, v[4:5]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v6
	v_add_co_u32 v0, s16, v0, v4
	v_add_co_ci_u32_e64 v2, s16, v1, v2, s16
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[4:7], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[4:7], s33 offset:240
	scratch_load_b64 v[1:2], off, s33
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v3, v0, v3, v3
                                        ; implicit-def: $sgpr16
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s3, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:256
	scratch_load_b64 v[6:7], off, s33
	scratch_load_b32 v0, off, s33 offset:228
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s2, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s2, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s2, v1, v3
	v_add_co_ci_u32_e64 v0, s2, v0, v2, s2
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v2
	v_add_co_ci_u32_e64 v2, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:272
	scratch_load_b64 v[0:1], off, s33 offset:32
	s_waitcnt vmcnt(0)
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:276
	scratch_load_b64 v[0:1], off, s33 offset:32
	s_waitcnt vmcnt(0)
	global_load_b32 v0, v[0:1], off offset:4
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:280
	scratch_load_b32 v0, off, s33 offset:276
	scratch_load_b32 v1, off, s33 offset:280
	scratch_load_b32 v2, off, s33 offset:220
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:220
	scratch_load_b128 v[3:6], off, s33 offset:240
	scratch_load_b128 v[7:10], off, s33 offset:256
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	global_load_b128 v[11:14], v[0:1], off
	global_load_b128 v[20:23], v[0:1], off offset:16
	s_add_i32 s0, s33, 0x120
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x130
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x140
	v_mov_b32_e32 v18, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x150
	v_mov_b32_e32 v19, s0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v8, v11
	v_mov_b32_e32 v9, v12
	v_mov_b32_e32 v10, v13
	v_mov_b32_e32 v11, v14
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v12, v20
	v_mov_b32_e32 v13, v21
	v_mov_b32_e32 v14, v22
	v_mov_b32_e32 v15, v23
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul256schoolBook_v3@rel32@lo+4
	s_addc_u32 s1, s1, mul256schoolBook_v3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:352
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v30, s0, 15
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
.LBB112_36:                             ; =>This Inner Loop Header: Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 16
	v_readlane_b32 s1, v30, 15
	v_writelane_b32 v30, s1, 17
	scratch_load_b32 v0, off, s33 offset:352
	scratch_load_b32 v1, off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, v1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 18
	v_writelane_b32 v30, s0, 19
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v30, s0, 20
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB112_38
; %bb.37:                               ;   in Loop: Header=BB112_36 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v29, off, s33 offset:420 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v29, 2
	v_readlane_b32 s14, v29, 3
	v_readlane_b32 s13, v29, 4
	v_readlane_b32 s12, v29, 5
	v_readlane_b32 s10, v29, 6
	v_readlane_b32 s11, v29, 7
	v_readlane_b32 s8, v29, 8
	v_readlane_b32 s9, v29, 9
	v_readlane_b32 s6, v29, 0
	v_readlane_b32 s7, v29, 1
	v_readlane_b32 s4, v29, 10
	v_readlane_b32 s5, v29, 11
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	scratch_load_b32 v31, off, s33 offset:436 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:220
	scratch_load_b32 v1, off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0xfff
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:416
	scratch_load_b128 v[3:6], off, s33 offset:288
	scratch_load_b128 v[7:10], off, s33 offset:304
	scratch_load_b128 v[16:19], off, s33 offset:320
	scratch_load_b32 v0, off, s33 offset:352
	s_add_i32 s0, s33, 48
	v_mov_b32_e32 v1, s0
	scratch_store_b32 off, v1, s33 offset:480 ; 4-byte Folded Spill
	s_mov_b32 s0, 2
	v_writelane_b32 v30, s0, 21
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	scratch_load_b32 v12, v0, off
	s_add_i32 s0, s33, 0x170
	v_mov_b32_e32 v13, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x180
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x190
	v_mov_b32_e32 v15, s0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	v_mov_b32_e32 v8, v16
	v_mov_b32_e32 v9, v17
	v_mov_b32_e32 v10, v18
	v_mov_b32_e32 v11, v19
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, mul384_1@rel32@lo+4
	s_addc_u32 s1, s1, mul384_1@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:480 ; 4-byte Folded Reload
	v_readlane_b32 s1, v30, 21
	scratch_load_b32 v6, off, s33 offset:40
	scratch_load_b128 v[2:5], off, s33 offset:368
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:368
	scratch_load_b128 v[4:7], off, s33 offset:368
	scratch_load_b64 v[11:12], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v2, v0, 1, v0
	s_mov_b32 s2, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[9:10], s0, v[2:3]
	v_mov_b32_e32 v2, v11
	v_mov_b32_e32 v8, v9
	v_mov_b32_e32 v0, v12
	v_mov_b32_e32 v3, v10
	v_add_co_u32 v2, s3, v2, v8
	v_add_co_ci_u32_e64 v0, s3, v0, v3, s3
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	global_store_b128 v[2:3], v[4:7], off offset:16
	scratch_load_b128 v[4:7], off, s33 offset:384
	scratch_load_b64 v[11:12], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:416
	s_mov_b32 s3, 3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[2:3], s4, v0, s3, 1
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3 killed $exec
                                        ; implicit-def: $sgpr4
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_lshlrev_b64 v[9:10], s0, v[2:3]
	v_mov_b32_e32 v2, v11
	v_mov_b32_e32 v8, v9
	v_mov_b32_e32 v0, v12
	v_mov_b32_e32 v3, v10
	v_add_co_u32 v2, s4, v2, v8
	v_add_co_ci_u32_e64 v0, s4, v0, v3, s4
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	global_store_b128 v[2:3], v[4:7], off offset:16
	scratch_load_b128 v[4:7], off, s33 offset:400
	scratch_load_b64 v[11:12], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:416
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[2:3], s3, v0, s3, 2
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_lshlrev_b64 v[9:10], s0, v[2:3]
	v_mov_b32_e32 v2, v11
	v_mov_b32_e32 v8, v9
	v_mov_b32_e32 v0, v12
	v_mov_b32_e32 v3, v10
	v_add_co_u32 v2, s0, v2, v8
	v_add_co_ci_u32_e64 v0, s0, v0, v3, s0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	global_store_b128 v[2:3], v[4:7], off offset:16
	scratch_load_b32 v0, off, s33 offset:352
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s1, v1
	scratch_load_b32 v2, v0, off
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:416
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s0, v3, v4
	v_add_co_ci_u32_e64 v0, s0, v0, v1, s0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x30000
	v_add_co_u32 v0, s3, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b64 v[6:7], off, s33 offset:32
	scratch_load_b32 v0, off, s33 offset:416
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s3, v1, v3
	v_add_co_ci_u32_e64 v0, s3, v0, v2, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s3, 0x34000
	v_add_co_u32 v0, s3, s3, v0
	v_mov_b32_e32 v1, v2
	v_add_co_ci_u32_e64 v2, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, 0
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:272
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:416
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s1, v3, v4
	v_add_co_ci_u32_e64 v0, s1, v0, v1, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s1, 0x38000
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	s_branch .LBB112_39
.LBB112_38:                             ; %Flow
                                        ;   in Loop: Header=BB112_36 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 20
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v30, 17
	v_readlane_b32 s1, v30, 19
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v30, s1, 16
	s_mov_b32 s1, s0
	v_writelane_b32 v30, s1, 15
	s_mov_b32 s1, s0
	v_writelane_b32 v30, s1, 22
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB112_36
	s_branch .LBB112_40
.LBB112_39:                             ;   in Loop: Header=BB112_36 Depth=1
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 18
	scratch_load_b32 v0, off, s33 offset:352
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:352
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v30, s0, 19
	s_or_saveexec_b32 s22, -1
	scratch_store_b32 off, v30, s33 offset:424 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s22
	s_branch .LBB112_38
.LBB112_40:
	s_or_saveexec_b32 s22, -1
	scratch_load_b32 v30, off, s33 offset:424 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s22
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v30, 22
	s_or_b32 exec_lo, exec_lo, s0
; %bb.41:
	scratch_load_b32 v0, off, s33 offset:280
	scratch_load_b32 v1, off, s33 offset:28
	s_waitcnt vmcnt(0)
	ds_load_b32 v1, v1
	s_waitcnt lgkmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_load_b32 v1, off, s33 offset:44
	s_waitcnt vmcnt(0)
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v0, off, s33 offset:276
	v_readlane_b32 s30, v28, 0
	v_readlane_b32 s31, v28, 1
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v28, off, s33 offset:484 ; 4-byte Folded Reload
	scratch_load_b32 v29, off, s33 offset:488 ; 4-byte Folded Reload
	scratch_load_b32 v30, off, s33 offset:492 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffe00
	s_mov_b32 s33, s23
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end112:
	.size	extractMultipliers2, .Lfunc_end112-extractMultipliers2
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 7420
; NumSgprs: 36
; NumVgprs: 32
; ScratchSize: 1136
; MemoryBound: 0
	.text
	.hidden	doFermatTestC12                 ; -- Begin function doFermatTestC12
	.globl	doFermatTestC12
	.p2align	2
	.type	doFermatTestC12,@function
doFermatTestC12:                        ; @doFermatTestC12
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s28, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v40, s33 offset:368 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:372 ; 4-byte Folded Spill
	scratch_store_b32 off, v42, s33 offset:376 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x180
	scratch_store_b32 off, v44, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v45, s33 offset:8 ; 4-byte Folded Spill
	scratch_store_b32 off, v46, s33 offset:4 ; 4-byte Folded Spill
	scratch_store_b32 off, v47, s33         ; 4-byte Folded Spill
	v_writelane_b32 v40, s30, 0
	v_writelane_b32 v40, s31, 1
	scratch_store_b32 off, v31, s33 offset:256 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr42 : SGPR spill to VGPR lane
	v_writelane_b32 v42, s6, 0
	v_writelane_b32 v42, s7, 1
	scratch_store_b32 off, v15, s33 offset:268 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:260 ; 4-byte Folded Spill
	scratch_store_b32 off, v7, s33 offset:272 ; 4-byte Folded Spill
	scratch_store_b32 off, v6, s33 offset:264 ; 4-byte Folded Spill
	v_mov_b32_e32 v7, v5
	scratch_load_b32 v5, off, s33 offset:272 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v3
	scratch_load_b32 v3, off, s33 offset:268 ; 4-byte Folded Reload
	v_mov_b32_e32 v6, v2
	scratch_load_b32 v2, off, s33 offset:264 ; 4-byte Folded Reload
	v_mov_b32_e32 v18, v1
	v_mov_b32_e32 v14, v0
	scratch_load_b32 v0, off, s33 offset:260 ; 4-byte Folded Reload
	v_writelane_b32 v42, s15, 2
	v_writelane_b32 v42, s14, 3
	v_writelane_b32 v42, s13, 4
	v_writelane_b32 v42, s12, 5
	v_writelane_b32 v42, s10, 6
	v_writelane_b32 v42, s11, 7
	v_writelane_b32 v42, s8, 8
	v_writelane_b32 v42, s9, 9
	v_writelane_b32 v42, s4, 10
	v_writelane_b32 v42, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v15
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v18
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b64 off, v[14:15], s33 offset:16
	scratch_store_b64 off, v[6:7], s33 offset:24
	scratch_store_b64 off, v[4:5], s33 offset:32
	s_waitcnt vmcnt(1)
	scratch_store_b64 off, v[2:3], s33 offset:40
	scratch_store_b32 off, v8, s33 offset:48
	scratch_store_b32 off, v9, s33 offset:52
	scratch_store_b32 off, v10, s33 offset:56
	scratch_store_b32 off, v11, s33 offset:60
	scratch_store_b32 off, v12, s33 offset:64
	scratch_store_b32 off, v13, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_store_b32 off, v16, s33 offset:80
	scratch_store_b32 off, v17, s33 offset:84
	scratch_load_b64 v[18:19], off, s33 offset:16
	scratch_load_b64 v[16:17], off, s33 offset:72
	scratch_load_b64 v[14:15], off, s33 offset:40
	scratch_load_b32 v6, off, s33 offset:48
	scratch_load_b32 v7, off, s33 offset:60
	scratch_load_b64 v[12:13], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:80
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s2, -1
	v_mov_b32_e32 v0, s2
	v_cndmask_b32_e64 v10, s0, v0, s1
	s_mov_b32 s0, 32
	v_lshrrev_b64 v[0:1], s0, v[18:19]
	v_mov_b32_e32 v1, v0
	v_lshrrev_b64 v[2:3], s0, v[16:17]
	v_mov_b32_e32 v3, v2
	v_lshrrev_b64 v[4:5], s0, v[14:15]
	v_mov_b32_e32 v5, v4
	v_lshrrev_b64 v[8:9], s0, v[12:13]
	v_mov_b32_e32 v9, v8
	s_add_i32 s0, s33, 0x58
	v_mov_b32_e32 v11, s0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v18
	v_mov_b32_e32 v2, v16
	v_mov_b32_e32 v4, v14
	v_mov_b32_e32 v8, v12
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, extractMultipliers2@rel32@lo+4
	s_addc_u32 s1, s1, extractMultipliers2@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s15, v42, 2
	scratch_store_b32 off, v0, s33 offset:92
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 2
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v42, s0, 12
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
.LBB113_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB113_6 Depth 2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 13
	v_readlane_b32 s1, v42, 12
	v_writelane_b32 v42, s1, 14
	scratch_load_b32 v0, off, s33 offset:88
	s_mov_b32 s1, 0xff
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 15
	v_writelane_b32 v42, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 17
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_4
; %bb.2:                                ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:292 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_writelane_b32 v42, s0, 18
	v_writelane_b32 v42, s1, 19
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:276 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:292 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:288 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:288 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0xfff
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 1, v0
	s_mov_b32 s2, 0
	v_writelane_b32 v42, s2, 20
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:96
	s_mov_b32 s1, 3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s3, v0, s1, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s1, v0, s1, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:144
	scratch_load_b64 v[6:7], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:96
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s1, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s0, v1, v3
	v_add_co_ci_u32_e64 v0, s0, v0, v2, s0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s0, 0x34000
	v_add_co_u32 v0, s3, s0, v0
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v2, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:160
	scratch_load_b64 v[6:7], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:96
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s3, v1, v3
	v_add_co_ci_u32_e64 v0, s3, v0, v2, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s3, 0x30000
	v_add_co_u32 v0, s3, s3, v0
	v_mov_b32_e32 v1, v2
	v_add_co_ci_u32_e64 v2, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:164
	scratch_load_b64 v[6:7], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:96
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s1, v1, v3
	v_add_co_ci_u32_e64 v0, s1, v0, v2, s1
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s1, 0x38000
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v2
	v_add_co_ci_u32_e64 v2, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:168
	scratch_load_b128 v[3:6], off, s33 offset:112
	scratch_load_b128 v[7:10], off, s33 offset:128
	scratch_load_b128 v[15:18], off, s33 offset:144
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v12, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v13, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v15
	v_mov_b32_e32 v9, v16
	v_mov_b32_e32 v10, v17
	v_mov_b32_e32 v11, v18
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, FermatTest384@rel32@lo+4
	s_addc_u32 s1, s1, FermatTest384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:276 ; 4-byte Folded Reload
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s0, v42, 18
	v_readlane_b32 s1, v42, 19
	scratch_load_b32 v1, off, s33 offset:176
	s_mov_b32 s2, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, s2
	scratch_store_b32 off, v1, s33 offset:176
	scratch_load_b128 v[1:4], off, s33 offset:192
	scratch_load_b128 v[8:11], off, s33 offset:176
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v6, v4
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v3
	v_mov_b32_e32 v6, v10
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v7, v9
	v_or_b32_e64 v7, v7, v12
	v_mov_b32_e32 v2, v1
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v1, v1, v2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v5
	scratch_store_b128 off, v[1:4], s33 offset:176
	scratch_load_b128 v[1:4], off, s33 offset:208
	scratch_load_b128 v[8:11], off, s33 offset:176
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v6, v4
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v11
	v_or_b32_e64 v5, v5, v6
	v_mov_b32_e32 v7, v3
	v_mov_b32_e32 v6, v10
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v2
	v_mov_b32_e32 v7, v9
	v_or_b32_e64 v7, v7, v12
	v_mov_b32_e32 v2, v1
	v_mov_b32_e32 v1, v8
	v_or_b32_e64 v1, v1, v2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2_vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v2, v7
	v_mov_b32_e32 v3, v6
	v_mov_b32_e32 v4, v5
	scratch_store_b128 off, v[1:4], s33 offset:176
	scratch_load_b128 v[1:4], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v3
	v_mov_b32_e32 v6, v1
	v_mov_b32_e32 v8, v4
	v_mov_b32_e32 v5, v2
	v_or_b32_e64 v5, v5, v8
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v2, v5
	scratch_store_b128 off, v[1:4], s33 offset:176
	scratch_load_b128 v[3:6], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v1, v3
	v_or_b32_e64 v1, v1, v2
	scratch_store_b32 off, v1, s33 offset:176
	scratch_load_b32 v1, off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s2, v1, v0
	v_cndmask_b32_e64 v1, 0, 1, s2
	scratch_store_b32 off, v1, s33 offset:172
	scratch_load_b32 v1, off, s33 offset:172
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:284 ; 4-byte Folded Spill
	scratch_load_b32 v1, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:280 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:284 ; 4-byte Folded Reload
	v_readlane_b32 s0, v42, 20
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:280 ; 4-byte Folded Reload
	v_mov_b32_e32 v5, v1
	scratch_load_b32 v1, off, s33 offset:276 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr1
                                        ; implicit-def: $sgpr1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
	s_waitcnt vmcnt(1)
	v_add_nc_u32_e64 v0, v0, v3
	ds_store_b8 v0, v2
	scratch_load_b32 v0, off, s33 offset:172
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, v1
	v_writelane_b32 v42, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 22
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_5
; %bb.3:                                ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:160
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 21
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_5
.LBB113_4:                              ; %Flow10
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v42, 14
	v_readlane_b32 s1, v42, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v42, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 23
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB113_1
	s_branch .LBB113_52
.LBB113_5:                              ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v42, 22
	s_or_b32 exec_lo, exec_lo, s1
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_readlane_b32 s0, v42, 21
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_cndmask_b32_e64 v0, 0, 1, s0
	scratch_store_b32 off, v0, s33 offset:304 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:308 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_writelane_b32 v42, s0, 24
	v_writelane_b32 v42, s1, 25
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:296 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:308 ; 4-byte Folded Reload
	v_mov_b32_e32 v4, v1
	scratch_load_b32 v1, off, s33 offset:304 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(1)
	v_add_nc_u32_e64 v0, v0, v2
	s_waitcnt vmcnt(0)
	ds_store_b8 v0, v1
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	scratch_store_b32 off, v0, s33 offset:300 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v3, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s15, v42, 2
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x90
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift3@rel32@lo+4
	s_addc_u32 s1, s1, lshift3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:300 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:296 ; 4-byte Folded Reload
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_readlane_b32 s0, v42, 24
	v_readlane_b32 s1, v42, 25
	scratch_load_b32 v2, off, s33 offset:80
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s3, v2, v1
	s_mov_b32 s2, -1
	v_cndmask_b32_e64 v6, s2, v1, s3
	scratch_load_b128 v[1:4], off, s33 offset:112
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v5, v1
	v_add_nc_u32_e64 v5, v5, v6
	v_mov_b32_e32 v1, v5
	scratch_store_b128 off, v[1:4], s33 offset:112
	scratch_store_b32 off, v0, s33 offset:224
	scratch_store_b32 off, v0, s33 offset:232
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:296 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 2
	v_alignbit_b32 v1, v1, v2, s0
	scratch_store_b32 off, v1, s33 offset:240
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:244
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v42, s0, 26
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
.LBB113_6:                              ;   Parent Loop BB113_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 27
	v_readlane_b32 s1, v42, 26
	v_writelane_b32 v42, s1, 28
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s1, 64
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 29
	v_writelane_b32 v42, s0, 30
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 31
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
                                        ; implicit-def: $vgpr42 : SGPR spill to VGPR lane
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_11
; %bb.7:                                ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:244
	scratch_load_b32 v1, off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_cmp_ge_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 0
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_8
	s_branch .LBB113_10
.LBB113_8:                              ; %Flow8
                                        ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 0
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:312 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 2
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_12
; %bb.9:                                ;   in Loop: Header=BB113_6 Depth=2
	scratch_load_b32 v1, off, s33 offset:52
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	ds_load_b32 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:312 ; 4-byte Folded Spill
	s_branch .LBB113_12
.LBB113_10:                             ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 1
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_8
.LBB113_11:                             ; %Flow9
                                        ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v41, 31
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v41, 28
	v_readlane_b32 s1, v41, 30
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v41, s1, 27
	s_mov_b32 s1, s0
	v_writelane_b32 v41, s1, 26
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v41, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 s1, s0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s1, 3
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB113_6
	s_branch .LBB113_18
.LBB113_12:                             ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 2
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v1, off, s33 offset:312 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:224
	scratch_load_b32 v0, off, s33 offset:244
	scratch_load_b32 v1, off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_cmp_ge_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 4
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_13
	s_branch .LBB113_15
.LBB113_13:                             ; %Flow7
                                        ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 4
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 5
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:316 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 6
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_16
; %bb.14:                               ;   in Loop: Header=BB113_6 Depth=2
	scratch_load_b32 v1, off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	ds_load_b32 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:316 ; 4-byte Folded Spill
	s_branch .LBB113_16
.LBB113_15:                             ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 5
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_13
.LBB113_16:                             ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 6
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v1, off, s33 offset:316 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:232
; %bb.17:                               ;   in Loop: Header=BB113_6 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 29
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:244
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 30
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_11
.LBB113_18:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 3
	s_or_b32 exec_lo, exec_lo, s0
; %bb.19:                               ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:224
	s_mov_b32 s0, 0xff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v2, s0
	v_bfe_u32 v1, v2, 8, 8
	v_add_nc_u32_e64 v0, v0, v1
	v_bfe_u32 v1, v2, 16, 8
	s_mov_b32 s0, 24
	v_lshrrev_b32_e64 v2, s0, v2
	v_add3_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:228
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0
	v_cmp_eq_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 7
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_20
	s_branch .LBB113_22
.LBB113_20:                             ; %Flow6
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 7
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 8
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:320 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 9
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_23
; %bb.21:                               ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:324 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:324 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:320 ; 4-byte Folded Spill
	s_branch .LBB113_23
.LBB113_22:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 8
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_20
.LBB113_23:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 9
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:320 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:228
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 10
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_24
	s_branch .LBB113_26
.LBB113_24:                             ; %Flow5
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 10
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 11
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:328 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 12
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_27
; %bb.25:                               ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:332 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:332 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -2
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:328 ; 4-byte Folded Spill
	s_branch .LBB113_27
.LBB113_26:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 11
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_24
.LBB113_27:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 12
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:328 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:228
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s2, s0
	v_and_b32_e64 v0, v0, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 13
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_28
	s_branch .LBB113_30
.LBB113_28:                             ; %Flow4
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 13
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 14
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:336 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 15
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_31
; %bb.29:                               ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:340 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:340 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -3
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:336 ; 4-byte Folded Spill
	s_branch .LBB113_31
.LBB113_30:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 14
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_28
.LBB113_31:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 15
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:336 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:228
	scratch_load_b32 v2, off, s33 offset:232
	s_mov_b32 s0, 0xff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v2, s0
	v_bfe_u32 v1, v2, 8, 8
	v_add_nc_u32_e64 v0, v0, v1
	v_bfe_u32 v1, v2, 16, 8
	s_mov_b32 s0, 24
	v_lshrrev_b32_e64 v2, s0, v2
	v_add3_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0
	v_cmp_eq_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 16
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_32
	s_branch .LBB113_34
.LBB113_32:                             ; %Flow3
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 16
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 17
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:344 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 18
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_35
; %bb.33:                               ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:348 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:348 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:344 ; 4-byte Folded Spill
	s_branch .LBB113_35
.LBB113_34:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 17
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_32
.LBB113_35:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 18
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:344 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 19
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_36
	s_branch .LBB113_38
.LBB113_36:                             ; %Flow2
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 19
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 20
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:352 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 21
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_39
; %bb.37:                               ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:356 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:356 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -2
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:352 ; 4-byte Folded Spill
	s_branch .LBB113_39
.LBB113_38:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 20
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_36
.LBB113_39:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 21
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:352 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s2, s0
	v_and_b32_e64 v0, v0, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 22
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_40
	s_branch .LBB113_42
.LBB113_40:                             ; %Flow1
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 22
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 23
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:360 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 24
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_43
; %bb.41:                               ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:364 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:364 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -3
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:360 ; 4-byte Folded Spill
	s_branch .LBB113_43
.LBB113_42:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 23
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_40
.LBB113_43:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 24
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:360 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0xff
	v_cmp_eq_u64_e64 s1, v[0:1], s[0:1]
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 25
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_45
; %bb.44:                               ;   in Loop: Header=BB113_1 Depth=1
	scratch_load_b32 v0, off, s33 offset:228
	scratch_load_b32 v1, off, s33 offset:52
	s_waitcnt vmcnt(0)
	ds_load_u8 v1, v1 offset:255
	s_waitcnt lgkmcnt(0)
	v_add_nc_u32_e64 v1, v0, v1
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	ds_store_b32 v0, v1
	scratch_load_b32 v0, off, s33 offset:236
	scratch_load_b32 v1, off, s33 offset:56
	s_waitcnt vmcnt(0)
	ds_load_u8 v1, v1 offset:255
	s_waitcnt lgkmcnt(0)
	v_add_nc_u32_e64 v1, v0, v1
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	ds_store_b32 v0, v1
.LBB113_45:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 25
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:256 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:172
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 26
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_49
	s_branch .LBB113_47
.LBB113_46:                             ;   in Loop: Header=BB113_1 Depth=1
	scratch_load_b32 v0, off, s33 offset:160
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:160
	scratch_load_b32 v0, off, s33 offset:228
	scratch_load_b32 v1, off, s33 offset:92
	scratch_load_b32 v2, off, s33 offset:88
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, v2
	s_mov_b32 s0, 0xfff
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:228
	scratch_load_b128 v[2:5], off, s33 offset:112
	scratch_load_b64 v[10:11], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, 1, v0
	s_mov_b32 s2, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s1, v0, v7
	v_add_co_ci_u32_e64 v6, s1, v1, v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off offset:16
	scratch_load_b128 v[2:5], off, s33 offset:128
	scratch_load_b64 v[10:11], off, s33 offset:24
	scratch_load_b32 v6, off, s33 offset:228
	s_mov_b32 s1, 3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s1, 1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off offset:16
	scratch_load_b128 v[2:5], off, s33 offset:144
	scratch_load_b64 v[10:11], off, s33 offset:24
	scratch_load_b32 v6, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s1, v6, s1, 2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off offset:16
	scratch_load_b32 v2, off, s33 offset:160
	scratch_load_b64 v[0:1], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:228
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_mov_b32 s1, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s0, v3, v4
	v_add_co_ci_u32_e64 v0, s0, v0, v1, s0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x34000
	v_add_co_u32 v0, s3, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:168
	scratch_load_b64 v[0:1], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:228
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s3, v3, v4
	v_add_co_ci_u32_e64 v0, s3, v0, v1, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s3, 0x38000
	v_add_co_u32 v0, s3, s3, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:164
	scratch_load_b64 v[0:1], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:228
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s1, v3, v4
	v_add_co_ci_u32_e64 v0, s1, v0, v1, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s1, 0x30000
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	s_branch .LBB113_51
.LBB113_47:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:160
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 27
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB113_50
; %bb.48:                               ;   in Loop: Header=BB113_1 Depth=1
	scratch_load_b32 v0, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	scratch_load_b32 v2, off, s33 offset:80
	scratch_load_b64 v[7:8], off, s33 offset:32
	s_mov_b32 s2, 0
	scratch_load_b32 v0, off, s33 offset:236
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v3, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	s_mov_b32 s1, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[0:1]
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v1, v8
	v_mov_b32_e32 v3, v6
	v_add_co_u32 v0, s0, v0, v4
	v_add_co_ci_u32_e64 v3, s0, v1, v3, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:164
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:236
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s0, v3, v4
	v_add_co_ci_u32_e64 v0, s0, v0, v1, s0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x4000
	v_add_co_u32 v0, s3, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:160
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:236
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s3, v3, v4
	v_add_co_ci_u32_e64 v0, s3, v0, v1, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s3, 0x8000
	v_add_co_u32 v0, s3, s3, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:168
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:236
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s1, v3, v4
	v_add_co_ci_u32_e64 v0, s1, v0, v1, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s1, 0xc000
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	s_branch .LBB113_50
.LBB113_49:                             ; %Flow
                                        ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 26
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 28
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB113_51
	s_branch .LBB113_46
.LBB113_50:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 27
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB113_49
.LBB113_51:                             ;   in Loop: Header=BB113_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(1)
	v_readlane_b32 s1, v41, 28
	s_or_b32 exec_lo, exec_lo, s1
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 15
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	ds_load_b32 v2, v0
	scratch_load_b32 v1, off, s33 offset:84
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v1, off
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v0, off, s33 offset:92
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	ds_load_b32 v0, v0
	scratch_load_b32 v1, off, s33 offset:88
	s_mov_b32 s1, 0xffffff00
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add3_u32 v0, v0, v1, s1
	scratch_store_b32 off, v0, s33 offset:88
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 16
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB113_4
.LBB113_52:
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 23
	s_or_b32 exec_lo, exec_lo, s0
; %bb.53:
	scratch_load_b32 v0, off, s33 offset:92
	s_mov_b32 s0, 0xfff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v2, v0, s0
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:88
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	global_store_b32 v[0:1], v2, off offset:4
	v_readlane_b32 s30, v40, 0
	v_readlane_b32 s31, v40, 1
	scratch_load_b32 v47, off, s33          ; 4-byte Folded Reload
	scratch_load_b32 v46, off, s33 offset:4 ; 4-byte Folded Reload
	scratch_load_b32 v45, off, s33 offset:8 ; 4-byte Folded Reload
	scratch_load_b32 v44, off, s33 offset:12 ; 4-byte Folded Reload
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v40, off, s33 offset:368 ; 4-byte Folded Reload
	scratch_load_b32 v41, off, s33 offset:372 ; 4-byte Folded Reload
	scratch_load_b32 v42, off, s33 offset:376 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffe80
	s_mov_b32 s33, s28
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end113:
	.size	doFermatTestC12, .Lfunc_end113-doFermatTestC12
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 11900
; NumSgprs: 36
; NumVgprs: 50
; ScratchSize: 3392
; MemoryBound: 0
	.text
	.hidden	bitwinChainLength               ; -- Begin function bitwinChainLength
	.globl	bitwinChainLength
	.p2align	2
	.type	bitwinChainLength,@function
bitwinChainLength:                      ; @bitwinChainLength
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s4, s33
	s_mov_b32 s33, s32
	s_xor_saveexec_b32 s0, -1
	scratch_store_b32 off, v2, s33 offset:20 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 28
	scratch_store_b32 off, v0, s33
	scratch_store_b32 off, v1, s33 offset:4
	scratch_load_b32 v0, off, s33
	scratch_load_b32 v1, off, s33 offset:4
	s_waitcnt vmcnt(0)
	v_cmp_le_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
                                        ; implicit-def: $vgpr2 : SGPR spill to VGPR lane
	v_writelane_b32 v2, s1, 0
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33 offset:8 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB114_1
	s_branch .LBB114_3
.LBB114_1:                              ; %Flow
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 0
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:12 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v2, s0, 1
	s_or_saveexec_b32 s3, -1
	scratch_store_b32 off, v2, s33 offset:8 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s3
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB114_4
; %bb.2:
	scratch_load_b32 v0, off, s33 offset:4
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v0, v0, s0, s0
	scratch_store_b32 off, v0, s33 offset:16 ; 4-byte Folded Spill
	s_branch .LBB114_4
.LBB114_3:
	scratch_load_b32 v0, off, s33
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:12 ; 4-byte Folded Spill
	s_branch .LBB114_1
.LBB114_4:
	s_or_saveexec_b32 s3, -1
	scratch_load_b32 v2, off, s33 offset:8  ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s3
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v2, 1
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:16 ; 4-byte Folded Reload
	s_xor_saveexec_b32 s0, -1
	scratch_load_b32 v2, off, s33 offset:20 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xffffffe4
	s_mov_b32 s33, s4
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end114:
	.size	bitwinChainLength, .Lfunc_end114-bitwinChainLength
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 372
; NumSgprs: 34
; NumVgprs: 3
; ScratchSize: 28
; MemoryBound: 0
	.text
	.hidden	doFermatTestBt                  ; -- Begin function doFermatTestBt
	.globl	doFermatTestBt
	.p2align	2
	.type	doFermatTestBt,@function
doFermatTestBt:                         ; @doFermatTestBt
; %bb.0:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_mov_b32 s28, s33
	s_mov_b32 s33, s32
	s_or_saveexec_b32 s0, -1
	scratch_store_b32 off, v40, s33 offset:396 ; 4-byte Folded Spill
	scratch_store_b32 off, v41, s33 offset:400 ; 4-byte Folded Spill
	scratch_store_b32 off, v42, s33 offset:404 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0x1a0
	scratch_store_b32 off, v44, s33 offset:12 ; 4-byte Folded Spill
	scratch_store_b32 off, v45, s33 offset:8 ; 4-byte Folded Spill
	scratch_store_b32 off, v46, s33 offset:4 ; 4-byte Folded Spill
	scratch_store_b32 off, v47, s33         ; 4-byte Folded Spill
	v_writelane_b32 v40, s30, 0
	v_writelane_b32 v40, s31, 1
	scratch_store_b32 off, v31, s33 offset:260 ; 4-byte Folded Spill
                                        ; implicit-def: $vgpr42 : SGPR spill to VGPR lane
	v_writelane_b32 v42, s6, 0
	v_writelane_b32 v42, s7, 1
	scratch_store_b32 off, v15, s33 offset:272 ; 4-byte Folded Spill
	scratch_store_b32 off, v14, s33 offset:264 ; 4-byte Folded Spill
	scratch_store_b32 off, v7, s33 offset:276 ; 4-byte Folded Spill
	scratch_store_b32 off, v6, s33 offset:268 ; 4-byte Folded Spill
	v_mov_b32_e32 v7, v5
	scratch_load_b32 v5, off, s33 offset:276 ; 4-byte Folded Reload
	v_mov_b32_e32 v15, v3
	scratch_load_b32 v3, off, s33 offset:272 ; 4-byte Folded Reload
	v_mov_b32_e32 v6, v2
	scratch_load_b32 v2, off, s33 offset:268 ; 4-byte Folded Reload
	v_mov_b32_e32 v17, v1
	v_mov_b32_e32 v14, v0
	scratch_load_b32 v0, off, s33 offset:264 ; 4-byte Folded Reload
	v_writelane_b32 v42, s15, 2
	v_writelane_b32 v42, s14, 3
	v_writelane_b32 v42, s13, 4
	v_writelane_b32 v42, s12, 5
	v_writelane_b32 v42, s10, 6
	v_writelane_b32 v42, s11, 7
	v_writelane_b32 v42, s8, 8
	v_writelane_b32 v42, s9, 9
	v_writelane_b32 v42, s4, 10
	v_writelane_b32 v42, s5, 11
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v1, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v5
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v7
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr6 killed $vgpr6 def $vgpr6_vgpr7 killed $exec
	v_mov_b32_e32 v7, v15
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr14 killed $vgpr14 def $vgpr14_vgpr15 killed $exec
	v_mov_b32_e32 v15, v17
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
                                        ; implicit-def: $sgpr0_sgpr1
	scratch_store_b64 off, v[14:15], s33 offset:16
	scratch_store_b64 off, v[6:7], s33 offset:24
	scratch_store_b64 off, v[4:5], s33 offset:32
	s_waitcnt vmcnt(1)
	scratch_store_b64 off, v[2:3], s33 offset:40
	scratch_store_b32 off, v8, s33 offset:48
	scratch_store_b32 off, v9, s33 offset:52
	scratch_store_b32 off, v10, s33 offset:56
	scratch_store_b32 off, v11, s33 offset:60
	scratch_store_b32 off, v12, s33 offset:64
	scratch_store_b32 off, v13, s33 offset:68
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_store_b32 off, v16, s33 offset:80
	scratch_load_b64 v[18:19], off, s33 offset:16
	scratch_load_b64 v[16:17], off, s33 offset:72
	scratch_load_b64 v[14:15], off, s33 offset:40
	scratch_load_b32 v6, off, s33 offset:48
	scratch_load_b32 v7, off, s33 offset:60
	scratch_load_b64 v[12:13], off, s33 offset:24
	s_mov_b32 s0, 32
	s_waitcnt vmcnt(5)
	v_lshrrev_b64 v[0:1], s0, v[18:19]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(4)
	v_lshrrev_b64 v[2:3], s0, v[16:17]
	v_mov_b32_e32 v3, v2
	s_waitcnt vmcnt(3)
	v_lshrrev_b64 v[4:5], s0, v[14:15]
	v_mov_b32_e32 v5, v4
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[8:9], s0, v[12:13]
	v_mov_b32_e32 v9, v8
	s_add_i32 s0, s33, 0x54
	v_mov_b32_e32 v11, s0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v18
	v_mov_b32_e32 v2, v16
	v_mov_b32_e32 v4, v14
	v_mov_b32_e32 v8, v12
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, extractMultipliers2@rel32@lo+4
	s_addc_u32 s1, s1, extractMultipliers2@rel32@hi+12
	v_mov_b32_e32 v10, -1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s15, v42, 2
	scratch_store_b32 off, v0, s33 offset:88
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 2
	s_swappc_b64 s[30:31], s[0:1]
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v42, s0, 12
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
.LBB115_1:                              ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB115_23 Depth 2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 13
	v_readlane_b32 s1, v42, 12
	v_writelane_b32 v42, s1, 14
	scratch_load_b32 v0, off, s33 offset:84
	s_mov_b32 s1, 0xff
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 15
	v_writelane_b32 v42, s0, 16
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 17
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_9
; %bb.2:                                ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:88
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:288 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:280 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:288 ; 4-byte Folded Reload
	scratch_store_b32 off, v2, s33 offset:284 ; 4-byte Folded Spill
	v_mov_b32_e32 v3, v1
	scratch_load_b32 v1, off, s33 offset:284 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v3
                                        ; kill: def $vgpr1 killed $vgpr1 killed $vgpr1_vgpr2 killed $exec
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	s_mov_b32 s0, 0xfff
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:92
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v3, v0, 1, v0
	s_mov_b32 s2, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:96
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:92
	s_mov_b32 s1, 3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s3, v0, s1, 1
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s3, v0, v3
	v_add_co_ci_u32_e64 v2, s3, v1, v2, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:112
	scratch_load_b64 v[1:2], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:92
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[3:4], s1, v0, s1, 2
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[4:5], s0, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b128 v[0:3], v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b128 off, v[0:3], s33 offset:128
	scratch_load_b64 v[6:7], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:92
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b32 s1, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s0, v1, v3
	v_add_co_ci_u32_e64 v0, s0, v0, v2, s0
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s0, 0x34000
	v_add_co_u32 v0, s3, s0, v0
	v_mov_b32_e32 v1, v2
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v2, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:144
	scratch_load_b64 v[6:7], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:92
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s3, v1, v3
	v_add_co_ci_u32_e64 v0, s3, v0, v2, s3
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s3, 0x30000
	v_add_co_u32 v0, s3, s3, v0
	v_mov_b32_e32 v1, v2
	v_add_co_ci_u32_e64 v2, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:148
	scratch_load_b64 v[6:7], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:92
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[0:1]
	v_mov_b32_e32 v1, v6
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v0, v7
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v1, s1, v1, v3
	v_add_co_ci_u32_e64 v0, s1, v0, v2, s1
                                        ; kill: def $vgpr1 killed $vgpr1 def $vgpr1_vgpr2 killed $exec
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	s_mov_b32 s1, 0x38000
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v2
	v_add_co_ci_u32_e64 v2, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	global_load_b32 v0, v[0:1], off offset:16
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:152
	scratch_load_b32 v0, off, s33 offset:144
	s_mov_b32 s0, 16
	s_waitcnt vmcnt(0)
	v_lshrrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:156
	scratch_load_b128 v[3:6], off, s33 offset:96
	scratch_load_b128 v[7:10], off, s33 offset:112
	scratch_load_b128 v[15:18], off, s33 offset:128
	s_add_i32 s0, s33, 0xb0
	v_mov_b32_e32 v12, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xc0
	v_mov_b32_e32 v13, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0xd0
	v_mov_b32_e32 v14, s0
                                        ; implicit-def: $sgpr0
	s_waitcnt vmcnt(2)
	v_mov_b32_e32 v0, v3
	v_mov_b32_e32 v1, v4
	v_mov_b32_e32 v2, v5
	v_mov_b32_e32 v3, v6
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v4, v7
	v_mov_b32_e32 v5, v8
	v_mov_b32_e32 v6, v9
	v_mov_b32_e32 v7, v10
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v8, v15
	v_mov_b32_e32 v9, v16
	v_mov_b32_e32 v10, v17
	v_mov_b32_e32 v11, v18
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, FermatTest384@rel32@lo+4
	s_addc_u32 s1, s1, FermatTest384@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:280 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:176
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:176
	scratch_load_b128 v[2:5], off, s33 offset:192
	scratch_load_b128 v[8:11], off, s33 offset:176
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v6, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v11
	v_or_b32_e64 v0, v0, v6
	v_mov_b32_e32 v7, v4
	v_mov_b32_e32 v6, v10
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v3
	v_mov_b32_e32 v7, v9
	v_or_b32_e64 v7, v7, v12
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v2, v8
	v_or_b32_e64 v2, v2, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v4, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:176
	scratch_load_b128 v[2:5], off, s33 offset:208
	scratch_load_b128 v[8:11], off, s33 offset:176
	s_waitcnt vmcnt(1)
	v_mov_b32_e32 v6, v5
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v11
	v_or_b32_e64 v0, v0, v6
	v_mov_b32_e32 v7, v4
	v_mov_b32_e32 v6, v10
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v12, v3
	v_mov_b32_e32 v7, v9
	v_or_b32_e64 v7, v7, v12
	v_mov_b32_e32 v3, v2
	v_mov_b32_e32 v2, v8
	v_or_b32_e64 v2, v2, v3
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3_vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v3, v7
	v_mov_b32_e32 v4, v6
	v_mov_b32_e32 v5, v0
	scratch_store_b128 off, v[2:5], s33 offset:176
	scratch_load_b128 v[2:5], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v7, v4
	v_mov_b32_e32 v6, v2
	v_mov_b32_e32 v8, v5
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v8
	v_or_b32_e64 v6, v6, v7
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v0
	scratch_store_b128 off, v[2:5], s33 offset:176
	scratch_load_b128 v[3:6], off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v2, v4
	v_mov_b32_e32 v0, v3
	v_or_b32_e64 v0, v0, v2
	scratch_store_b32 off, v0, s33 offset:176
	scratch_load_b32 v0, off, s33 offset:176
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 18
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_4
; %bb.3:                                ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 19
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
.LBB115_4:                              ; %Flow13
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 18
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 19
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:292 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 20
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_7
; %bb.5:                                ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:156
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s1, v0, s0
	s_mov_b32 s0, 0
	v_writelane_b32 v42, s0, 21
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 22
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_8
; %bb.6:                                ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:144
	s_mov_b32 s0, 1
	s_waitcnt vmcnt(0)
	v_cmp_gt_u32_e64 s0, v0, s0
	s_and_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 21
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_8
.LBB115_7:                              ; %Flow14
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 20
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:292 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:296 ; 4-byte Folded Spill
	s_branch .LBB115_10
.LBB115_8:                              ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s1, v42, 22
	s_or_b32 exec_lo, exec_lo, s1
	v_readlane_b32 s0, v42, 21
	v_cndmask_b32_e64 v0, 0, 1, s0
	scratch_store_b32 off, v0, s33 offset:292 ; 4-byte Folded Spill
	s_branch .LBB115_7
.LBB115_9:                              ; %Flow15
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 17
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v42, 14
	v_readlane_b32 s1, v42, 16
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v42, s1, 13
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 12
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 23
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB115_1
	s_branch .LBB115_69
.LBB115_10:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:296 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:160
	scratch_load_b32 v0, off, s33 offset:176
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 24
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_11
	s_branch .LBB115_13
.LBB115_11:                             ; %Flow12
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 24
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 25
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:300 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 26
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_14
; %bb.12:                               ;   in Loop: Header=BB115_1 Depth=1
	scratch_load_b32 v0, off, s33 offset:160
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:300 ; 4-byte Folded Spill
	s_branch .LBB115_14
.LBB115_13:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 25
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_11
.LBB115_14:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 26
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v0, off, s33 offset:300 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:168
	scratch_load_b32 v0, off, s33 offset:160
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:304 ; 4-byte Folded Spill
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 27
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_15
	s_branch .LBB115_17
.LBB115_15:                             ; %Flow11
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 27
	s_or_saveexec_b32 s0, s0
	scratch_load_b32 v0, off, s33 offset:304 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:308 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 28
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_18
; %bb.16:                               ;   in Loop: Header=BB115_1 Depth=1
	s_mov_b32 s0, 0
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:308 ; 4-byte Folded Spill
	s_branch .LBB115_18
.LBB115_17:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:156
	scratch_load_b32 v1, off, s33 offset:144
	s_mov_b32 s0, 0xffff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v1, v1, s0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, bitwinChainLength@rel32@lo+4
	s_addc_u32 s1, s1, bitwinChainLength@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_store_b32 off, v0, s33 offset:304 ; 4-byte Folded Spill
	s_branch .LBB115_15
.LBB115_18:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 28
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:308 ; 4-byte Folded Reload
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:164
	scratch_load_b32 v0, off, s33 offset:160
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:328 ; 4-byte Folded Spill
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:324 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_writelane_b32 v42, s0, 29
	v_writelane_b32 v42, s1, 30
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:312 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:328 ; 4-byte Folded Reload
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s0, v42, 29
	v_readlane_b32 s1, v42, 30
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:312 ; 4-byte Folded Reload
	v_mov_b32_e32 v5, v1
	scratch_load_b32 v1, off, s33 offset:324 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v1, v1, v3
	ds_store_b8 v1, v2
	scratch_load_b32 v1, off, s33 offset:164
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s2, v1, v0
	v_cndmask_b32_e64 v1, 0, 1, s2
	scratch_store_b32 off, v1, s33 offset:316 ; 4-byte Folded Spill
	scratch_load_b32 v1, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v1, s33 offset:320 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	v_mov_b32_e32 v2, v0
	scratch_load_b32 v0, off, s33 offset:320 ; 4-byte Folded Reload
	v_mov_b32_e32 v4, v1
	scratch_load_b32 v1, off, s33 offset:316 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v4
                                        ; kill: def $vgpr2 killed $vgpr2 killed $vgpr2_vgpr3 killed $exec
	s_waitcnt vmcnt(1)
	v_add_nc_u32_e64 v0, v0, v2
	s_waitcnt vmcnt(0)
	ds_store_b8 v0, v1
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:312 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:168
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, v1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 31
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_19
	s_branch .LBB115_21
.LBB115_19:                             ; %Flow10
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 31
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
                                        ; implicit-def: $vgpr42 : SGPR spill to VGPR lane
	v_writelane_b32 v42, s0, 0
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_22
; %bb.20:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:144
	s_mov_b32 s0, 0xff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v3, v0, s0
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, rshift3@rel32@lo+4
	s_addc_u32 s1, s1, rshift3@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:96
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:96
	scratch_load_b32 v0, off, s33 offset:144
	s_mov_b32 s0, 16
	s_waitcnt vmcnt(0)
	v_lshlrev_b32_e64 v0, s0, v0
	scratch_store_b32 off, v0, s33 offset:144
	s_branch .LBB115_22
.LBB115_21:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	s_add_i32 s0, s33, 0x60
	v_mov_b32_e32 v0, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v1, s0
                                        ; implicit-def: $sgpr0
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v2, s0
                                        ; implicit-def: $sgpr0
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, lshift3@rel32@lo+4
	s_addc_u32 s1, s1, lshift3@rel32@hi+12
	v_mov_b32_e32 v3, 1
	scratch_store_b32 off, v3, s33 offset:332 ; 4-byte Folded Spill
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v1, off, s33 offset:332 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:156
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, -1
	v_cndmask_b32_e64 v6, v1, s0, s1
	scratch_load_b128 v[2:5], off, s33 offset:96
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v2
	v_add_nc_u32_e64 v0, v0, v6
	v_mov_b32_e32 v2, v0
	scratch_store_b128 off, v[2:5], s33 offset:96
	scratch_load_b32 v0, off, s33 offset:144
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:144
	s_branch .LBB115_19
.LBB115_22:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 0
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	v_mov_b32_e32 v0, 0
	scratch_store_b32 off, v0, s33 offset:336 ; 4-byte Folded Spill
	scratch_store_b32 off, v0, s33 offset:224
	scratch_store_b32 off, v0, s33 offset:232
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v3, v0
	scratch_load_b32 v0, off, s33 offset:336 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v1
	v_mov_b32_e32 v2, v3
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 2
	v_alignbit_b32 v1, v1, v2, s0
	scratch_store_b32 off, v1, s33 offset:240
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:244
	s_mov_b32 s0, 0
                                        ; implicit-def: $sgpr1
	v_writelane_b32 v42, s0, 1
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
.LBB115_23:                             ;   Parent Loop BB115_1 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 2
	v_readlane_b32 s1, v42, 1
	v_writelane_b32 v42, s1, 3
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s1, 64
	s_waitcnt vmcnt(0)
	v_cmp_lt_u32_e64 s1, v0, s1
	s_mov_b32 s2, -1
	s_or_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 4
	v_writelane_b32 v42, s0, 5
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 6
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_28
; %bb.24:                               ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:244
	scratch_load_b32 v1, off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_cmp_ge_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 7
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_25
	s_branch .LBB115_27
.LBB115_25:                             ; %Flow8
                                        ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 7
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 8
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:340 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 9
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_29
; %bb.26:                               ;   in Loop: Header=BB115_23 Depth=2
	scratch_load_b32 v1, off, s33 offset:52
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	ds_load_b32 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:340 ; 4-byte Folded Spill
	s_branch .LBB115_29
.LBB115_27:                             ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 8
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_25
.LBB115_28:                             ; %Flow9
                                        ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 6
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s2, v42, 3
	v_readlane_b32 s1, v42, 5
	s_mov_b32 s0, s1
	s_and_b32 s0, exec_lo, s0
	s_or_b32 s0, s0, s2
	v_writelane_b32 v42, s1, 2
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 1
	s_mov_b32 s1, s0
	v_writelane_b32 v42, s1, 10
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_not1_b32 exec_lo, exec_lo, s0
	s_cbranch_execnz .LBB115_23
	s_branch .LBB115_35
.LBB115_29:                             ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 9
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v1, off, s33 offset:340 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:224
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:224
	scratch_load_b32 v0, off, s33 offset:244
	scratch_load_b32 v1, off, s33 offset:240
	s_waitcnt vmcnt(0)
	v_cmp_ge_u32_e64 s0, v0, v1
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 11
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_30
	s_branch .LBB115_32
.LBB115_30:                             ; %Flow7
                                        ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 11
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 12
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:344 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 13
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_33
; %bb.31:                               ;   in Loop: Header=BB115_23 Depth=2
	scratch_load_b32 v1, off, s33 offset:56
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s0, 2
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, s0, v1
	ds_load_b32 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:344 ; 4-byte Folded Spill
	s_branch .LBB115_33
.LBB115_32:                             ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 12
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_30
.LBB115_33:                             ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 13
	s_or_b32 exec_lo, exec_lo, s0
	scratch_load_b32 v1, off, s33 offset:344 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:232
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:232
; %bb.34:                               ;   in Loop: Header=BB115_23 Depth=2
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 4
	scratch_load_b32 v0, off, s33 offset:244
	s_mov_b32 s1, 1
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:244
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 5
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_28
.LBB115_35:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 10
	s_or_b32 exec_lo, exec_lo, s0
; %bb.36:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v2, off, s33 offset:224
	s_mov_b32 s0, 0xff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v2, s0
	v_bfe_u32 v1, v2, 8, 8
	v_add_nc_u32_e64 v0, v0, v1
	v_bfe_u32 v1, v2, 16, 8
	s_mov_b32 s0, 24
	v_lshrrev_b32_e64 v2, s0, v2
	v_add3_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:228
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0
	v_cmp_eq_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 14
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_37
	s_branch .LBB115_39
.LBB115_37:                             ; %Flow6
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 14
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 15
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:348 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 16
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_40
; %bb.38:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:352 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:352 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:348 ; 4-byte Folded Spill
	s_branch .LBB115_40
.LBB115_39:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 15
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_37
.LBB115_40:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 16
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:348 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:228
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 17
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_41
	s_branch .LBB115_43
.LBB115_41:                             ; %Flow5
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 17
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 18
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:356 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 19
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_44
; %bb.42:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:360 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:360 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -2
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:356 ; 4-byte Folded Spill
	s_branch .LBB115_44
.LBB115_43:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 18
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_41
.LBB115_44:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 19
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:356 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:228
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s2, s0
	v_and_b32_e64 v0, v0, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 20
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_45
	s_branch .LBB115_47
.LBB115_45:                             ; %Flow4
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 20
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 21
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:364 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 22
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_48
; %bb.46:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:52
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:368 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:368 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -3
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:364 ; 4-byte Folded Spill
	s_branch .LBB115_48
.LBB115_47:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 21
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_45
.LBB115_48:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 22
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:364 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:228
	scratch_load_b32 v2, off, s33 offset:232
	s_mov_b32 s0, 0xff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v0, v2, s0
	v_bfe_u32 v1, v2, 8, 8
	v_add_nc_u32_e64 v0, v0, v1
	v_bfe_u32 v1, v2, 16, 8
	s_mov_b32 s0, 24
	v_lshrrev_b32_e64 v2, s0, v2
	v_add3_u32 v0, v0, v1, v2
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0
	v_cmp_eq_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 23
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_49
	s_branch .LBB115_51
.LBB115_49:                             ; %Flow3
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 23
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 24
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:372 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 25
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_52
; %bb.50:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:376 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:376 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -1
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:372 ; 4-byte Folded Spill
	s_branch .LBB115_52
.LBB115_51:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 24
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_49
.LBB115_52:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 25
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:372 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; kill: def $sgpr0 killed $sgpr0 killed $sgpr0_sgpr1
	v_and_b32_e64 v0, v0, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 26
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_53
	s_branch .LBB115_55
.LBB115_53:                             ; %Flow2
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 26
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 27
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:380 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 28
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_56
; %bb.54:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:384 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:384 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -2
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:380 ; 4-byte Folded Spill
	s_branch .LBB115_56
.LBB115_55:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 27
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_53
.LBB115_56:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 28
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:380 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v1
	s_mov_b64 s[0:1], 3
	s_mov_b32 s2, s1
	v_and_b32_e64 v2, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
	s_mov_b32 s2, s0
	v_and_b32_e64 v0, v0, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_cmp_lt_u64_e64 s0, v[0:1], s[0:1]
                                        ; implicit-def: $sgpr1
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 29
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_57
	s_branch .LBB115_59
.LBB115_57:                             ; %Flow1
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 29
	s_or_saveexec_b32 s0, s0
	v_readlane_b32 s1, v42, 30
	v_mov_b32_e32 v0, s1
	scratch_store_b32 off, v0, s33 offset:388 ; 4-byte Folded Spill
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 31
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_60
; %bb.58:                               ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:392 ; 4-byte Folded Spill
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b32 v1, off, s33 offset:392 ; 4-byte Folded Reload
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr2 killed $vgpr2 def $vgpr2_vgpr3 killed $exec
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v2
	s_mov_b32 s0, -3
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, s0
	ds_load_u8 v0, v0
	s_waitcnt lgkmcnt(0)
	scratch_store_b32 off, v0, s33 offset:388 ; 4-byte Folded Spill
	s_branch .LBB115_60
.LBB115_59:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_writelane_b32 v42, s0, 30
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:252 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_57
.LBB115_60:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:252 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(1)
	v_readlane_b32 s0, v41, 31
	s_or_b32 exec_lo, exec_lo, s0
	s_waitcnt vmcnt(0)
	v_readlane_b32 s15, v42, 2
	v_readlane_b32 s14, v42, 3
	v_readlane_b32 s13, v42, 4
	v_readlane_b32 s12, v42, 5
	v_readlane_b32 s10, v42, 6
	v_readlane_b32 s11, v42, 7
	v_readlane_b32 s8, v42, 8
	v_readlane_b32 s9, v42, 9
	v_readlane_b32 s6, v42, 0
	v_readlane_b32 s7, v42, 1
	v_readlane_b32 s4, v42, 10
	v_readlane_b32 s5, v42, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	scratch_load_b32 v1, off, s33 offset:388 ; 4-byte Folded Reload
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_local_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_local_idj@rel32@hi+12
	v_mov_b32_e32 v0, 0
	s_swappc_b64 s[30:31], s[0:1]
	v_mov_b32_e32 v2, v1
                                        ; implicit-def: $sgpr0
                                        ; implicit-def: $sgpr0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	s_mov_b64 s[0:1], 0xff
	v_cmp_eq_u64_e64 s1, v[0:1], s[0:1]
	s_mov_b32 s0, exec_lo
                                        ; implicit-def: $vgpr42 : SGPR spill to VGPR lane
	v_writelane_b32 v42, s0, 0
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:256 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_62
; %bb.61:                               ;   in Loop: Header=BB115_1 Depth=1
	scratch_load_b32 v0, off, s33 offset:228
	scratch_load_b32 v1, off, s33 offset:52
	s_waitcnt vmcnt(0)
	ds_load_u8 v1, v1 offset:255
	s_waitcnt lgkmcnt(0)
	v_add_nc_u32_e64 v1, v0, v1
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	ds_store_b32 v0, v1
	scratch_load_b32 v0, off, s33 offset:236
	scratch_load_b32 v1, off, s33 offset:56
	s_waitcnt vmcnt(0)
	ds_load_u8 v1, v1 offset:255
	s_waitcnt lgkmcnt(0)
	v_add_nc_u32_e64 v1, v0, v1
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	ds_store_b32 v0, v1
.LBB115_62:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:256 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 0
	s_or_b32 exec_lo, exec_lo, s0
	v_readlane_b32 s15, v41, 2
	v_readlane_b32 s14, v41, 3
	v_readlane_b32 s13, v41, 4
	v_readlane_b32 s12, v41, 5
	v_readlane_b32 s10, v41, 6
	v_readlane_b32 s11, v41, 7
	v_readlane_b32 s8, v41, 8
	v_readlane_b32 s9, v41, 9
	v_readlane_b32 s6, v41, 0
	v_readlane_b32 s7, v41, 1
	v_readlane_b32 s4, v41, 10
	v_readlane_b32 s5, v41, 11
	scratch_load_b32 v31, off, s33 offset:260 ; 4-byte Folded Reload
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z7barrierj@rel32@lo+4
	s_addc_u32 s1, s1, _Z7barrierj@rel32@hi+12
	v_mov_b32_e32 v0, 1
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v0, off, s33 offset:160
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_eq_u32_e64 s0, v0, s0
	s_mov_b32 s1, exec_lo
	s_and_b32 s0, s1, s0
	s_xor_b32 s1, s0, s1
	v_writelane_b32 v42, s1, 1
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:256 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_66
	s_branch .LBB115_64
.LBB115_63:                             ;   in Loop: Header=BB115_1 Depth=1
	scratch_load_b32 v0, off, s33 offset:228
	scratch_load_b32 v1, off, s33 offset:88
	scratch_load_b32 v2, off, s33 offset:84
	s_waitcnt vmcnt(0)
	v_add3_u32 v0, v0, v1, v2
	s_mov_b32 s0, 0xfff
	v_and_b32_e64 v0, v0, s0
	scratch_store_b32 off, v0, s33 offset:228
	scratch_load_b128 v[2:5], off, s33 offset:96
	scratch_load_b64 v[10:11], off, s33 offset:24
	scratch_load_b32 v0, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_lshl_add_u32 v0, v0, 1, v0
	s_mov_b32 s2, 0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	s_mov_b32 s0, 4
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s1, v0, v7
	v_add_co_ci_u32_e64 v6, s1, v1, v6, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off offset:16
	scratch_load_b128 v[2:5], off, s33 offset:112
	scratch_load_b64 v[10:11], off, s33 offset:24
	scratch_load_b32 v6, off, s33 offset:228
	s_mov_b32 s1, 3
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s3, v6, s1, 1
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s3, v0, v7
	v_add_co_ci_u32_e64 v6, s3, v1, v6, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off offset:16
	scratch_load_b128 v[2:5], off, s33 offset:128
	scratch_load_b64 v[10:11], off, s33 offset:24
	scratch_load_b32 v6, off, s33 offset:228
	s_waitcnt vmcnt(0)
	v_mad_u64_u32 v[0:1], s1, v6, s1, 2
                                        ; kill: def $vgpr0 killed $vgpr0 killed $vgpr0_vgpr1 killed $exec
                                        ; implicit-def: $sgpr1
	v_mov_b32_e32 v6, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	v_lshlrev_b64 v[8:9], s0, v[0:1]
	v_mov_b32_e32 v0, v10
	v_mov_b32_e32 v7, v8
	v_mov_b32_e32 v1, v11
	v_mov_b32_e32 v6, v9
	v_add_co_u32 v0, s0, v0, v7
	v_add_co_ci_u32_e64 v6, s0, v1, v6, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v6
	global_store_b128 v[0:1], v[2:5], off offset:16
	scratch_load_b32 v2, off, s33 offset:144
	scratch_load_b64 v[0:1], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:228
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_mov_b32 s1, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s0, v3, v4
	v_add_co_ci_u32_e64 v0, s0, v0, v1, s0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x34000
	v_add_co_u32 v0, s3, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:152
	scratch_load_b64 v[0:1], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:228
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s3, v3, v4
	v_add_co_ci_u32_e64 v0, s3, v0, v1, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s3, 0x38000
	v_add_co_u32 v0, s3, s3, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:148
	scratch_load_b64 v[0:1], off, s33 offset:24
	scratch_load_b32 v3, off, s33 offset:228
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s1, v3, v4
	v_add_co_ci_u32_e64 v0, s1, v0, v1, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s1, 0x30000
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	s_branch .LBB115_68
.LBB115_64:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:256 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	scratch_load_b32 v0, off, s33 offset:164
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u32_e64 s1, v0, s0
	s_mov_b32 s0, exec_lo
	v_writelane_b32 v42, s0, 2
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:256 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_and_b32 s0, s0, s1
	s_mov_b32 exec_lo, s0
	s_cbranch_execz .LBB115_67
; %bb.65:                               ;   in Loop: Header=BB115_1 Depth=1
	scratch_load_b32 v0, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b32 v1, v0, off
	scratch_load_b32 v0, off, s33 offset:236
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, v1
	scratch_store_b32 off, v0, s33 offset:236
	scratch_load_b64 v[1:2], off, s33 offset:32
	s_mov_b32 s2, 0
	scratch_load_b32 v3, off, s33 offset:236
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s1, 2
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[4:5], s1, v[3:4]
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s0, v0, v3
	v_add_co_ci_u32_e64 v2, s0, v1, v2, s0
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, 3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:148
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:236
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s0, v3, v4
	v_add_co_ci_u32_e64 v0, s0, v0, v1, s0
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s0, 0x4000
	v_add_co_u32 v0, s3, s0, v0
	v_mov_b32_e32 v1, v4
	s_mov_b32 s0, 0
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:164
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:236
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s3, v3, v4
	v_add_co_ci_u32_e64 v0, s3, v0, v1, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s3, 0x8000
	v_add_co_u32 v0, s3, s3, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s3, s0, v1, s3
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	scratch_load_b32 v2, off, s33 offset:152
	scratch_load_b64 v[0:1], off, s33 offset:32
	scratch_load_b32 v3, off, s33 offset:236
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v5, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v5
	s_waitcnt vmcnt(0)
	v_lshlrev_b64 v[5:6], s1, v[3:4]
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v4, v5
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v1, v6
	v_add_co_u32 v3, s1, v3, v4
	v_add_co_ci_u32_e64 v0, s1, v0, v1, s1
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s1, 0xc000
	v_add_co_u32 v0, s1, s1, v0
	v_mov_b32_e32 v1, v4
	v_add_co_ci_u32_e64 v3, s0, s0, v1, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v3
	global_store_b32 v[0:1], v2, off offset:16
	s_branch .LBB115_67
.LBB115_66:                             ; %Flow
                                        ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:256 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 1
	s_or_saveexec_b32 s0, s0
	s_and_b32 s0, exec_lo, s0
	v_writelane_b32 v42, s0, 3
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:256 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz .LBB115_68
	s_branch .LBB115_63
.LBB115_67:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:256 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 2
	s_or_b32 exec_lo, exec_lo, s0
	s_branch .LBB115_66
.LBB115_68:                             ;   in Loop: Header=BB115_1 Depth=1
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v41, off, s33 offset:256 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(1)
	v_readlane_b32 s1, v41, 3
	s_or_b32 exec_lo, exec_lo, s1
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 15
	scratch_load_b32 v0, off, s33 offset:68
	s_waitcnt vmcnt(0)
	ds_load_b32 v2, v0
	scratch_load_b32 v1, off, s33 offset:80
	s_waitcnt vmcnt(0)
	scratch_load_b32 v0, v1, off
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_nc_u32_e64 v0, v0, v2
	scratch_store_b32 v1, v0, off
	scratch_load_b32 v0, off, s33 offset:88
	s_mov_b32 s1, 0x100
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e64 v0, v0, s1
	scratch_store_b32 off, v0, s33 offset:88
	scratch_load_b32 v0, off, s33 offset:64
	s_waitcnt vmcnt(0)
	ds_load_b32 v0, v0
	scratch_load_b32 v1, off, s33 offset:84
	s_mov_b32 s1, 0xffffff00
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add3_u32 v0, v0, v1, s1
	scratch_store_b32 off, v0, s33 offset:84
	s_mov_b32 s1, 0
	s_and_not1_b32 s0, s0, exec_lo
	v_writelane_b32 v42, s0, 16
	s_or_saveexec_b32 s27, -1
	scratch_store_b32 off, v42, s33 offset:248 ; 4-byte Folded Spill
	s_mov_b32 exec_lo, s27
	s_branch .LBB115_9
.LBB115_69:
	s_or_saveexec_b32 s27, -1
	scratch_load_b32 v42, off, s33 offset:248 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s27
	s_waitcnt vmcnt(0)
	v_readlane_b32 s0, v42, 23
	s_or_b32 exec_lo, exec_lo, s0
; %bb.70:
	scratch_load_b32 v0, off, s33 offset:88
	s_mov_b32 s0, 0xfff
	s_waitcnt vmcnt(0)
	v_and_b32_e64 v2, v0, s0
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	global_store_b32 v[0:1], v2, off
	scratch_load_b32 v2, off, s33 offset:84
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	global_store_b32 v[0:1], v2, off offset:4
	v_readlane_b32 s30, v40, 0
	v_readlane_b32 s31, v40, 1
	scratch_load_b32 v47, off, s33          ; 4-byte Folded Reload
	scratch_load_b32 v46, off, s33 offset:4 ; 4-byte Folded Reload
	scratch_load_b32 v45, off, s33 offset:8 ; 4-byte Folded Reload
	scratch_load_b32 v44, off, s33 offset:12 ; 4-byte Folded Reload
	s_or_saveexec_b32 s0, -1
	scratch_load_b32 v40, off, s33 offset:396 ; 4-byte Folded Reload
	scratch_load_b32 v41, off, s33 offset:400 ; 4-byte Folded Reload
	scratch_load_b32 v42, off, s33 offset:404 ; 4-byte Folded Reload
	s_mov_b32 exec_lo, s0
	s_add_i32 s32, s32, 0xfffffe60
	s_mov_b32 s33, s28
	s_waitcnt vmcnt(0)
	s_setpc_b64 s[30:31]
.Lfunc_end115:
	.size	doFermatTestBt, .Lfunc_end115-doFermatTestBt
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Function info:
; codeLenInByte = 13384
; NumSgprs: 36
; NumVgprs: 50
; ScratchSize: 3424
; MemoryBound: 0
	.text
	.protected	FermatTestEnqueue       ; -- Begin function FermatTestEnqueue
	.globl	FermatTestEnqueue
	.p2align	8
	.type	FermatTestEnqueue,@function
FermatTestEnqueue:                      ; @FermatTestEnqueue
; %bb.0:
	s_mov_b32 s32, 0xe0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr43 : SGPR spill to VGPR lane
	v_writelane_b32 v43, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v43, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v43, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v43, s10, 3
	v_writelane_b32 v43, s11, 4
	v_writelane_b32 v43, s2, 5
	v_writelane_b32 v43, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v43, 5
	v_readlane_b32 s1, v43, 6
	v_writelane_b32 v43, s4, 7
	v_writelane_b32 v43, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:160 ; 4-byte Folded Spill
	s_load_b64 s[26:27], s[0:1], 0x0
	s_load_b64 s[24:25], s[0:1], 0x8
	s_load_b64 s[22:23], s[0:1], 0x10
	s_load_b64 s[20:21], s[0:1], 0x18
	s_load_b64 s[18:19], s[0:1], 0x20
	s_load_b64 s[16:17], s[0:1], 0x28
	s_load_b64 s[8:9], s[0:1], 0x30
	s_load_b64 s[6:7], s[0:1], 0x38
	s_load_b64 s[2:3], s[0:1], 0x40
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s26
	v_mov_b32_e32 v1, s27
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s24
	v_mov_b32_e32 v1, s25
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s22
	v_mov_b32_e32 v1, s23
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s20
	v_mov_b32_e32 v1, s21
	scratch_store_b64 off, v[0:1], s33 offset:32
	v_mov_b32_e32 v0, s18
	v_mov_b32_e32 v1, s19
	scratch_store_b64 off, v[0:1], s33 offset:40
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:48
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:56
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:64
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:204 ; 8-byte Folded Spill
	s_mov_b64 s[6:7], 0x48
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v43, s8, 9
	v_writelane_b32 v43, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_group_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_group_idj@rel32@hi+12
	v_writelane_b32 v43, s0, 11
	v_writelane_b32 v43, s1, 12
	v_mov_b32_e32 v8, 0
	scratch_store_b32 off, v8, s33 offset:156 ; 4-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:204 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s3, 0x2410
	v_mad_u64_u32 v[5:6], s2, v0, s3, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	s_mov_b32 s2, 32
	v_writelane_b32 v43, s2, 13
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s3, v0, s3, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	s_mov_b32 s2, 0
	v_writelane_b32 v43, s2, 14
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:80
	scratch_load_b64 v[0:1], off, s33 offset:48
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:196 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s2, v43, 14
	v_readlane_b32 s3, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:196 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s6, 0x3c010
	v_writelane_b32 v43, s6, 15
	v_mad_u64_u32 v[5:6], s7, v0, s6, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s7
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s6, v0, s6, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:88
	scratch_load_b64 v[0:1], off, s33 offset:56
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:188 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s6, v43, 15
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s2, v43, 14
	v_readlane_b32 s3, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:188 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[5:6], s7, v0, s6, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s7
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s6, v0, s6, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:180 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s2, v43, 14
	v_readlane_b32 s3, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:180 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s6, 0x10010
	v_mad_u64_u32 v[5:6], s7, v0, s6, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s7
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s6, v0, s6, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:104
	scratch_load_b64 v[0:1], off, s33 offset:24
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:172 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s2, v43, 14
	v_readlane_b32 s3, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:172 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s6, 0x1400000
	v_writelane_b32 v43, s6, 16
	v_mad_u64_u32 v[5:6], s7, v0, s6, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s7
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s6, v0, s6, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v3, v3, v4
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s2, 3
	v_writelane_b32 v43, s2, 17
	v_lshrrev_b64 v[4:5], s2, v[3:4]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:112
	scratch_load_b64 v[0:1], off, s33 offset:32
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:164 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s3, v43, 16
	v_readlane_b32 s2, v43, 14
	v_readlane_b32 s1, v43, 17
	v_readlane_b32 s0, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:164 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[5:6], s6, v0, s3, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s3, v0, s3, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v3, v3, v4
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshrrev_b64 v[4:5], s1, v[3:4]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:120
	scratch_store_b32 off, v8, s33 offset:128
	scratch_load_b64 v[20:21], off, s33 offset:80
	scratch_load_b64 v[18:19], off, s33 offset:88
	scratch_load_b64 v[13:14], off, s33 offset:104
	scratch_load_b64 v[11:12], off, s33 offset:112
	scratch_load_b64 v[9:10], off, s33 offset:16
	s_waitcnt vmcnt(4)
	v_lshrrev_b64 v[0:1], s0, v[20:21]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(3)
	v_lshrrev_b64 v[2:3], s0, v[18:19]
	v_mov_b32_e32 v3, v2
	s_waitcnt vmcnt(2)
	v_lshrrev_b64 v[4:5], s0, v[13:14]
	v_mov_b32_e32 v5, v4
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[6:7], s0, v[11:12]
	v_mov_b32_e32 v7, v6
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[15:16], s0, v[9:10]
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	s_add_i32 s0, s33, 0x80
	v_mov_b32_e32 v17, s0
                                        ; implicit-def: $sgpr0
	scratch_store_b32 off, v17, s33 offset:132 ; 4-byte Folded Spill
	v_mov_b32_e32 v0, v20
	v_mov_b32_e32 v2, v18
	v_mov_b32_e32 v4, v13
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v14, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, doFermatTestC12@rel32@lo+4
	s_addc_u32 s1, s1, doFermatTestC12@rel32@hi+12
	v_writelane_b32 v43, s0, 18
	v_writelane_b32 v43, s1, 19
	v_mov_b32_e32 v9, 0x400
	scratch_store_b32 off, v9, s33 offset:152 ; 4-byte Folded Spill
	v_mov_b32_e32 v10, 0x500
	scratch_store_b32 off, v10, s33 offset:148 ; 4-byte Folded Spill
	v_mov_b32_e32 v11, 0x600
	scratch_store_b32 off, v11, s33 offset:144 ; 4-byte Folded Spill
	v_mov_b32_e32 v12, 0x604
	scratch_store_b32 off, v12, s33 offset:140 ; 4-byte Folded Spill
	v_mov_b32_e32 v13, 0x608
	scratch_store_b32 off, v13, s33 offset:136 ; 4-byte Folded Spill
	v_mov_b32_e32 v16, 1
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:160 ; 4-byte Folded Reload
	scratch_load_b32 v8, off, s33 offset:156 ; 4-byte Folded Reload
	scratch_load_b32 v9, off, s33 offset:152 ; 4-byte Folded Reload
	scratch_load_b32 v10, off, s33 offset:148 ; 4-byte Folded Reload
	scratch_load_b32 v11, off, s33 offset:144 ; 4-byte Folded Reload
	scratch_load_b32 v12, off, s33 offset:140 ; 4-byte Folded Reload
	scratch_load_b32 v13, off, s33 offset:136 ; 4-byte Folded Reload
	scratch_load_b32 v17, off, s33 offset:132 ; 4-byte Folded Reload
	v_readlane_b32 s2, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s0, v43, 18
	v_readlane_b32 s1, v43, 19
	scratch_load_b64 v[26:27], off, s33 offset:80
	scratch_load_b64 v[24:25], off, s33 offset:96
	scratch_load_b64 v[22:23], off, s33 offset:104
	scratch_load_b64 v[20:21], off, s33 offset:120
	scratch_load_b64 v[18:19], off, s33 offset:16
	s_waitcnt vmcnt(4)
	v_lshrrev_b64 v[0:1], s2, v[26:27]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(3)
	v_lshrrev_b64 v[2:3], s2, v[24:25]
	v_mov_b32_e32 v3, v2
	s_waitcnt vmcnt(2)
	v_lshrrev_b64 v[4:5], s2, v[22:23]
	v_mov_b32_e32 v5, v4
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[6:7], s2, v[20:21]
	v_mov_b32_e32 v7, v6
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[14:15], s2, v[18:19]
	v_mov_b32_e32 v15, v14
	v_mov_b32_e32 v0, v26
	v_mov_b32_e32 v2, v24
	v_mov_b32_e32 v4, v22
	v_mov_b32_e32 v6, v20
	v_mov_b32_e32 v14, v18
	v_mov_b32_e32 v16, 2
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:128
	scratch_load_b64 v[0:1], off, s33 offset:104
	s_waitcnt vmcnt(0)
	global_store_b32 v[0:1], v2, off
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel FermatTestEnqueue
		.amdhsa_group_segment_fixed_size 1548
		.amdhsa_private_segment_fixed_size 3616
		.amdhsa_kernarg_size 328
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 50
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end116:
	.size	FermatTestEnqueue, .Lfunc_end116-FermatTestEnqueue
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 3044
; NumSgprs: 36
; NumVgprs: 50
; ScratchSize: 3616
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 1548 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 6
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 50
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	FermatTestEnqueueBt     ; -- Begin function FermatTestEnqueueBt
	.globl	FermatTestEnqueueBt
	.p2align	8
	.type	FermatTestEnqueueBt,@function
FermatTestEnqueueBt:                    ; @FermatTestEnqueueBt
; %bb.0:
	s_mov_b32 s32, 0xa0
	s_mov_b32 s33, 0
	s_mov_b32 s14, s8
                                        ; implicit-def: $vgpr43 : SGPR spill to VGPR lane
	v_writelane_b32 v43, s14, 0
	s_mov_b32 s13, s7
	v_writelane_b32 v43, s13, 1
	s_mov_b32 s12, s6
	v_writelane_b32 v43, s12, 2
	s_mov_b64 s[10:11], s[4:5]
	v_writelane_b32 v43, s10, 3
	v_writelane_b32 v43, s11, 4
	v_writelane_b32 v43, s2, 5
	v_writelane_b32 v43, s3, 6
	s_mov_b64 s[4:5], s[0:1]
	v_readlane_b32 s0, v43, 5
	v_readlane_b32 s1, v43, 6
	v_writelane_b32 v43, s4, 7
	v_writelane_b32 v43, s5, 8
	v_mov_b32_e32 v31, v0
	scratch_store_b32 off, v31, s33 offset:124 ; 4-byte Folded Spill
	s_load_b64 s[26:27], s[0:1], 0x0
	s_load_b64 s[24:25], s[0:1], 0x8
	s_load_b64 s[22:23], s[0:1], 0x10
	s_load_b64 s[20:21], s[0:1], 0x18
	s_load_b64 s[18:19], s[0:1], 0x20
	s_load_b64 s[16:17], s[0:1], 0x28
	s_load_b64 s[8:9], s[0:1], 0x30
	s_load_b64 s[6:7], s[0:1], 0x38
	s_load_b64 s[2:3], s[0:1], 0x40
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s26
	v_mov_b32_e32 v1, s27
	scratch_store_b64 off, v[0:1], s33 offset:8
	v_mov_b32_e32 v0, s24
	v_mov_b32_e32 v1, s25
	scratch_store_b64 off, v[0:1], s33 offset:16
	v_mov_b32_e32 v0, s22
	v_mov_b32_e32 v1, s23
	scratch_store_b64 off, v[0:1], s33 offset:24
	v_mov_b32_e32 v0, s20
	v_mov_b32_e32 v1, s21
	scratch_store_b64 off, v[0:1], s33 offset:32
	v_mov_b32_e32 v0, s18
	v_mov_b32_e32 v1, s19
	scratch_store_b64 off, v[0:1], s33 offset:40
	v_mov_b32_e32 v0, s16
	v_mov_b32_e32 v1, s17
	scratch_store_b64 off, v[0:1], s33 offset:48
	v_mov_b32_e32 v0, s8
	v_mov_b32_e32 v1, s9
	scratch_store_b64 off, v[0:1], s33 offset:56
	v_mov_b32_e32 v0, s6
	v_mov_b32_e32 v1, s7
	scratch_store_b64 off, v[0:1], s33 offset:64
	v_mov_b32_e32 v0, s2
	v_mov_b32_e32 v1, s3
	scratch_store_b64 off, v[0:1], s33 offset:72
	scratch_load_b64 v[0:1], off, s33 offset:8
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:144 ; 8-byte Folded Spill
	s_mov_b64 s[6:7], 0x48
	s_mov_b32 s2, s0
	s_mov_b32 s0, s1
	s_mov_b32 s3, s6
	s_mov_b32 s1, s7
	s_add_u32 s8, s2, s3
	s_addc_u32 s0, s0, s1
                                        ; kill: def $sgpr8 killed $sgpr8 def $sgpr8_sgpr9
	s_mov_b32 s9, s0
	v_writelane_b32 v43, s8, 9
	v_writelane_b32 v43, s9, 10
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, _Z12get_group_idj@rel32@lo+4
	s_addc_u32 s1, s1, _Z12get_group_idj@rel32@hi+12
	v_writelane_b32 v43, s0, 11
	v_writelane_b32 v43, s1, 12
	v_mov_b32_e32 v8, 0
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:124 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:144 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s3, 0x2410
	v_mad_u64_u32 v[5:6], s2, v0, s3, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	s_mov_b32 s2, 32
	v_writelane_b32 v43, s2, 13
	v_lshrrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s3, v0, s3, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s2, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
	s_mov_b32 s2, 0
	v_writelane_b32 v43, s2, 14
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:80
	scratch_load_b64 v[0:1], off, s33 offset:64
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:136 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:124 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s2, v43, 14
	v_readlane_b32 s3, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:136 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s6, 0x3c010
	v_mad_u64_u32 v[5:6], s7, v0, s6, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s7
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s6, v0, s6, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:88
	scratch_load_b64 v[0:1], off, s33 offset:72
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:128 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:124 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s0, v43, 11
	v_readlane_b32 s1, v43, 12
	v_readlane_b32 s2, v43, 14
	v_readlane_b32 s3, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:128 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s6, 0x10010
	v_mad_u64_u32 v[5:6], s7, v0, s6, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr15
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, s7
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s6, v0, s6, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr7
                                        ; implicit-def: $sgpr7
	v_mov_b32_e32 v0, s6
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s3, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v4, v3, v4
                                        ; kill: def $vgpr4 killed $vgpr4 def $vgpr4_vgpr5 killed $exec
	v_mov_b32_e32 v5, v0
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s2, v0, v3
	v_add_co_ci_u32_e64 v2, s2, v1, v2, s2
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:96
	scratch_load_b64 v[0:1], off, s33 offset:40
	s_waitcnt vmcnt(0)
	scratch_store_b64 off, v[0:1], s33 offset:116 ; 8-byte Folded Spill
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	v_mov_b32_e32 v0, v8
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v31, off, s33 offset:124 ; 4-byte Folded Reload
	v_readlane_b32 s14, v43, 0
	v_readlane_b32 s13, v43, 1
	v_readlane_b32 s12, v43, 2
	v_readlane_b32 s10, v43, 3
	v_readlane_b32 s11, v43, 4
	v_readlane_b32 s8, v43, 9
	v_readlane_b32 s9, v43, 10
	v_readlane_b32 s1, v43, 14
	v_readlane_b32 s0, v43, 13
	v_readlane_b32 s4, v43, 7
	v_readlane_b32 s5, v43, 8
	v_mov_b32_e32 v3, v0
	v_mov_b32_e32 v0, v1
	scratch_load_b64 v[1:2], off, s33 offset:116 ; 8-byte Folded Reload
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_mov_b32_e32 v0, v3
	s_mov_b32 s2, 0x1400000
	v_mad_u64_u32 v[5:6], s3, v0, s2, 0
	v_mov_b32_e32 v9, v6
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr6
                                        ; implicit-def: $sgpr6
	v_mov_b32_e32 v0, s3
                                        ; kill: def $vgpr9 killed $vgpr9 def $vgpr9_vgpr10 killed $exec
	v_mov_b32_e32 v10, v0
	v_lshrrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v0, v3
	v_mad_u64_u32 v[3:4], s2, v0, s2, v[9:10]
                                        ; kill: def $vgpr3 killed $vgpr3 killed $vgpr3_vgpr4 killed $exec
                                        ; implicit-def: $sgpr2
                                        ; implicit-def: $sgpr3
                                        ; implicit-def: $sgpr3
	v_mov_b32_e32 v0, s2
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	v_lshlrev_b64 v[3:4], s0, v[3:4]
	v_mov_b32_e32 v7, v4
                                        ; kill: def $vgpr5 killed $vgpr5 killed $vgpr5_vgpr6 killed $exec
                                        ; implicit-def: $sgpr2
	v_mov_b32_e32 v0, s1
                                        ; kill: def $vgpr5 killed $vgpr5 def $vgpr5_vgpr6 killed $exec
	v_mov_b32_e32 v6, v0
	v_mov_b32_e32 v0, v6
	v_or_b32_e64 v0, v0, v7
	v_mov_b32_e32 v4, v3
	v_mov_b32_e32 v3, v5
	v_or_b32_e64 v3, v3, v4
                                        ; kill: def $vgpr3 killed $vgpr3 def $vgpr3_vgpr4 killed $exec
	v_mov_b32_e32 v4, v0
	s_mov_b32 s1, 3
	v_lshrrev_b64 v[4:5], s1, v[3:4]
	s_waitcnt vmcnt(0)
	v_mov_b32_e32 v0, v1
	v_mov_b32_e32 v3, v4
	v_mov_b32_e32 v1, v2
	v_mov_b32_e32 v2, v5
	v_add_co_u32 v0, s1, v0, v3
	v_add_co_ci_u32_e64 v2, s1, v1, v2, s1
                                        ; kill: def $vgpr0 killed $vgpr0 def $vgpr0_vgpr1 killed $exec
	v_mov_b32_e32 v1, v2
	scratch_store_b64 off, v[0:1], s33 offset:104
	scratch_load_b64 v[0:1], off, s33 offset:96
	s_waitcnt vmcnt(0)
	global_load_b32 v0, v[0:1], off
	s_waitcnt vmcnt(0)
	scratch_store_b32 off, v0, s33 offset:112
	scratch_load_b64 v[19:20], off, s33 offset:80
	scratch_load_b64 v[17:18], off, s33 offset:88
	scratch_load_b64 v[13:14], off, s33 offset:96
	scratch_load_b64 v[11:12], off, s33 offset:104
	scratch_load_b64 v[9:10], off, s33 offset:16
	s_waitcnt vmcnt(4)
	v_lshrrev_b64 v[0:1], s0, v[19:20]
	v_mov_b32_e32 v1, v0
	s_waitcnt vmcnt(3)
	v_lshrrev_b64 v[2:3], s0, v[17:18]
	v_mov_b32_e32 v3, v2
	s_waitcnt vmcnt(2)
	v_lshrrev_b64 v[4:5], s0, v[13:14]
	v_mov_b32_e32 v5, v4
	s_waitcnt vmcnt(1)
	v_lshrrev_b64 v[6:7], s0, v[11:12]
	v_mov_b32_e32 v7, v6
	s_waitcnt vmcnt(0)
	v_lshrrev_b64 v[15:16], s0, v[9:10]
                                        ; kill: def $vgpr15 killed $vgpr15 killed $vgpr15_vgpr16 killed $exec
	s_add_i32 s0, s33, 0x70
	v_mov_b32_e32 v16, s0
                                        ; implicit-def: $sgpr0
	v_mov_b32_e32 v0, v19
	v_mov_b32_e32 v2, v17
	v_mov_b32_e32 v4, v13
	v_mov_b32_e32 v6, v11
	v_mov_b32_e32 v14, v9
	s_getpc_b64 s[0:1]
	s_add_u32 s0, s0, doFermatTestBt@rel32@lo+4
	s_addc_u32 s1, s1, doFermatTestBt@rel32@hi+12
	v_mov_b32_e32 v9, 0x400
	v_mov_b32_e32 v10, 0x500
	v_mov_b32_e32 v11, 0x600
	v_mov_b32_e32 v12, 0x604
	v_mov_b32_e32 v13, 0x608
                                        ; implicit-def: $sgpr6_sgpr7
                                        ; implicit-def: $sgpr15
	s_swappc_b64 s[30:31], s[0:1]
	scratch_load_b32 v2, off, s33 offset:112
	scratch_load_b64 v[0:1], off, s33 offset:96
	s_waitcnt vmcnt(0)
	global_store_b32 v[0:1], v2, off
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel FermatTestEnqueueBt
		.amdhsa_group_segment_fixed_size 1548
		.amdhsa_private_segment_fixed_size 3584
		.amdhsa_kernarg_size 328
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 50
		.amdhsa_next_free_sgpr 34
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end117:
	.size	FermatTestEnqueueBt, .Lfunc_end117-FermatTestEnqueueBt
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 2004
; NumSgprs: 36
; NumVgprs: 50
; ScratchSize: 3584
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 1548 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 6
; NumSGPRsForWavesPerEU: 36
; NumVGPRsForWavesPerEU: 50
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.protected	empty                   ; -- Begin function empty
	.globl	empty
	.p2align	8
	.type	empty,@function
empty:                                  ; @empty
; %bb.0:
	s_mov_b32 s33, 0
	s_endpgm
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel empty
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 256
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 1
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 1
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 2
		.amdhsa_next_free_vgpr 1
		.amdhsa_next_free_sgpr 34
		.amdhsa_reserve_vcc 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_shared_vgpr_count 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end118:
	.size	empty, .Lfunc_end118-empty
                                        ; -- End function
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 8
; NumSgprs: 34
; NumVgprs: 0
; ScratchSize: 0
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 0
; NumSGPRsForWavesPerEU: 34
; NumVGPRsForWavesPerEU: 1
; Occupancy: 16
; WaveLimiterHint : 0
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 1
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 2
	.text
	.p2alignl 7, 3214868480
	.fill 96, 4, 3214868480
	.hidden	ES                              ; @ES
	.type	ES,@object
	.section	.rodata,"a",@progbits
	.globl	ES
	.p2align	2, 0x0
ES:
	.long	16711935                        ; 0xff00ff
	.long	4278255360                      ; 0xff00ff00
	.size	ES, 8

	.hidden	K                               ; @K
	.type	K,@object
	.globl	K
	.p2align	2, 0x0
K:
	.long	1116352408                      ; 0x428a2f98
	.long	1899447441                      ; 0x71374491
	.long	3049323471                      ; 0xb5c0fbcf
	.long	3921009573                      ; 0xe9b5dba5
	.long	961987163                       ; 0x3956c25b
	.long	1508970993                      ; 0x59f111f1
	.long	2453635748                      ; 0x923f82a4
	.long	2870763221                      ; 0xab1c5ed5
	.long	3624381080                      ; 0xd807aa98
	.long	310598401                       ; 0x12835b01
	.long	607225278                       ; 0x243185be
	.long	1426881987                      ; 0x550c7dc3
	.long	1925078388                      ; 0x72be5d74
	.long	2162078206                      ; 0x80deb1fe
	.long	2614888103                      ; 0x9bdc06a7
	.long	3835390401                      ; 0xe49b69c1
	.long	4022224774                      ; 0xefbe4786
	.long	264347078                       ; 0xfc19dc6
	.long	604807628                       ; 0x240ca1cc
	.long	770255983                       ; 0x2de92c6f
	.long	1249150122                      ; 0x4a7484aa
	.long	1555081692                      ; 0x5cb0a9dc
	.long	1996064986                      ; 0x76f988da
	.long	2554220882                      ; 0x983e5152
	.long	2821834349                      ; 0xa831c66d
	.long	2952996808                      ; 0xb00327c8
	.long	3210313671                      ; 0xbf597fc7
	.long	3336571891                      ; 0xc6e00bf3
	.long	3584528711                      ; 0xd5a79147
	.long	113926993                       ; 0x6ca6351
	.long	338241895                       ; 0x14292967
	.long	666307205                       ; 0x27b70a85
	.long	773529912                       ; 0x2e1b2138
	.long	1294757372                      ; 0x4d2c6dfc
	.long	1396182291                      ; 0x53380d13
	.long	1695183700                      ; 0x650a7354
	.long	1986661051                      ; 0x766a0abb
	.long	2177026350                      ; 0x81c2c92e
	.long	2456956037                      ; 0x92722c85
	.long	2730485921                      ; 0xa2bfe8a1
	.long	2820302411                      ; 0xa81a664b
	.long	3259730800                      ; 0xc24b8b70
	.long	3345764771                      ; 0xc76c51a3
	.long	3516065817                      ; 0xd192e819
	.long	3600352804                      ; 0xd6990624
	.long	4094571909                      ; 0xf40e3585
	.long	275423344                       ; 0x106aa070
	.long	430227734                       ; 0x19a4c116
	.long	506948616                       ; 0x1e376c08
	.long	659060556                       ; 0x2748774c
	.long	883997877                       ; 0x34b0bcb5
	.long	958139571                       ; 0x391c0cb3
	.long	1322822218                      ; 0x4ed8aa4a
	.long	1537002063                      ; 0x5b9cca4f
	.long	1747873779                      ; 0x682e6ff3
	.long	1955562222                      ; 0x748f82ee
	.long	2024104815                      ; 0x78a5636f
	.long	2227730452                      ; 0x84c87814
	.long	2361852424                      ; 0x8cc70208
	.long	2428436474                      ; 0x90befffa
	.long	2756734187                      ; 0xa4506ceb
	.long	3204031479                      ; 0xbef9a3f7
	.long	3329325298                      ; 0xc67178f2
	.long	2563236514                      ; 0x98c7e2a2
	.long	4228417613                      ; 0xfc08884d
	.long	3442086318                      ; 0xcd2a11ae
	.long	1359893119                      ; 0x510e527f
	.long	2600822924                      ; 0x9b05688c
	.long	3281063054                      ; 0xc3910c8e
	.long	4218416871                      ; 0xfb6feee7
	.long	704751109                       ; 0x2a01a605
	.long	204346080                       ; 0xc2e12e0
	.long	1150833019                      ; 0x4498517b
	.long	1779033703                      ; 0x6a09e667
	.long	2764969099                      ; 0xa4ce148b
	.long	2515933593                      ; 0x95f61999
	.long	3248222580                      ; 0xc19bf174
	.long	3144134277                      ; 0xbb67ae85
	.long	1013904242                      ; 0x3c6ef372
	.long	2773480762                      ; 0xa54ff53a
	.long	528734635                       ; 0x1f83d9ab
	.long	1541459225                      ; 0x5be0cd19
	.long	1549556828                      ; 0x5c5c5c5c
	.long	909522486                       ; 0x36363636
	.long	2147483648                      ; 0x80000000
	.long	1023                            ; 0x3ff
	.long	640                             ; 0x280
	.long	1184                            ; 0x4a0
	.long	768                             ; 0x300
	.size	K, 356

	.hidden	binvert_limb_table              ; @binvert_limb_table
	.type	binvert_limb_table,@object
	.globl	binvert_limb_table
	.p2align	2, 0x0
binvert_limb_table:
	.long	1                               ; 0x1
	.long	171                             ; 0xab
	.long	205                             ; 0xcd
	.long	183                             ; 0xb7
	.long	57                              ; 0x39
	.long	163                             ; 0xa3
	.long	197                             ; 0xc5
	.long	239                             ; 0xef
	.long	241                             ; 0xf1
	.long	27                              ; 0x1b
	.long	61                              ; 0x3d
	.long	167                             ; 0xa7
	.long	41                              ; 0x29
	.long	19                              ; 0x13
	.long	53                              ; 0x35
	.long	223                             ; 0xdf
	.long	225                             ; 0xe1
	.long	139                             ; 0x8b
	.long	173                             ; 0xad
	.long	151                             ; 0x97
	.long	25                              ; 0x19
	.long	131                             ; 0x83
	.long	165                             ; 0xa5
	.long	207                             ; 0xcf
	.long	209                             ; 0xd1
	.long	251                             ; 0xfb
	.long	29                              ; 0x1d
	.long	135                             ; 0x87
	.long	9                               ; 0x9
	.long	243                             ; 0xf3
	.long	21                              ; 0x15
	.long	191                             ; 0xbf
	.long	193                             ; 0xc1
	.long	107                             ; 0x6b
	.long	141                             ; 0x8d
	.long	119                             ; 0x77
	.long	249                             ; 0xf9
	.long	99                              ; 0x63
	.long	133                             ; 0x85
	.long	175                             ; 0xaf
	.long	177                             ; 0xb1
	.long	219                             ; 0xdb
	.long	253                             ; 0xfd
	.long	103                             ; 0x67
	.long	233                             ; 0xe9
	.long	211                             ; 0xd3
	.long	245                             ; 0xf5
	.long	159                             ; 0x9f
	.long	161                             ; 0xa1
	.long	75                              ; 0x4b
	.long	109                             ; 0x6d
	.long	87                              ; 0x57
	.long	217                             ; 0xd9
	.long	67                              ; 0x43
	.long	101                             ; 0x65
	.long	143                             ; 0x8f
	.long	145                             ; 0x91
	.long	187                             ; 0xbb
	.long	221                             ; 0xdd
	.long	71                              ; 0x47
	.long	201                             ; 0xc9
	.long	179                             ; 0xb3
	.long	213                             ; 0xd5
	.long	127                             ; 0x7f
	.long	129                             ; 0x81
	.long	43                              ; 0x2b
	.long	77                              ; 0x4d
	.long	55                              ; 0x37
	.long	185                             ; 0xb9
	.long	35                              ; 0x23
	.long	69                              ; 0x45
	.long	111                             ; 0x6f
	.long	113                             ; 0x71
	.long	155                             ; 0x9b
	.long	189                             ; 0xbd
	.long	39                              ; 0x27
	.long	169                             ; 0xa9
	.long	147                             ; 0x93
	.long	181                             ; 0xb5
	.long	95                              ; 0x5f
	.long	97                              ; 0x61
	.long	11                              ; 0xb
	.long	45                              ; 0x2d
	.long	23                              ; 0x17
	.long	153                             ; 0x99
	.long	3                               ; 0x3
	.long	37                              ; 0x25
	.long	79                              ; 0x4f
	.long	81                              ; 0x51
	.long	123                             ; 0x7b
	.long	157                             ; 0x9d
	.long	7                               ; 0x7
	.long	137                             ; 0x89
	.long	115                             ; 0x73
	.long	149                             ; 0x95
	.long	63                              ; 0x3f
	.long	65                              ; 0x41
	.long	235                             ; 0xeb
	.long	13                              ; 0xd
	.long	247                             ; 0xf7
	.long	121                             ; 0x79
	.long	227                             ; 0xe3
	.long	5                               ; 0x5
	.long	47                              ; 0x2f
	.long	49                              ; 0x31
	.long	91                              ; 0x5b
	.long	125                             ; 0x7d
	.long	231                             ; 0xe7
	.long	105                             ; 0x69
	.long	83                              ; 0x53
	.long	117                             ; 0x75
	.long	31                              ; 0x1f
	.long	33                              ; 0x21
	.long	203                             ; 0xcb
	.long	237                             ; 0xed
	.long	215                             ; 0xd7
	.long	89                              ; 0x59
	.long	195                             ; 0xc3
	.long	229                             ; 0xe5
	.long	15                              ; 0xf
	.long	17                              ; 0x11
	.long	59                              ; 0x3b
	.long	93                              ; 0x5d
	.long	199                             ; 0xc7
	.long	73                              ; 0x49
	.long	51                              ; 0x33
	.long	85                              ; 0x55
	.long	255                             ; 0xff
	.size	binvert_limb_table, 512

	.hidden	__oclc_ABI_version              ; @__oclc_ABI_version
	.type	__oclc_ABI_version,@object
	.weak	__oclc_ABI_version
	.p2align	2, 0x0
__oclc_ABI_version:
	.long	500                             ; 0x1f4
	.size	__oclc_ABI_version, 4

	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.ident	"AMD clang version 18.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.3.3 25012 e5bf7e55c91490b07c49d8960fa7983d864936c4)"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym sha256
	.addrsig_sym _Z6rotatejj
	.addrsig_sym _Z9bitselectiii
	.addrsig_sym SHA256_fresh
	.addrsig_sym sha256SwapByteOrder
	.addrsig_sym __printf_alloc
	.addrsig_sym longModuloByMul256
	.addrsig_sym _Z6mul_himm
	.addrsig_sym longModuloByMul384
	.addrsig_sym intInvert
	.addrsig_sym calculateOffset
	.addrsig_sym clFillMemoryByGroup
	.addrsig_sym _Z12get_local_idj
	.addrsig_sym flushLayer
	.addrsig_sym weave
	.addrsig_sym _Z14get_local_sizej
	.addrsig_sym _Z7barrierj
	.addrsig_sym _Z3maxjj
	.addrsig_sym _Z6vload8mPU3AS3Kj
	.addrsig_sym _Z12get_group_idj
	.addrsig_sym add128
	.addrsig_sym _Z13convert_uint4Dv4_i
	.addrsig_sym add128Carry
	.addrsig_sym add256
	.addrsig_sym add384
	.addrsig_sym add512
	.addrsig_sym sub64Borrow
	.addrsig_sym _Z13convert_uint2Dv2_i
	.addrsig_sym sub128
	.addrsig_sym sub128Borrow
	.addrsig_sym sub256
	.addrsig_sym sub384
	.addrsig_sym sub448
	.addrsig_sym mul128round
	.addrsig_sym _Z6mul_hiDv4_jS_
	.addrsig_sym mul128schoolBook_v3
	.addrsig_sym _Z6mul_hijj
	.addrsig_sym mul256round_v3
	.addrsig_sym mul384round_v3
	.addrsig_sym mul448round_v3
	.addrsig_sym _Z6mul_hiDv2_jS_
	.addrsig_sym mul256schoolBook_v3
	.addrsig_sym mul384schoolBook_v3
	.addrsig_sym mul448schoolBook_v3
	.addrsig_sym mul512schoolBook_v3
	.addrsig_sym _Z15get_global_sizej
	.addrsig_sym _Z13get_global_idj
	.addrsig_sym lshiftByLimb2
	.addrsig_sym lshiftByLimb3
	.addrsig_sym rshiftByLimb3
	.addrsig_sym lshiftByLimb4
	.addrsig_sym rshiftByLimb4
	.addrsig_sym lshiftByLimb5
	.addrsig_sym rshiftByLimb5
	.addrsig_sym lshift2
	.addrsig_sym lshift3
	.addrsig_sym rshift3
	.addrsig_sym lshift4
	.addrsig_sym lshift5
	.addrsig_sym rshift4
	.addrsig_sym rshift5
	.addrsig_sym subMul1_v2
	.addrsig_sym _Z13convert_uint3Dv3_i
	.addrsig_sym subMul1_v3
	.addrsig_sym subMul1_512
	.addrsig_sym modulo384to256
	.addrsig_sym modulo512to384
	.addrsig_sym modulo640to512
	.addrsig_sym invert_limb
	.addrsig_sym redc256_round_v3
	.addrsig_sym redc384_round_v3
	.addrsig_sym redc448_round_v3
	.addrsig_sym redc1_256_v3
	.addrsig_sym redc1_384_v3
	.addrsig_sym redc1_448_v3
	.addrsig_sym montgomeryMul256
	.addrsig_sym FermatTest256
	.addrsig_sym montgomeryMul384
	.addrsig_sym FermatTest384
	.addrsig_sym montgomeryMul448
	.addrsig_sym FermatTest448
	.addrsig_sym mul384_1
	.addrsig_sym extractMultipliers2
	.addrsig_sym doFermatTestC12
	.addrsig_sym bitwinChainLength
	.addrsig_sym doFermatTestBt
	.addrsig_sym ES
	.addrsig_sym K
	.addrsig_sym binvert_limb_table
	.amdgpu_metadata
---
amdhsa.kernels:
  - .args:
      - .address_space:  global
        .name:           fixedMultipliers
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           cunningham1Bitfield
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           cunningham2Bitfield
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           bitwinBitfield
        .offset:         24
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  constant
        .is_const:       true
        .name:           primes
        .offset:         32
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           multipliers64
        .offset:         40
        .size:           8
        .type_name:      'uint64_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           offsets64
        .offset:         48
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           roundsNum
        .offset:         56
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         64
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         68
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         72
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         76
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         78
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         80
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         82
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         84
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         86
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         104
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         112
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         120
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         128
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         136
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         144
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         152
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         160
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         168
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         264
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 16384
    .kernarg_segment_align: 8
    .kernarg_segment_size: 320
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           sieveBenchmark
    .private_segment_fixed_size: 2268
    .sgpr_count:     36
    .sgpr_spill_count: 17
    .symbol:         sieveBenchmark.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     38
    .vgpr_spill_count: 9
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           m1
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           m2
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           out
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           multiplyBenchmark128
    .private_segment_fixed_size: 512
    .sgpr_count:     36
    .sgpr_spill_count: 30
    .symbol:         multiplyBenchmark128.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     32
    .vgpr_spill_count: 9
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           m1
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           m2
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           out
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           multiplyBenchmark256
    .private_segment_fixed_size: 848
    .sgpr_count:     36
    .sgpr_spill_count: 30
    .symbol:         multiplyBenchmark256.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     32
    .vgpr_spill_count: 9
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           m1
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           m2
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           out
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           multiplyBenchmark384
    .private_segment_fixed_size: 1168
    .sgpr_count:     36
    .sgpr_spill_count: 30
    .symbol:         multiplyBenchmark384.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     39
    .vgpr_spill_count: 9
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           m1
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           m2
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           out
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           multiplyBenchmark448
    .private_segment_fixed_size: 1360
    .sgpr_count:     36
    .sgpr_spill_count: 33
    .symbol:         multiplyBenchmark448.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     52
    .vgpr_spill_count: 9
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           m1
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           m2
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           out
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           multiplyBenchmark512
    .private_segment_fixed_size: 592
    .sgpr_count:     36
    .sgpr_spill_count: 37
    .symbol:         multiplyBenchmark512.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     37
    .vgpr_spill_count: 11
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           numbers
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           result
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         16
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         24
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         28
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         36
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         38
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         40
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         42
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         44
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         46
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         64
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         88
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         96
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         104
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         120
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         128
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         224
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 280
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           fermatTestBenchMark256
    .private_segment_fixed_size: 2736
    .sgpr_count:     36
    .sgpr_spill_count: 31
    .symbol:         fermatTestBenchMark256.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     40
    .vgpr_spill_count: 12
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           numbers
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           result
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         16
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         24
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         28
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         36
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         38
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         40
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         42
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         44
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         46
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         64
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         88
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         96
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         104
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         120
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         128
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         224
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 280
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           fermatTestBenchMark384
    .private_segment_fixed_size: 3184
    .sgpr_count:     36
    .sgpr_spill_count: 31
    .symbol:         fermatTestBenchMark384.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     50
    .vgpr_spill_count: 12
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           numbers
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           result
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         16
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         24
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         28
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         36
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         38
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         40
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         42
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         44
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         46
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         64
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         88
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         96
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         104
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         120
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         128
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         224
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 280
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           fermatTestBenchMark448
    .private_segment_fixed_size: 3792
    .sgpr_count:     36
    .sgpr_spill_count: 32
    .symbol:         fermatTestBenchMark448.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     65
    .vgpr_spill_count: 18
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           dividends
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           divisors
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           modulos
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           modulo384to256test
    .private_segment_fixed_size: 736
    .sgpr_count:     36
    .sgpr_spill_count: 31
    .symbol:         modulo384to256test.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     32
    .vgpr_spill_count: 12
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           dividends
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           divisors
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           modulos
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           modulo512to384test
    .private_segment_fixed_size: 928
    .sgpr_count:     36
    .sgpr_spill_count: 31
    .symbol:         modulo512to384test.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     38
    .vgpr_spill_count: 12
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           dividends
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           divisors
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           modulos
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .name:           elementsNum
        .offset:         24
        .size:           4
        .type_name:      uint
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         36
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         44
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         46
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         48
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         50
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         52
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         54
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         96
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         104
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         112
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         128
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         136
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         232
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 288
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           modulo640to512test
    .private_segment_fixed_size: 1152
    .sgpr_count:     36
    .sgpr_spill_count: 34
    .symbol:         modulo640to512test.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     43
    .vgpr_spill_count: 12
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  constant
        .is_const:       true
        .name:           block
        .offset:         0
        .size:           8
        .type_name:      'uint4*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           nonceAndHash
        .offset:         8
        .size:           8
        .type_name:      'struct GPUNonceAndHash*'
        .value_kind:     global_buffer
      - .address_space:  constant
        .is_const:       true
        .name:           primes
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           multipliers64
        .offset:         24
        .size:           8
        .type_name:      'uint64_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           offsets64
        .offset:         32
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .offset:         40
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         44
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         48
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         52
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         54
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         56
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         58
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         60
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         62
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         96
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         104
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         112
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         120
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         128
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         136
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         144
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         240
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 8448
    .kernarg_segment_align: 8
    .kernarg_segment_size: 296
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           searchNonce
    .private_segment_fixed_size: 3200
    .sgpr_count:     36
    .sgpr_spill_count: 128
    .symbol:         searchNonce.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     41
    .vgpr_spill_count: 101
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           cunningham1Bitfield
        .offset:         0
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           cunningham2Bitfield
        .offset:         8
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           bitwinBitfield
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  constant
        .is_const:       true
        .name:           primorial
        .offset:         24
        .size:           8
        .type_name:      'uint4*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           nonceAndHash
        .offset:         32
        .size:           8
        .type_name:      'struct GPUNonceAndHash*'
        .value_kind:     global_buffer
      - .address_space:  constant
        .is_const:       true
        .name:           primes
        .offset:         40
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           multipliers64
        .offset:         48
        .size:           8
        .type_name:      'uint64_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           offsets64
        .offset:         56
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .offset:         64
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         68
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         72
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         76
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         78
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         80
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         82
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         84
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         86
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         104
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         112
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         120
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         128
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         136
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         144
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         152
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         160
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         168
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         264
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 16384
    .kernarg_segment_align: 8
    .kernarg_segment_size: 320
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           sieve
    .private_segment_fixed_size: 2364
    .sgpr_count:     36
    .sgpr_spill_count: 17
    .symbol:         sieve.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     38
    .vgpr_spill_count: 16
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           nonceAndHash
        .offset:         0
        .size:           8
        .type_name:      'struct GPUNonceAndHash*'
        .value_kind:     global_buffer
      - .address_space:  constant
        .is_const:       true
        .name:           primorial
        .offset:         8
        .size:           8
        .type_name:      'uint4*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           cunningham1Bitfield
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           cunningham2Bitfield
        .offset:         24
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           bitwinBitfield
        .offset:         32
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           c1Queue
        .offset:         40
        .size:           8
        .type_name:      'struct FermatQueue*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           c2Queue
        .offset:         48
        .size:           8
        .type_name:      'struct FermatQueue*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           btQueue
        .offset:         56
        .size:           8
        .type_name:      'struct FermatQueue*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           results
        .offset:         64
        .size:           8
        .type_name:      'struct FermatTestResults*'
        .value_kind:     global_buffer
      - .offset:         72
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         76
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         80
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         84
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         86
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         88
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         90
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         92
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         94
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         112
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         120
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         128
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         136
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         144
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         152
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         160
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         168
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         176
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         272
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 1548
    .kernarg_segment_align: 8
    .kernarg_segment_size: 328
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           FermatTestEnqueue
    .private_segment_fixed_size: 3616
    .sgpr_count:     36
    .sgpr_spill_count: 20
    .symbol:         FermatTestEnqueue.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     50
    .vgpr_spill_count: 20
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .address_space:  global
        .name:           nonceAndHash
        .offset:         0
        .size:           8
        .type_name:      'struct GPUNonceAndHash*'
        .value_kind:     global_buffer
      - .address_space:  constant
        .is_const:       true
        .name:           primorial
        .offset:         8
        .size:           8
        .type_name:      'uint4*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           cunningham1Bitfield
        .offset:         16
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           cunningham2Bitfield
        .offset:         24
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           bitwinBitfield
        .offset:         32
        .size:           8
        .type_name:      'uint32_t*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           c1Queue
        .offset:         40
        .size:           8
        .type_name:      'struct FermatQueue*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           c2Queue
        .offset:         48
        .size:           8
        .type_name:      'struct FermatQueue*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           btQueue
        .offset:         56
        .size:           8
        .type_name:      'struct FermatQueue*'
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           results
        .offset:         64
        .size:           8
        .type_name:      'struct FermatTestResults*'
        .value_kind:     global_buffer
      - .offset:         72
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         76
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         80
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         84
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         86
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         88
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         90
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         92
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         94
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         112
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         120
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         128
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         136
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         144
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         152
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         160
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         168
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         176
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         272
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 1548
    .kernarg_segment_align: 8
    .kernarg_segment_size: 328
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           FermatTestEnqueueBt
    .private_segment_fixed_size: 3584
    .sgpr_count:     36
    .sgpr_spill_count: 15
    .symbol:         FermatTestEnqueueBt.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     50
    .vgpr_spill_count: 9
    .wavefront_size: 32
    .workgroup_processor_mode: 1
  - .args:
      - .offset:         0
        .size:           4
        .value_kind:     hidden_block_count_x
      - .offset:         4
        .size:           4
        .value_kind:     hidden_block_count_y
      - .offset:         8
        .size:           4
        .value_kind:     hidden_block_count_z
      - .offset:         12
        .size:           2
        .value_kind:     hidden_group_size_x
      - .offset:         14
        .size:           2
        .value_kind:     hidden_group_size_y
      - .offset:         16
        .size:           2
        .value_kind:     hidden_group_size_z
      - .offset:         18
        .size:           2
        .value_kind:     hidden_remainder_x
      - .offset:         20
        .size:           2
        .value_kind:     hidden_remainder_y
      - .offset:         22
        .size:           2
        .value_kind:     hidden_remainder_z
      - .offset:         40
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         48
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         56
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .offset:         64
        .size:           2
        .value_kind:     hidden_grid_dims
      - .offset:         72
        .size:           8
        .value_kind:     hidden_printf_buffer
      - .offset:         80
        .size:           8
        .value_kind:     hidden_hostcall_buffer
      - .offset:         88
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
      - .offset:         96
        .size:           8
        .value_kind:     hidden_heap_v1
      - .offset:         104
        .size:           8
        .value_kind:     hidden_default_queue
      - .offset:         200
        .size:           8
        .value_kind:     hidden_queue_ptr
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 256
    .language:       OpenCL C
    .language_version:
      - 1
      - 2
    .max_flat_workgroup_size: 256
    .name:           empty
    .private_segment_fixed_size: 0
    .sgpr_count:     34
    .sgpr_spill_count: 0
    .symbol:         empty.kd
    .uniform_work_group_size: 1
    .uses_dynamic_stack: false
    .vgpr_count:     0
    .vgpr_spill_count: 0
    .wavefront_size: 32
    .workgroup_processor_mode: 1
amdhsa.printf:
  - '1:4:4:4:4:4:%08X %08X %08X %08X '
amdhsa.target:   amdgcn-amd-amdhsa--gfx1103
amdhsa.version:
  - 1
  - 2
...

	.end_amdgpu_metadata
